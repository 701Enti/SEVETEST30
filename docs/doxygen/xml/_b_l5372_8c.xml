<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="zh">
  <compounddef id="_b_l5372_8c" kind="file" language="C++">
    <compoundname>BL5372.c</compoundname>
    <includes refid="_b_l5372_8h" local="yes">BL5372.h</includes>
    <includes local="yes">esp_log.h</includes>
    <includes refid="board__def_8h" local="yes">board_def.h</includes>
    <includes local="yes">driver/i2c.h</includes>
    <incdepgraph>
      <node id="5">
        <label>board_def.h</label>
        <link refid="board__def_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>BL5372.h</label>
        <link refid="_b_l5372_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>main/BL5372.c</label>
        <link refid="_b_l5372_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>audio_hal.h</label>
      </node>
      <node id="7">
        <label>driver/i2c.h</label>
      </node>
      <node id="8">
        <label>esp_gatts_api.h</label>
      </node>
      <node id="4">
        <label>esp_log.h</label>
      </node>
      <node id="3">
        <label>esp_types.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="_b_l5372_8c_1ab4ffd22ffd5487ae847853e73f024c14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BL5372_time_now_set</definition>
        <argsstring>(BL5372_time_t *time)</argsstring>
        <name>BL5372_time_now_set</name>
        <param>
          <type><ref refid="struct_b_l5372__time__t" kindref="compound">BL5372_time_t</ref> *</type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>设置BL5372实时时间 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>作为设置实时时间的数据的地址 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/BL5372.c" line="38" column="6" bodyfile="main/BL5372.c" bodystart="38" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="_b_l5372_8c_1abc6efb96aec0a2b7eeb07433f95fe108" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BL5372_time_now_get</definition>
        <argsstring>(BL5372_time_t *time)</argsstring>
        <name>BL5372_time_now_get</name>
        <param>
          <type><ref refid="struct_b_l5372__time__t" kindref="compound">BL5372_time_t</ref> *</type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>获取BL5372实时时间 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>保存实时时间的数据的地址 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/BL5372.c" line="71" column="6" bodyfile="main/BL5372.c" bodystart="71" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="_b_l5372_8c_1ad90b138ff5484df450e72058392f2b5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BL5372_time_alarm_set</definition>
        <argsstring>(BL5372_alarm_select_t alarm, BL5372_time_t *time, BL5372_alarm_cycle_plan_t *cycle_plan)</argsstring>
        <name>BL5372_time_alarm_set</name>
        <param>
          <type><ref refid="_b_l5372_8h_1a5b3fb5c003cb6efac9efcd986465200e" kindref="member">BL5372_alarm_select_t</ref></type>
          <declname>alarm</declname>
        </param>
        <param>
          <type><ref refid="struct_b_l5372__time__t" kindref="compound">BL5372_time_t</ref> *</type>
          <declname>time</declname>
        </param>
        <param>
          <type><ref refid="struct_b_l5372__alarm__cycle__plan__t" kindref="compound">BL5372_alarm_cycle_plan_t</ref> *</type>
          <declname>cycle_plan</declname>
        </param>
        <briefdescription>
<para>设置任意闹钟的设置时间,设置完成后不会进行打开关闭闹钟操作，需要自行调用BL5372_alarm_status_set </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>alarm</parametername>
</parameternamelist>
<parameterdescription>
<para>选择闹钟，这是一个枚举类型 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>要设置的时间数据的地址,除了 时 分 其他都是无效的 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cycle_plan</parametername>
</parameternamelist>
<parameterdescription>
<para>闹钟重复计划数据的地址 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/BL5372.c" line="103" column="6" bodyfile="main/BL5372.c" bodystart="103" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="_b_l5372_8c_1af5b481a6186c79a8ba0f7c5cb763a455" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BL5372_time_alarm_get</definition>
        <argsstring>(BL5372_alarm_select_t alarm, BL5372_time_t *time, BL5372_alarm_cycle_plan_t *cycle_plan)</argsstring>
        <name>BL5372_time_alarm_get</name>
        <param>
          <type><ref refid="_b_l5372_8h_1a5b3fb5c003cb6efac9efcd986465200e" kindref="member">BL5372_alarm_select_t</ref></type>
          <declname>alarm</declname>
        </param>
        <param>
          <type><ref refid="struct_b_l5372__time__t" kindref="compound">BL5372_time_t</ref> *</type>
          <declname>time</declname>
        </param>
        <param>
          <type><ref refid="struct_b_l5372__alarm__cycle__plan__t" kindref="compound">BL5372_alarm_cycle_plan_t</ref> *</type>
          <declname>cycle_plan</declname>
        </param>
        <briefdescription>
<para>获取任意闹钟的设置时间 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>alarm</parametername>
</parameternamelist>
<parameterdescription>
<para>选择闹钟，这是一个枚举类型 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>保存设置时间的数据的地址,除了 时 分 其他都是无效的 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cycle_plan</parametername>
</parameternamelist>
<parameterdescription>
<para>保存闹钟重复数据的地址 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/BL5372.c" line="155" column="6" bodyfile="main/BL5372.c" bodystart="155" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="_b_l5372_8c_1a0b386df2388bfa20826c41cad4384605" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BL5372_alarm_status_set</definition>
        <argsstring>(BL5372_alarm_select_t alarm, bool status)</argsstring>
        <name>BL5372_alarm_status_set</name>
        <param>
          <type><ref refid="_b_l5372_8h_1a5b3fb5c003cb6efac9efcd986465200e" kindref="member">BL5372_alarm_select_t</ref></type>
          <declname>alarm</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>status</declname>
        </param>
        <briefdescription>
<para>设置任意闹钟的打开状态 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>alarm</parametername>
</parameternamelist>
<parameterdescription>
<para>选择闹钟，这是一个枚举类型 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status</parametername>
</parameternamelist>
<parameterdescription>
<para>设置的状态,设置为true打开闹钟 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/BL5372.c" line="203" column="6" bodyfile="main/BL5372.c" bodystart="203" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="_b_l5372_8c_1a9d467c2faa5c9b661e35d64e02adf865" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BL5372_alarm_status_get</definition>
        <argsstring>(BL5372_alarm_select_t alarm)</argsstring>
        <name>BL5372_alarm_status_get</name>
        <param>
          <type><ref refid="_b_l5372_8h_1a5b3fb5c003cb6efac9efcd986465200e" kindref="member">BL5372_alarm_select_t</ref></type>
          <declname>alarm</declname>
        </param>
        <briefdescription>
<para>获取任意闹钟的打开状态 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>alarm</parametername>
</parameternamelist>
<parameterdescription>
<para>选择闹钟，这是一个枚举类型 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>闹钟的状态，true为闹钟打开 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/BL5372.c" line="228" column="6" bodyfile="main/BL5372.c" bodystart="228" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="_b_l5372_8c_1ae54bf5c6e718ab6e80d9213e2286ae26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BL5372_alarm_is_ringing</definition>
        <argsstring>(BL5372_alarm_select_t alarm)</argsstring>
        <name>BL5372_alarm_is_ringing</name>
        <param>
          <type><ref refid="_b_l5372_8h_1a5b3fb5c003cb6efac9efcd986465200e" kindref="member">BL5372_alarm_select_t</ref></type>
          <declname>alarm</declname>
        </param>
        <briefdescription>
<para>现在选择的闹钟是否在响铃 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>alarm</parametername>
</parameternamelist>
<parameterdescription>
<para>选择闹钟，这是一个枚举类型 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true表示正在响铃 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/BL5372.c" line="249" column="6" bodyfile="main/BL5372.c" bodystart="249" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="_b_l5372_8c_1a8cb8d59ef43d0b02948c035e6a4d9dc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BL5372_alarm_stop_ringing</definition>
        <argsstring>(BL5372_alarm_select_t alarm)</argsstring>
        <name>BL5372_alarm_stop_ringing</name>
        <param>
          <type><ref refid="_b_l5372_8h_1a5b3fb5c003cb6efac9efcd986465200e" kindref="member">BL5372_alarm_select_t</ref></type>
          <declname>alarm</declname>
        </param>
        <briefdescription>
<para>让选择的闹钟停止响铃,但是不会关闭闹钟，需要自行调用BL5372_alarm_status_set </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>alarm</parametername>
</parameternamelist>
<parameterdescription>
<para>选择闹钟，这是一个枚举类型 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/BL5372.c" line="268" column="6" bodyfile="main/BL5372.c" bodystart="268" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="_b_l5372_8c_1a3f4a110f0c1c4924e8aa514268ec7085" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BL5372_config_init</definition>
        <argsstring>()</argsstring>
        <name>BL5372_config_init</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/BL5372.c" line="289" column="6" bodyfile="main/BL5372.c" bodystart="289" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="_b_l5372_8c_1ae6edc395a90e2e8e6e1b5bc5d72910bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BL5372_config_set</definition>
        <argsstring>(BL5372_cfg_t *rtc_cfg)</argsstring>
        <name>BL5372_config_set</name>
        <param>
          <type><ref refid="struct_b_l5372__cfg__t" kindref="compound">BL5372_cfg_t</ref> *</type>
          <declname>rtc_cfg</declname>
        </param>
        <briefdescription>
<para>设置BL5372的运行配置 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rtc_cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>作为运行配置的数据的地址 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/BL5372.c" line="298" column="6" bodyfile="main/BL5372.c" bodystart="298" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="_b_l5372_8c_1aadb5d12fcecc2675c40e6290068579b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BL5372_config_get</definition>
        <argsstring>(BL5372_cfg_t *rtc_cfg)</argsstring>
        <name>BL5372_config_get</name>
        <param>
          <type><ref refid="struct_b_l5372__cfg__t" kindref="compound">BL5372_cfg_t</ref> *</type>
          <declname>rtc_cfg</declname>
        </param>
        <briefdescription>
<para>获取BL5372的运行配置 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rtc_cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>保存运行配置的数据的地址 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/BL5372.c" line="336" column="6" bodyfile="main/BL5372.c" bodystart="336" bodyend="364"/>
      </memberdef>
      <memberdef kind="function" id="_b_l5372_8c_1aa29e8f8bbd40c71b00619d1cafba5ee1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t BCD8421_transform_recode</definition>
        <argsstring>(uint8_t bin_dat)</argsstring>
        <name>BCD8421_transform_recode</name>
        <param>
          <type>uint8_t</type>
          <declname>bin_dat</declname>
        </param>
        <briefdescription>
<para>由8bits 8421BCD码解码为十进制数 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bin_dat</parametername>
</parameternamelist>
<parameterdescription>
<para>8421BCD码,必须小于或等于8个bit </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>十进制数,小于或等于两位 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/BL5372.c" line="370" column="9" bodyfile="main/BL5372.c" bodystart="370" bodyend="376"/>
      </memberdef>
      <memberdef kind="function" id="_b_l5372_8c_1a0b7ac499765d27486d43ac3fc8f2dd2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t BCD8421_transform_decode</definition>
        <argsstring>(uint8_t dec_dat)</argsstring>
        <name>BCD8421_transform_decode</name>
        <param>
          <type>uint8_t</type>
          <declname>dec_dat</declname>
        </param>
        <briefdescription>
<para>由十进制数编码为8bits 8421BCD码 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dec_dat</parametername>
</parameternamelist>
<parameterdescription>
<para>十进制数,必须小于或等于两位的数 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>8421BCD码8bits </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/BL5372.c" line="381" column="9" bodyfile="main/BL5372.c" bodystart="381" bodyend="387"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>701Enti<sp/>MIT<sp/>License</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>©<sp/>2024<sp/>&lt;701Enti<sp/>organization&gt;</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>“Software”),</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>“AS<sp/>IS”,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR<sp/>IMPLIED,</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>该文件归属701Enti组织，SEVETEST30开发团队应该提供责任性维护，包含各种SE30对外部RTC芯片<sp/>BL5372的支持</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>如您发现一些问题，请及时联系我们，我们非常感谢您的支持</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>敬告：文件本体不包含i2c通讯的任何初始化配置，若您单独使用而未进行配置，这可能无法运行</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>目前没有考虑12小时制的读取,因为24小时制的运行更加利于SWEDA的时间同步和写入，而24小时制可以在UI显示时很方便的操作显示为12小时制而无需调度硬件</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>BL5372在SEVETEST30控制板使用的是电池供电，调试时请保证其电源的供应，连接电池或接入VCC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>github:<sp/>https://github.com/701Enti</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>bilibili:<sp/>701Enti</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_b_l5372_8h" kindref="compound">BL5372.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;esp_log.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="board__def_8h" kindref="compound">board_def.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;driver/i2c.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_b_l5372_8c_1ab4ffd22ffd5487ae847853e73f024c14" kindref="member">BL5372_time_now_set</ref>(<ref refid="struct_b_l5372__time__t" kindref="compound">BL5372_time_t</ref><sp/>*time)</highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;BL5372_time_now_set&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!time){</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,</highlight><highlight class="stringliteral">&quot;导入了为空的数据地址&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>write_buf[8]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>设置内部寄存器地址和传输配置0000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>write_buf[0]<sp/>=<sp/><ref refid="_b_l5372_8h_1af813f9cce0ddf198ee4c9cc49b009b35aba534620a5eb4f03343ec1b6bf8ee347" kindref="member">BL5372_REG_TIME_SEC</ref><sp/>&lt;&lt;<sp/>4;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>映射写入的值</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>write_buf[1]<sp/>=<sp/><ref refid="_b_l5372_8c_1a0b7ac499765d27486d43ac3fc8f2dd2d" kindref="member">BCD8421_transform_decode</ref>(time-&gt;<ref refid="struct_b_l5372__time__t_1a3b67966a856579903726a7d004fc1ddd" kindref="member">second</ref>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>write_buf[2]<sp/>=<sp/><ref refid="_b_l5372_8c_1a0b7ac499765d27486d43ac3fc8f2dd2d" kindref="member">BCD8421_transform_decode</ref>(time-&gt;<ref refid="struct_b_l5372__time__t_1af1de38e893ffc7bfa31490ef860058af" kindref="member">minute</ref>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>write_buf[3]<sp/>=<sp/><ref refid="_b_l5372_8c_1a0b7ac499765d27486d43ac3fc8f2dd2d" kindref="member">BCD8421_transform_decode</ref>(time-&gt;<ref refid="struct_b_l5372__time__t_1a0cb6dd7101446970d2a9e6e04120d9fc" kindref="member">hour</ref>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>write_buf[4]<sp/>=<sp/><ref refid="_b_l5372_8c_1a0b7ac499765d27486d43ac3fc8f2dd2d" kindref="member">BCD8421_transform_decode</ref>(time-&gt;<ref refid="struct_b_l5372__time__t_1a1caf831ec6c4bb535952ac14b6e54128" kindref="member">week</ref>);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>write_buf[5]<sp/>=<sp/><ref refid="_b_l5372_8c_1a0b7ac499765d27486d43ac3fc8f2dd2d" kindref="member">BCD8421_transform_decode</ref>(time-&gt;<ref refid="struct_b_l5372__time__t_1aec3a1e6ba915f53a80df7a8d7b1fe2b8" kindref="member">day</ref>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>write_buf[6]<sp/>=<sp/><ref refid="_b_l5372_8c_1a0b7ac499765d27486d43ac3fc8f2dd2d" kindref="member">BCD8421_transform_decode</ref>(time-&gt;<ref refid="struct_b_l5372__time__t_1a573fab5b67f284fee5e9a939c7bd52aa" kindref="member">month</ref>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>write_buf[7]<sp/>=<sp/><ref refid="_b_l5372_8c_1a0b7ac499765d27486d43ac3fc8f2dd2d" kindref="member">BCD8421_transform_decode</ref>(time-&gt;<ref refid="struct_b_l5372__time__t_1afa987dc6281f28c6200e81f42b5c179a" kindref="member">year</ref>);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_err_t<sp/>err<sp/>=<sp/>i2c_master_write_to_device(<ref refid="board__def_8h_1a6c09d42369f3cc4c366118ce5241ba68" kindref="member">DEVICE_I2C_PORT</ref>,<sp/><ref refid="_b_l5372_8h_1a534b76ba10d1f1380d2618173c257cdf" kindref="member">BL5372_DEVICE_ADD</ref>,<sp/>write_buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(write_buf),<sp/>1000<sp/>/<sp/>portTICK_PERIOD_MS);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>ESP_OK)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;与外部离线RTC通讯时发现问题,请检查电池电源连接<sp/>描述：<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>esp_err_to_name(err));</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;外部离线RTC实时时间已更新&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_b_l5372_8c_1abc6efb96aec0a2b7eeb07433f95fe108" kindref="member">BL5372_time_now_get</ref>(<ref refid="struct_b_l5372__time__t" kindref="compound">BL5372_time_t</ref><sp/>*time)</highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;BL5372_time_now_get&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!time){</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,</highlight><highlight class="stringliteral">&quot;导入了为空的数据地址&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>read_buf[7]<sp/>=<sp/>{0};<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>读取缓存</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>write_buf<sp/>=<sp/><ref refid="_b_l5372_8h_1af813f9cce0ddf198ee4c9cc49b009b35aba534620a5eb4f03343ec1b6bf8ee347" kindref="member">BL5372_REG_TIME_SEC</ref><sp/>&lt;&lt;<sp/>4;<sp/></highlight><highlight class="comment">//<sp/>高4位设置起始地址，低4位设置传输模式0000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_err_t<sp/>err<sp/>=<sp/>i2c_master_write_read_device(<ref refid="board__def_8h_1a6c09d42369f3cc4c366118ce5241ba68" kindref="member">DEVICE_I2C_PORT</ref>,<sp/><ref refid="_b_l5372_8h_1a534b76ba10d1f1380d2618173c257cdf" kindref="member">BL5372_DEVICE_ADD</ref>,<sp/>&amp;write_buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(write_buf),<sp/>read_buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(read_buf),<sp/>1000<sp/>/<sp/>portTICK_PERIOD_MS);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>ESP_OK)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;与外部离线RTC通讯时发现问题<sp/>请检查电池电源连接<sp/>描述：<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>esp_err_to_name(err));</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>time-&gt;<ref refid="struct_b_l5372__time__t_1a3b67966a856579903726a7d004fc1ddd" kindref="member">second</ref><sp/>=<sp/><ref refid="_b_l5372_8c_1aa29e8f8bbd40c71b00619d1cafba5ee1" kindref="member">BCD8421_transform_recode</ref>(read_buf[0]);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>time-&gt;<ref refid="struct_b_l5372__time__t_1af1de38e893ffc7bfa31490ef860058af" kindref="member">minute</ref><sp/>=<sp/><ref refid="_b_l5372_8c_1aa29e8f8bbd40c71b00619d1cafba5ee1" kindref="member">BCD8421_transform_recode</ref>(read_buf[1]);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>time-&gt;<ref refid="struct_b_l5372__time__t_1a0cb6dd7101446970d2a9e6e04120d9fc" kindref="member">hour</ref><sp/>=<sp/><ref refid="_b_l5372_8c_1aa29e8f8bbd40c71b00619d1cafba5ee1" kindref="member">BCD8421_transform_recode</ref>(read_buf[2]);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>time-&gt;<ref refid="struct_b_l5372__time__t_1a1caf831ec6c4bb535952ac14b6e54128" kindref="member">week</ref><sp/>=<sp/><ref refid="_b_l5372_8c_1aa29e8f8bbd40c71b00619d1cafba5ee1" kindref="member">BCD8421_transform_recode</ref>(read_buf[3]);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>time-&gt;<ref refid="struct_b_l5372__time__t_1aec3a1e6ba915f53a80df7a8d7b1fe2b8" kindref="member">day</ref><sp/>=<sp/><ref refid="_b_l5372_8c_1aa29e8f8bbd40c71b00619d1cafba5ee1" kindref="member">BCD8421_transform_recode</ref>(read_buf[4]);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>time-&gt;<ref refid="struct_b_l5372__time__t_1a573fab5b67f284fee5e9a939c7bd52aa" kindref="member">month</ref><sp/>=<sp/><ref refid="_b_l5372_8c_1aa29e8f8bbd40c71b00619d1cafba5ee1" kindref="member">BCD8421_transform_recode</ref>(read_buf[5]);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>time-&gt;<ref refid="struct_b_l5372__time__t_1afa987dc6281f28c6200e81f42b5c179a" kindref="member">year</ref><sp/>=<sp/><ref refid="_b_l5372_8c_1aa29e8f8bbd40c71b00619d1cafba5ee1" kindref="member">BCD8421_transform_recode</ref>(read_buf[6]);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;20%d<sp/>%d<sp/>%d<sp/><sp/>%d<sp/><sp/>%d<sp/>%d<sp/>%d&quot;</highlight><highlight class="normal">,time-&gt;<ref refid="struct_b_l5372__time__t_1afa987dc6281f28c6200e81f42b5c179a" kindref="member">year</ref>,time-&gt;<ref refid="struct_b_l5372__time__t_1a573fab5b67f284fee5e9a939c7bd52aa" kindref="member">month</ref>,time-&gt;<ref refid="struct_b_l5372__time__t_1aec3a1e6ba915f53a80df7a8d7b1fe2b8" kindref="member">day</ref>,time-&gt;<ref refid="struct_b_l5372__time__t_1a1caf831ec6c4bb535952ac14b6e54128" kindref="member">week</ref>,time-&gt;<ref refid="struct_b_l5372__time__t_1a0cb6dd7101446970d2a9e6e04120d9fc" kindref="member">hour</ref>,time-&gt;<ref refid="struct_b_l5372__time__t_1af1de38e893ffc7bfa31490ef860058af" kindref="member">minute</ref>,time-&gt;<ref refid="struct_b_l5372__time__t_1a3b67966a856579903726a7d004fc1ddd" kindref="member">second</ref>);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_b_l5372_8c_1ad90b138ff5484df450e72058392f2b5f" kindref="member">BL5372_time_alarm_set</ref>(<ref refid="_b_l5372_8h_1a5b3fb5c003cb6efac9efcd986465200e" kindref="member">BL5372_alarm_select_t</ref><sp/>alarm,<sp/><ref refid="struct_b_l5372__time__t" kindref="compound">BL5372_time_t</ref><sp/>*time,<ref refid="struct_b_l5372__alarm__cycle__plan__t" kindref="compound">BL5372_alarm_cycle_plan_t</ref><sp/>*cycle_plan)</highlight></codeline>
<codeline lineno="104"><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;BL5372_time_alarm_set&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!time<sp/>||<sp/>!cycle_plan){</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,</highlight><highlight class="stringliteral">&quot;导入了为空的数据地址&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>write_buf[4]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>设置内部寄存器地址和传输配置0000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alarm<sp/>==<sp/><ref refid="_b_l5372_8h_1a5b3fb5c003cb6efac9efcd986465200ea634977e113f734e6955c49ae9add8893" kindref="member">BL5372_ALARM_A</ref>)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_buf[0]<sp/>=<sp/><ref refid="_b_l5372_8h_1af813f9cce0ddf198ee4c9cc49b009b35afff35c0871b092e11be2d33dadd6a675" kindref="member">BL5372_REG_ALARM_A_MIN</ref><sp/>&lt;&lt;<sp/>4;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alarm<sp/>==<sp/><ref refid="_b_l5372_8h_1a5b3fb5c003cb6efac9efcd986465200eab1235a7d6243a5bca18789cb92dfaa48" kindref="member">BL5372_ALARM_B</ref>)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_buf[0]<sp/>=<sp/><ref refid="_b_l5372_8h_1af813f9cce0ddf198ee4c9cc49b009b35a2c078226c6618160af726e6eb1c79d3d" kindref="member">BL5372_REG_ALARM_B_MIN</ref><sp/>&lt;&lt;<sp/>4;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;不存在的闹钟计时器&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>映射写入的值</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>write_buf[1]<sp/>=<sp/><ref refid="_b_l5372_8c_1a0b7ac499765d27486d43ac3fc8f2dd2d" kindref="member">BCD8421_transform_decode</ref>(time-&gt;<ref refid="struct_b_l5372__time__t_1af1de38e893ffc7bfa31490ef860058af" kindref="member">minute</ref>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>write_buf[2]<sp/>=<sp/><ref refid="_b_l5372_8c_1a0b7ac499765d27486d43ac3fc8f2dd2d" kindref="member">BCD8421_transform_decode</ref>(time-&gt;<ref refid="struct_b_l5372__time__t_1a0cb6dd7101446970d2a9e6e04120d9fc" kindref="member">hour</ref>);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx=0;idx&lt;=6;idx++){</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>bit_buf;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>bit_buf<sp/>=<sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*)cycle_plan<sp/>+<sp/>idx;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>write_buf[3]<sp/>|=<sp/>*bit_buf<sp/>&lt;&lt;<sp/>(6<sp/>-<sp/>idx);<sp/></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(write_buf[3]<sp/>==<sp/>0x00)ESP_LOGW(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,</highlight><highlight class="stringliteral">&quot;设置了没有正确预定响铃周期的无效闹钟&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_err_t<sp/>err<sp/>=<sp/>i2c_master_write_to_device(<ref refid="board__def_8h_1a6c09d42369f3cc4c366118ce5241ba68" kindref="member">DEVICE_I2C_PORT</ref>,<sp/><ref refid="_b_l5372_8h_1a534b76ba10d1f1380d2618173c257cdf" kindref="member">BL5372_DEVICE_ADD</ref>,<sp/>write_buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(write_buf),<sp/>1000<sp/>/<sp/>portTICK_PERIOD_MS);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>ESP_OK)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;与外部离线RTC通讯时发现问题<sp/>请检查电池电源连接<sp/>描述：<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>esp_err_to_name(err));</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alarm<sp/>==<sp/><ref refid="_b_l5372_8h_1a5b3fb5c003cb6efac9efcd986465200ea634977e113f734e6955c49ae9add8893" kindref="member">BL5372_ALARM_A</ref>)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;外部离线RTC闹钟A时间已更新&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alarm<sp/>==<sp/><ref refid="_b_l5372_8h_1a5b3fb5c003cb6efac9efcd986465200eab1235a7d6243a5bca18789cb92dfaa48" kindref="member">BL5372_ALARM_B</ref>)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;外部离线RTC闹钟B时间已更新&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_b_l5372_8c_1af5b481a6186c79a8ba0f7c5cb763a455" kindref="member">BL5372_time_alarm_get</ref>(<ref refid="_b_l5372_8h_1a5b3fb5c003cb6efac9efcd986465200e" kindref="member">BL5372_alarm_select_t</ref><sp/>alarm,<sp/><ref refid="struct_b_l5372__time__t" kindref="compound">BL5372_time_t</ref><sp/>*time,<ref refid="struct_b_l5372__alarm__cycle__plan__t" kindref="compound">BL5372_alarm_cycle_plan_t</ref><sp/>*cycle_plan)</highlight></codeline>
<codeline lineno="156"><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;BL5372_time_alarm_get&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!time<sp/>||<sp/>!cycle_plan){</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,</highlight><highlight class="stringliteral">&quot;导入了为空的数据地址&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>设置内部寄存器地址和传输配置0000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>write_buf<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alarm<sp/>==<sp/><ref refid="_b_l5372_8h_1a5b3fb5c003cb6efac9efcd986465200ea634977e113f734e6955c49ae9add8893" kindref="member">BL5372_ALARM_A</ref>)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_buf<sp/>=<sp/><ref refid="_b_l5372_8h_1af813f9cce0ddf198ee4c9cc49b009b35afff35c0871b092e11be2d33dadd6a675" kindref="member">BL5372_REG_ALARM_A_MIN</ref><sp/>&lt;&lt;<sp/>4;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alarm<sp/>==<sp/><ref refid="_b_l5372_8h_1a5b3fb5c003cb6efac9efcd986465200eab1235a7d6243a5bca18789cb92dfaa48" kindref="member">BL5372_ALARM_B</ref>)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_buf<sp/>=<sp/><ref refid="_b_l5372_8h_1af813f9cce0ddf198ee4c9cc49b009b35a2c078226c6618160af726e6eb1c79d3d" kindref="member">BL5372_REG_ALARM_B_MIN</ref><sp/>&lt;&lt;<sp/>4;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;不存在的闹钟计时器&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>read_buf[3]<sp/>=<sp/>{0};<sp/></highlight><highlight class="comment">//<sp/>读取缓存</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_err_t<sp/>err<sp/>=<sp/>i2c_master_write_read_device(<ref refid="board__def_8h_1a6c09d42369f3cc4c366118ce5241ba68" kindref="member">DEVICE_I2C_PORT</ref>,<sp/><ref refid="_b_l5372_8h_1a534b76ba10d1f1380d2618173c257cdf" kindref="member">BL5372_DEVICE_ADD</ref>,<sp/>&amp;write_buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(write_buf),<sp/>read_buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(read_buf),<sp/>1000<sp/>/<sp/>portTICK_PERIOD_MS);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>ESP_OK)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;与外部离线RTC通讯时发现问题<sp/>请检查电池电源连接<sp/>描述：<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>esp_err_to_name(err));</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>time-&gt;<ref refid="struct_b_l5372__time__t_1af1de38e893ffc7bfa31490ef860058af" kindref="member">minute</ref><sp/>=<sp/><ref refid="_b_l5372_8c_1aa29e8f8bbd40c71b00619d1cafba5ee1" kindref="member">BCD8421_transform_recode</ref>(read_buf[0]);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>time-&gt;<ref refid="struct_b_l5372__time__t_1a0cb6dd7101446970d2a9e6e04120d9fc" kindref="member">hour</ref><sp/>=<sp/><ref refid="_b_l5372_8c_1aa29e8f8bbd40c71b00619d1cafba5ee1" kindref="member">BCD8421_transform_recode</ref>(read_buf[1]);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(read_buf[2]<sp/>==<sp/>0x00)ESP_LOGW(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,</highlight><highlight class="stringliteral">&quot;设置了没有正确预定响铃周期的无效闹钟&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx=0;idx&lt;=6;idx++){</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>bit_buf;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bit_buf<sp/>=<sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*)cycle_plan<sp/>+<sp/>idx;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*bit_buf<sp/>=<sp/>(read_buf[2]<sp/>&lt;&lt;<sp/>idx)<sp/>&amp;<sp/>0x40;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>time-&gt;<ref refid="struct_b_l5372__time__t_1a1caf831ec6c4bb535952ac14b6e54128" kindref="member">week</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>time-&gt;<ref refid="struct_b_l5372__time__t_1a3b67966a856579903726a7d004fc1ddd" kindref="member">second</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>time-&gt;<ref refid="struct_b_l5372__time__t_1aec3a1e6ba915f53a80df7a8d7b1fe2b8" kindref="member">day</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>time-&gt;<ref refid="struct_b_l5372__time__t_1a573fab5b67f284fee5e9a939c7bd52aa" kindref="member">month</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>time-&gt;<ref refid="struct_b_l5372__time__t_1afa987dc6281f28c6200e81f42b5c179a" kindref="member">year</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_b_l5372_8c_1a0b386df2388bfa20826c41cad4384605" kindref="member">BL5372_alarm_status_set</ref>(<ref refid="_b_l5372_8h_1a5b3fb5c003cb6efac9efcd986465200e" kindref="member">BL5372_alarm_select_t</ref><sp/>alarm,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>status)</highlight></codeline>
<codeline lineno="204"><highlight class="normal">{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;BL5372_alarm_status_set&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_b_l5372__cfg__t" kindref="compound">BL5372_cfg_t</ref><sp/>cfg_buf;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_b_l5372_8c_1aadb5d12fcecc2675c40e6290068579b4" kindref="member">BL5372_config_get</ref>(&amp;cfg_buf);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alarm<sp/>==<sp/><ref refid="_b_l5372_8h_1a5b3fb5c003cb6efac9efcd986465200ea634977e113f734e6955c49ae9add8893" kindref="member">BL5372_ALARM_A</ref>)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cfg_buf.<ref refid="struct_b_l5372__cfg__t_1afa21af661684d4a504b088a4f5fb10a7" kindref="member">alarm_A_en</ref><sp/>=<sp/>status;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alarm<sp/>==<sp/><ref refid="_b_l5372_8h_1a5b3fb5c003cb6efac9efcd986465200eab1235a7d6243a5bca18789cb92dfaa48" kindref="member">BL5372_ALARM_B</ref>)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cfg_buf.<ref refid="struct_b_l5372__cfg__t_1a5e87cce37b6270657c4a83d7dfd3d867" kindref="member">alarm_B_en</ref><sp/>=<sp/>status;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;不存在的闹钟计时器&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_b_l5372_8c_1ae6edc395a90e2e8e6e1b5bc5d72910bb" kindref="member">BL5372_config_set</ref>(&amp;cfg_buf);</highlight></codeline>
<codeline lineno="222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_b_l5372_8c_1a9d467c2faa5c9b661e35d64e02adf865" kindref="member">BL5372_alarm_status_get</ref>(<ref refid="_b_l5372_8h_1a5b3fb5c003cb6efac9efcd986465200e" kindref="member">BL5372_alarm_select_t</ref><sp/>alarm)</highlight></codeline>
<codeline lineno="229"><highlight class="normal">{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;BL5372_alarm_status_get&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_b_l5372__cfg__t" kindref="compound">BL5372_cfg_t</ref><sp/>cfg_buf;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_b_l5372_8c_1aadb5d12fcecc2675c40e6290068579b4" kindref="member">BL5372_config_get</ref>(&amp;cfg_buf);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alarm<sp/>==<sp/><ref refid="_b_l5372_8h_1a5b3fb5c003cb6efac9efcd986465200ea634977e113f734e6955c49ae9add8893" kindref="member">BL5372_ALARM_A</ref>)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cfg_buf.<ref refid="struct_b_l5372__cfg__t_1afa21af661684d4a504b088a4f5fb10a7" kindref="member">alarm_A_en</ref>;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alarm<sp/>==<sp/><ref refid="_b_l5372_8h_1a5b3fb5c003cb6efac9efcd986465200eab1235a7d6243a5bca18789cb92dfaa48" kindref="member">BL5372_ALARM_B</ref>)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cfg_buf.<ref refid="struct_b_l5372__cfg__t_1a5e87cce37b6270657c4a83d7dfd3d867" kindref="member">alarm_B_en</ref>;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;不存在的闹钟计时器&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cfg_buf.<ref refid="struct_b_l5372__cfg__t_1a5e87cce37b6270657c4a83d7dfd3d867" kindref="member">alarm_B_en</ref>;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_b_l5372_8c_1ae54bf5c6e718ab6e80d9213e2286ae26" kindref="member">BL5372_alarm_is_ringing</ref>(<ref refid="_b_l5372_8h_1a5b3fb5c003cb6efac9efcd986465200e" kindref="member">BL5372_alarm_select_t</ref><sp/>alarm){</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;BL5372_alarm_is_ringing&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_b_l5372__cfg__t" kindref="compound">BL5372_cfg_t</ref><sp/>cfg_buf;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_b_l5372_8c_1aadb5d12fcecc2675c40e6290068579b4" kindref="member">BL5372_config_get</ref>(&amp;cfg_buf);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alarm<sp/>==<sp/><ref refid="_b_l5372_8h_1a5b3fb5c003cb6efac9efcd986465200ea634977e113f734e6955c49ae9add8893" kindref="member">BL5372_ALARM_A</ref>)</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cfg_buf.<ref refid="struct_b_l5372__cfg__t_1ad57eba2f0e560bd7ca0a154ff502636d" kindref="member">alarm_A_out_flag_or_out_keep</ref>;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alarm<sp/>==<sp/><ref refid="_b_l5372_8h_1a5b3fb5c003cb6efac9efcd986465200eab1235a7d6243a5bca18789cb92dfaa48" kindref="member">BL5372_ALARM_B</ref>)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cfg_buf.<ref refid="struct_b_l5372__cfg__t_1a6ae3e18c2a3b2c2a7da15205a51a5657" kindref="member">alarm_B_out_flag_or_out_keep</ref>;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;不存在的闹钟计时器&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="264"><highlight class="normal">}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_b_l5372_8c_1a8cb8d59ef43d0b02948c035e6a4d9dc3" kindref="member">BL5372_alarm_stop_ringing</ref>(<ref refid="_b_l5372_8h_1a5b3fb5c003cb6efac9efcd986465200e" kindref="member">BL5372_alarm_select_t</ref><sp/>alarm){</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;BL5372_alarm_stop_ringing&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_b_l5372__cfg__t" kindref="compound">BL5372_cfg_t</ref><sp/>cfg_buf;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_b_l5372_8c_1aadb5d12fcecc2675c40e6290068579b4" kindref="member">BL5372_config_get</ref>(&amp;cfg_buf);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alarm<sp/>==<sp/><ref refid="_b_l5372_8h_1a5b3fb5c003cb6efac9efcd986465200ea634977e113f734e6955c49ae9add8893" kindref="member">BL5372_ALARM_A</ref>)</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cfg_buf.<ref refid="struct_b_l5372__cfg__t_1ad57eba2f0e560bd7ca0a154ff502636d" kindref="member">alarm_A_out_flag_or_out_keep</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alarm<sp/>==<sp/><ref refid="_b_l5372_8h_1a5b3fb5c003cb6efac9efcd986465200eab1235a7d6243a5bca18789cb92dfaa48" kindref="member">BL5372_ALARM_B</ref>)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cfg_buf.<ref refid="struct_b_l5372__cfg__t_1a6ae3e18c2a3b2c2a7da15205a51a5657" kindref="member">alarm_B_out_flag_or_out_keep</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;不存在的闹钟计时器&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_b_l5372_8c_1ae6edc395a90e2e8e6e1b5bc5d72910bb" kindref="member">BL5372_config_set</ref>(&amp;cfg_buf);<sp/></highlight></codeline>
<codeline lineno="286"><highlight class="normal">}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="comment">//<sp/>以默认配置初始化BL5372的运行配置</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_b_l5372_8c_1a3f4a110f0c1c4924e8aa514268ec7085" kindref="member">BL5372_config_init</ref>()</highlight></codeline>
<codeline lineno="290"><highlight class="normal">{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_b_l5372__cfg__t" kindref="compound">BL5372_cfg_t</ref><sp/>cfg_buf<sp/>=<sp/><ref refid="_b_l5372_8h_1a0640adbed26214327a7c0a2a8416e0b0" kindref="member">BL5372_DEFAULT_INIT_CONFIG</ref>;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_b_l5372_8c_1ae6edc395a90e2e8e6e1b5bc5d72910bb" kindref="member">BL5372_config_set</ref>(&amp;cfg_buf);</highlight></codeline>
<codeline lineno="293"><highlight class="normal">}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_b_l5372_8c_1ae6edc395a90e2e8e6e1b5bc5d72910bb" kindref="member">BL5372_config_set</ref>(<ref refid="struct_b_l5372__cfg__t" kindref="compound">BL5372_cfg_t</ref><sp/>*rtc_cfg)</highlight></codeline>
<codeline lineno="299"><highlight class="normal">{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;BL5372_config_set&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!rtc_cfg){</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,</highlight><highlight class="stringliteral">&quot;导入了为空的数据地址&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>write_buf[3]<sp/>=<sp/>{0};<sp/></highlight><highlight class="comment">//<sp/>写入缓存</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>设置内部寄存器地址和传输配置0000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>write_buf[0]<sp/>=<sp/><ref refid="_b_l5372_8h_1af813f9cce0ddf198ee4c9cc49b009b35aa3c0e10aadbc2e086454173f16fc4cc9" kindref="member">BL5372_REG_CTRL_1</ref><sp/>&lt;&lt;<sp/>4;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>映射写入的值</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>write_buf[1]<sp/>|=<sp/>rtc_cfg-&gt;<ref refid="struct_b_l5372__cfg__t_1a269f548fb364ae9c7be7b599b1b22a0a" kindref="member">INT_module_mode</ref>;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>write_buf[1]<sp/>|=<sp/>rtc_cfg-&gt;<ref refid="struct_b_l5372__cfg__t_1aa1f54ad5b9db98eb2a234363e8087408" kindref="member">test_en</ref><sp/>&lt;&lt;<sp/>3;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>write_buf[1]<sp/>|=<sp/>rtc_cfg-&gt;<ref refid="struct_b_l5372__cfg__t_1aaec074a7a1e1b8546502b1c4a164f307" kindref="member">intr_out_mode</ref><sp/>&lt;&lt;<sp/>4;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>write_buf[1]<sp/>|=<sp/>rtc_cfg-&gt;<ref refid="struct_b_l5372__cfg__t_1a5e87cce37b6270657c4a83d7dfd3d867" kindref="member">alarm_B_en</ref><sp/>&lt;&lt;<sp/>6;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>write_buf[1]<sp/>|=<sp/>rtc_cfg-&gt;<ref refid="struct_b_l5372__cfg__t_1afa21af661684d4a504b088a4f5fb10a7" kindref="member">alarm_A_en</ref><sp/>&lt;&lt;<sp/>7;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>write_buf[2]<sp/>|=<sp/>rtc_cfg-&gt;<ref refid="struct_b_l5372__cfg__t_1a6ae3e18c2a3b2c2a7da15205a51a5657" kindref="member">alarm_B_out_flag_or_out_keep</ref>;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>write_buf[2]<sp/>|=<sp/>rtc_cfg-&gt;<ref refid="struct_b_l5372__cfg__t_1ad57eba2f0e560bd7ca0a154ff502636d" kindref="member">alarm_A_out_flag_or_out_keep</ref><sp/>&lt;&lt;<sp/>1;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>write_buf[2]<sp/>|=<sp/>rtc_cfg-&gt;<ref refid="struct_b_l5372__cfg__t_1ab85201ec0dddeb054b51cf223f7fd0ec" kindref="member">INT_out_flag_or_out_keep</ref><sp/>&lt;&lt;<sp/>2;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>write_buf[2]<sp/>|=<sp/>rtc_cfg-&gt;<ref refid="struct_b_l5372__cfg__t_1a542d6826c3c9ce1edda43e3d56ff15fa" kindref="member">out_32KHz_false</ref><sp/>&lt;&lt;<sp/>3;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>write_buf[2]<sp/>|=<sp/>rtc_cfg-&gt;<ref refid="struct_b_l5372__cfg__t_1a6839ad32e3caf5a2c47155330e13c26b" kindref="member">adj_en_or_xstp</ref><sp/>&lt;&lt;<sp/>4;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>write_buf[2]<sp/>|=<sp/>rtc_cfg-&gt;<ref refid="struct_b_l5372__cfg__t_1a5f2e785ac7b3622b0bc37c9e4d7ced89" kindref="member">hour_24_clock_en</ref><sp/>&lt;&lt;<sp/>5;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_err_t<sp/>err<sp/>=<sp/>i2c_master_write_to_device(<ref refid="board__def_8h_1a6c09d42369f3cc4c366118ce5241ba68" kindref="member">DEVICE_I2C_PORT</ref>,<sp/><ref refid="_b_l5372_8h_1a534b76ba10d1f1380d2618173c257cdf" kindref="member">BL5372_DEVICE_ADD</ref>,<sp/>write_buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(write_buf),<sp/>1000<sp/>/<sp/>portTICK_PERIOD_MS);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>ESP_OK)</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;与外部离线RTC通讯时发现问题<sp/>请检查电池电源连接<sp/>描述：<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>esp_err_to_name(err));</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;外部离线RTC配置已更新&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="330"><highlight class="normal">}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_b_l5372_8c_1aadb5d12fcecc2675c40e6290068579b4" kindref="member">BL5372_config_get</ref>(<ref refid="struct_b_l5372__cfg__t" kindref="compound">BL5372_cfg_t</ref><sp/>*rtc_cfg)</highlight></codeline>
<codeline lineno="337"><highlight class="normal">{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;BL5372_config_get&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!rtc_cfg){</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,</highlight><highlight class="stringliteral">&quot;导入了为空的数据地址&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>read_buf[2]<sp/>=<sp/>{0};<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>读取缓存</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>write_buf<sp/>=<sp/><ref refid="_b_l5372_8h_1af813f9cce0ddf198ee4c9cc49b009b35aa3c0e10aadbc2e086454173f16fc4cc9" kindref="member">BL5372_REG_CTRL_1</ref><sp/>&lt;&lt;<sp/>4;<sp/></highlight><highlight class="comment">//<sp/>高4位设置起始地址，低4位设置传输模式0000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_err_t<sp/>err<sp/>=<sp/>i2c_master_write_read_device(<ref refid="board__def_8h_1a6c09d42369f3cc4c366118ce5241ba68" kindref="member">DEVICE_I2C_PORT</ref>,<sp/><ref refid="_b_l5372_8h_1a534b76ba10d1f1380d2618173c257cdf" kindref="member">BL5372_DEVICE_ADD</ref>,<sp/>&amp;write_buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(write_buf),<sp/>read_buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(read_buf),<sp/>1000<sp/>/<sp/>portTICK_PERIOD_MS);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>ESP_OK)</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;与外部离线RTC通讯时发现问题<sp/>请检查电池电源连接<sp/>描述：<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>esp_err_to_name(err));</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>映射得到的值</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>rtc_cfg-&gt;<ref refid="struct_b_l5372__cfg__t_1afa21af661684d4a504b088a4f5fb10a7" kindref="member">alarm_A_en</ref><sp/>=<sp/>0x01<sp/>&amp;<sp/>(read_buf[0]<sp/>&gt;&gt;<sp/>7);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>rtc_cfg-&gt;<ref refid="struct_b_l5372__cfg__t_1a5e87cce37b6270657c4a83d7dfd3d867" kindref="member">alarm_B_en</ref><sp/>=<sp/>0x01<sp/>&amp;<sp/>(read_buf[0]<sp/>&gt;&gt;<sp/>6);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>rtc_cfg-&gt;<ref refid="struct_b_l5372__cfg__t_1aaec074a7a1e1b8546502b1c4a164f307" kindref="member">intr_out_mode</ref><sp/>=<sp/>0x03<sp/>&amp;<sp/>(read_buf[0]<sp/>&gt;&gt;<sp/>4);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>rtc_cfg-&gt;<ref refid="struct_b_l5372__cfg__t_1aa1f54ad5b9db98eb2a234363e8087408" kindref="member">test_en</ref><sp/>=<sp/>0x01<sp/>&amp;<sp/>(read_buf[0]<sp/>&gt;&gt;<sp/>3);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>rtc_cfg-&gt;<ref refid="struct_b_l5372__cfg__t_1a269f548fb364ae9c7be7b599b1b22a0a" kindref="member">INT_module_mode</ref><sp/>=<sp/>0x07<sp/>&amp;<sp/>read_buf[0];</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>rtc_cfg-&gt;<ref refid="struct_b_l5372__cfg__t_1a5f2e785ac7b3622b0bc37c9e4d7ced89" kindref="member">hour_24_clock_en</ref><sp/>=<sp/>0x01<sp/>&amp;<sp/>(read_buf[1]<sp/>&gt;&gt;<sp/>5);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>rtc_cfg-&gt;<ref refid="struct_b_l5372__cfg__t_1a6839ad32e3caf5a2c47155330e13c26b" kindref="member">adj_en_or_xstp</ref><sp/>=<sp/>0x01<sp/>&amp;<sp/>(read_buf[1]<sp/>&gt;&gt;<sp/>4);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>rtc_cfg-&gt;<ref refid="struct_b_l5372__cfg__t_1a542d6826c3c9ce1edda43e3d56ff15fa" kindref="member">out_32KHz_false</ref><sp/>=<sp/>0x01<sp/>&amp;<sp/>(read_buf[1]<sp/>&gt;&gt;<sp/>3);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>rtc_cfg-&gt;<ref refid="struct_b_l5372__cfg__t_1ab85201ec0dddeb054b51cf223f7fd0ec" kindref="member">INT_out_flag_or_out_keep</ref><sp/>=<sp/>0x01<sp/>&amp;<sp/>(read_buf[1]<sp/>&gt;&gt;<sp/>2);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>rtc_cfg-&gt;<ref refid="struct_b_l5372__cfg__t_1ad57eba2f0e560bd7ca0a154ff502636d" kindref="member">alarm_A_out_flag_or_out_keep</ref><sp/>=<sp/>0x01<sp/>&amp;<sp/>(read_buf[1]<sp/>&gt;&gt;<sp/>1);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>rtc_cfg-&gt;<ref refid="struct_b_l5372__cfg__t_1a6ae3e18c2a3b2c2a7da15205a51a5657" kindref="member">alarm_B_out_flag_or_out_keep</ref><sp/>=<sp/>0x01<sp/>&amp;<sp/>read_buf[1];</highlight></codeline>
<codeline lineno="364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal">uint8_t<sp/><ref refid="_b_l5372_8c_1aa29e8f8bbd40c71b00619d1cafba5ee1" kindref="member">BCD8421_transform_recode</ref>(uint8_t<sp/>bin_dat)</highlight></codeline>
<codeline lineno="371"><highlight class="normal">{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>dat_buf1<sp/>=<sp/>0x0f<sp/>&amp;<sp/>(bin_dat<sp/>&gt;&gt;<sp/>4);<sp/></highlight><highlight class="comment">//<sp/>高四位表示十进制十位</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>dat_buf0<sp/>=<sp/>0x0f<sp/>&amp;<sp/>bin_dat;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>低四位表示十进制个位</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>dec_buf<sp/>=<sp/>dat_buf1<sp/>*<sp/>10<sp/>+<sp/>dat_buf0;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dec_buf;</highlight></codeline>
<codeline lineno="376"><highlight class="normal">}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal">uint8_t<sp/><ref refid="_b_l5372_8c_1a0b7ac499765d27486d43ac3fc8f2dd2d" kindref="member">BCD8421_transform_decode</ref>(uint8_t<sp/>dec_dat)</highlight></codeline>
<codeline lineno="382"><highlight class="normal">{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>dat_buf1<sp/>=<sp/>dec_dat<sp/>/<sp/>10;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>十位转换为8bits二进制高四位</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>dat_buf0<sp/>=<sp/>dec_dat<sp/>-<sp/>dat_buf1<sp/>*<sp/>10;<sp/></highlight><highlight class="comment">//<sp/>个位转换为8bits二进制低四位</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>bin_buf<sp/>=<sp/>(dat_buf1<sp/>&lt;&lt;<sp/>4)<sp/>|<sp/>dat_buf0;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bin_buf;</highlight></codeline>
<codeline lineno="387"><highlight class="normal">}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="main/BL5372.c"/>
  </compounddef>
</doxygen>
