<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="zh">
  <compounddef id="_t_c_a6416_a_8c" kind="file" language="C++">
    <compoundname>TCA6416A.c</compoundname>
    <includes refid="_t_c_a6416_a_8h" local="yes">TCA6416A.h</includes>
    <includes local="yes">driver/i2c.h</includes>
    <includes local="yes">esp_log.h</includes>
    <includes refid="board__def_8h" local="yes">board_def.h</includes>
    <incdepgraph>
      <node id="7">
        <label>board_def.h</label>
        <link refid="board__def_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>TCA6416A.h</label>
        <link refid="_t_c_a6416_a_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>main/TCA6416A.c</label>
        <link refid="_t_c_a6416_a_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>audio_hal.h</label>
      </node>
      <node id="5">
        <label>driver/i2c.h</label>
      </node>
      <node id="9">
        <label>esp_gatts_api.h</label>
      </node>
      <node id="6">
        <label>esp_log.h</label>
      </node>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="3">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="var">
      <memberdef kind="variable" id="_t_c_a6416_a_8c_1a542b01116d4c8ab81413cb29fab79c54" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t TCA6416A_data_buf[3]</definition>
        <argsstring>[3]</argsstring>
        <name>TCA6416A_data_buf</name>
        <initializer>= { 0x00,0x00,0x00 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/TCA6416A.c" line="44" column="9" bodyfile="main/TCA6416A.c" bodystart="44" bodyend="44"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="_t_c_a6416_a_8c_1a1296270d47065321a8499d26dd2bb317" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TCA6416A_mode_set</definition>
        <argsstring>(TCA6416A_mode_t *pTCA6416Amode)</argsstring>
        <name>TCA6416A_mode_set</name>
        <param>
          <type><ref refid="struct_t_c_a6416_a__mode__t" kindref="compound">TCA6416A_mode_t</ref> *</type>
          <declname>pTCA6416Amode</declname>
        </param>
        <briefdescription>
<para>GPIO输入输出模式设置，同时保存模式数据，初始化用 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/TCA6416A.c" line="47" column="6" bodyfile="main/TCA6416A.c" bodystart="47" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="_t_c_a6416_a_8c_1acd16f8e50904d583bd542451716e8a73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TCA6416A_gpio_service</definition>
        <argsstring>(TCA6416A_value_t *pTCA6416Avalue)</argsstring>
        <name>TCA6416A_gpio_service</name>
        <param>
          <type><ref refid="struct_t_c_a6416_a__value__t" kindref="compound">TCA6416A_value_t</ref> *</type>
          <declname>pTCA6416Avalue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/TCA6416A.c" line="86" column="6" bodyfile="main/TCA6416A.c" bodystart="86" bodyend="137"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>701Enti<sp/>MIT<sp/>License</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>©<sp/>2024<sp/>&lt;701Enti<sp/>organization&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>“Software”),</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>“AS<sp/>IS”,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR<sp/>IMPLIED,</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>该文件归属701Enti组织，SEVETEST30开发团队应该提供责任性维护，包含一些ESP32_S3通过硬件外设与TCA6416建立配置与扩展IO数据的通讯</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>如您发现一些问题，请及时联系我们，我们非常感谢您的支持</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>本库特性：1<sp/>由于IO控制时，有随时需要调用TCA6416A写入函数的需求，本库不会出现调用一次函数归定只能改一个IO或读一个IO还要传一系列参数的尴尬问题，而是一齐读写,同时还会保存实时IO数据，因此没有用到电平反转寄存器</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/>使用时直接修改公共变量以在项目非常方便使用，加之，可以像sevetest30_gpio.c封装后使用FreeRTOS支持，并添加中断支持，一但IO电平变化就读取，没有变就不读，客观上可以大大提高资源利用率</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>读写原理：<sp/><sp/><sp/>运用结构体地址一般为结构体中第一个成员变量地址，并且本例中，成员类型均为bool,地址递加从而可以方便地扫描所有成员，</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>敬告：<sp/>0<sp/>为更加方便后续开发或移植，本库不包含关于FreeRTOS支持的封装，公共变量修改方式的服务封装，以及中断服务的封装，如果需要参考，请参照sevetest30_gpio.c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/>本库会保存实时IO数据，因此没有用到电平反转寄存器<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/>文件本体不包含i2c通讯的任何初始化配置，若您单独使用而未进行配置，这可能无法运行</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>3<sp/>请注意外部引脚模式设置，错误的配置可能导致您的设备损坏，我们不建议修改这些默认配置<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>4<sp/>对于设计现实的不同，您可以更改结构体成员变量名，但是必须确保对应的IO次序不变如<sp/>P00<sp/>P01<sp/>P02<sp/>P03<sp/>以此类推</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>同时成员变量名是上级程序识别操作引脚的关键，如果需要使用其上级程序而不仅仅是TCA6416A库函数，结构体成员变量名不应该随意修改，对当前硬件的更新必须修改上层代码</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>github:<sp/>https://github.com/701Enti</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>bilibili:<sp/>701Enti</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_t_c_a6416_a_8h" kindref="compound">TCA6416A.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;driver/i2c.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;esp_log.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="board__def_8h" kindref="compound">board_def.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal">uint8_t<sp/><ref refid="_t_c_a6416_a_8c_1a542b01116d4c8ab81413cb29fab79c54" kindref="member">TCA6416A_data_buf</ref>[3]<sp/>=<sp/>{<sp/>0x00,0x00,0x00<sp/>};</highlight><highlight class="comment">//缓存寄存器地址与数据<sp/>{reg<sp/>+<sp/>data}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_t_c_a6416_a_8c_1a1296270d47065321a8499d26dd2bb317" kindref="member">TCA6416A_mode_set</ref>(<ref refid="struct_t_c_a6416_a__mode__t" kindref="compound">TCA6416A_mode_t</ref>*<sp/>pTCA6416Amode)</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TCA6416A_mode_set&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>esp_err_t<sp/>err<sp/>=<sp/>ESP_OK;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pTCA6416Amode<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;无法处理的空指针&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>uint8_t<sp/>data1<sp/>=<sp/>NULL,<sp/>data2<sp/>=<sp/>NULL;<sp/></highlight><highlight class="comment">//<sp/>临时数据缓存</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>p;<sp/></highlight><highlight class="comment">//<sp/>定义指针变量，指向成员变量地址<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//确定设备地址</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>uint8_t<sp/>i2c_add<sp/>=<sp/>0x20;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pTCA6416Amode-&gt;<ref refid="struct_t_c_a6416_a__mode__t_1a8e2e5363cab8a1be64dbc5f0c2f7ab67" kindref="member">addr</ref>)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>i2c_add<sp/>=<sp/>0x21;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>依据pTCA6416Amode结构体递增地址对应的bool数值按8位缓冲变量对应的bit位置装载<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>16;<sp/>i++)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*)pTCA6416Amode<sp/>+<sp/>i;<sp/></highlight><highlight class="comment">//<sp/>强制转换地址的类型，指向成员变量地址</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>8)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data1<sp/>=<sp/>*p<sp/>&lt;&lt;<sp/>i<sp/>|<sp/>data1;<sp/></highlight><highlight class="comment">//<sp/>取出值进行运算</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/>8)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data2<sp/>=<sp/>*p<sp/>&lt;&lt;<sp/>(i<sp/>-<sp/>8)<sp/>|<sp/>data2;<sp/></highlight><highlight class="comment">//<sp/>取出值进行运算</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>装载并写入</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><ref refid="_t_c_a6416_a_8c_1a542b01116d4c8ab81413cb29fab79c54" kindref="member">TCA6416A_data_buf</ref>[0]<sp/>=<sp/><ref refid="_t_c_a6416_a_8h_1a3bc917c4eb1b8da8f413522961c54cd4" kindref="member">TCA6416A_MODE1</ref>,<sp/><ref refid="_t_c_a6416_a_8c_1a542b01116d4c8ab81413cb29fab79c54" kindref="member">TCA6416A_data_buf</ref>[1]<sp/>=<sp/>data1,<sp/><ref refid="_t_c_a6416_a_8c_1a542b01116d4c8ab81413cb29fab79c54" kindref="member">TCA6416A_data_buf</ref>[2]<sp/>=<sp/>data2;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>err<sp/>=<sp/>i2c_master_write_to_device(<ref refid="board__def_8h_1a6c09d42369f3cc4c366118ce5241ba68" kindref="member">DEVICE_I2C_PORT</ref>,<sp/>i2c_add,<sp/><ref refid="_t_c_a6416_a_8c_1a542b01116d4c8ab81413cb29fab79c54" kindref="member">TCA6416A_data_buf</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="_t_c_a6416_a_8c_1a542b01116d4c8ab81413cb29fab79c54" kindref="member">TCA6416A_data_buf</ref>),<sp/>1000<sp/>/<sp/>portTICK_PERIOD_MS);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>ESP_OK)ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;与TCA6416A通讯时发现问题<sp/>描述：<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>esp_err_to_name(err));</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GPIO引脚数据交互服务，一次性全更新、写入，根据引脚模式配置以读写操作，以下是我一些肤浅的思路</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//<sp/>写：我们先准备好两份8bit数据，对于“只读的”输入引脚数据，一同写入，因为对于TCA6416,这样的数据无效，没有任何影响</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//<sp/>读：直接读出两个寄存器的值，映射到value结构体中，我们之后显然只关心读出“只读的”输入引脚数据，读出的“只写的”输出引脚数据是无效的，对于我们的程序毫无意义，之后也不会理会</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//<sp/>读数据由传入的结构体地址对应的结构体中按成员直接回读</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_t_c_a6416_a_8c_1acd16f8e50904d583bd542451716e8a73" kindref="member">TCA6416A_gpio_service</ref>(<ref refid="struct_t_c_a6416_a__value__t" kindref="compound">TCA6416A_value_t</ref>*<sp/>pTCA6416Avalue)</highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TCA6416A_gpio_service&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>esp_err_t<sp/>err<sp/>=<sp/>ESP_OK;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pTCA6416Avalue<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;无法处理的空指针&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>p;<sp/></highlight><highlight class="comment">//<sp/>定义指针变量，指向成员变量地址</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>uint8_t<sp/>data1<sp/>=<sp/>NULL,<sp/>data2<sp/>=<sp/>NULL;<sp/></highlight><highlight class="comment">//<sp/>临时数据缓存</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//确定设备地址<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>uint8_t<sp/>i2c_add<sp/>=<sp/>0x20;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pTCA6416Avalue-&gt;<ref refid="struct_t_c_a6416_a__value__t_1aad4c7f009a1c0ab91f1e86439f04a836" kindref="member">addr</ref>)</highlight></codeline>
<codeline lineno=CONFIG_WIFI_SSID><highlight class="normal"><sp/><sp/><sp/><sp/>i2c_add<sp/>=<sp/>0x21;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>准备好两份8bit数据</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>依据pTCA6416Avalue结构体递增地址对应的bool数值按8位缓冲变量对应的bit位置装载<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>16;<sp/>i++)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*)pTCA6416Avalue<sp/>+<sp/>i;<sp/></highlight><highlight class="comment">//<sp/>强制转换地址的类型，指向成员变量地址</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>8)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data1<sp/>=<sp/>*p<sp/>&lt;&lt;<sp/>i<sp/>|<sp/>data1;<sp/></highlight><highlight class="comment">//<sp/>取出值进行运算</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/>8)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data2<sp/>=<sp/>*p<sp/>&lt;&lt;<sp/>(i<sp/>-<sp/>8)<sp/>|<sp/>data2;<sp/></highlight><highlight class="comment">//<sp/>取出值进行运算</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>装载并写入</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><ref refid="_t_c_a6416_a_8c_1a542b01116d4c8ab81413cb29fab79c54" kindref="member">TCA6416A_data_buf</ref>[0]<sp/>=<sp/><ref refid="_t_c_a6416_a_8h_1a9601b2e366a0bb9bfb574e308d6310a2" kindref="member">TCA6416A_OUT1</ref>,<sp/><ref refid="_t_c_a6416_a_8c_1a542b01116d4c8ab81413cb29fab79c54" kindref="member">TCA6416A_data_buf</ref>[1]<sp/>=<sp/>data1,<sp/><ref refid="_t_c_a6416_a_8c_1a542b01116d4c8ab81413cb29fab79c54" kindref="member">TCA6416A_data_buf</ref>[2]<sp/>=<sp/>data2;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>err<sp/>=<sp/>i2c_master_write_to_device(<ref refid="board__def_8h_1a6c09d42369f3cc4c366118ce5241ba68" kindref="member">DEVICE_I2C_PORT</ref>,<sp/>i2c_add,<sp/><ref refid="_t_c_a6416_a_8c_1a542b01116d4c8ab81413cb29fab79c54" kindref="member">TCA6416A_data_buf</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="_t_c_a6416_a_8c_1a542b01116d4c8ab81413cb29fab79c54" kindref="member">TCA6416A_data_buf</ref>),<sp/>1000<sp/>/<sp/>portTICK_PERIOD_MS);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>装载,清理，准备读取</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//TCA6416A大概可以这样描述：先像正常的写数据一样，但是只写入选定的寄存器命令，之后不要STOP,马上通过i2c_master_read_from_device正常读取，即重新发送一次TCA6416A地址,主机接收数据，完成</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><ref refid="_t_c_a6416_a_8c_1a542b01116d4c8ab81413cb29fab79c54" kindref="member">TCA6416A_data_buf</ref>[0]<sp/>=<sp/><ref refid="_t_c_a6416_a_8h_1a0c33d4868738b4bf851bda963751a319" kindref="member">TCA6416A_IN1</ref>,<sp/><ref refid="_t_c_a6416_a_8c_1a542b01116d4c8ab81413cb29fab79c54" kindref="member">TCA6416A_data_buf</ref>[1]<sp/>=<sp/>0x00,<sp/><ref refid="_t_c_a6416_a_8c_1a542b01116d4c8ab81413cb29fab79c54" kindref="member">TCA6416A_data_buf</ref>[2]<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>直接读出两个寄存器的值</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>err<sp/>=<sp/>i2c_master_write_read_device(<ref refid="board__def_8h_1a6c09d42369f3cc4c366118ce5241ba68" kindref="member">DEVICE_I2C_PORT</ref>,<sp/>i2c_add,<sp/>&amp;<ref refid="_t_c_a6416_a_8c_1a542b01116d4c8ab81413cb29fab79c54" kindref="member">TCA6416A_data_buf</ref>[0],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="_t_c_a6416_a_8c_1a542b01116d4c8ab81413cb29fab79c54" kindref="member">TCA6416A_data_buf</ref>[0]),<sp/>&amp;<ref refid="_t_c_a6416_a_8c_1a542b01116d4c8ab81413cb29fab79c54" kindref="member">TCA6416A_data_buf</ref>[1],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="_t_c_a6416_a_8c_1a542b01116d4c8ab81413cb29fab79c54" kindref="member">TCA6416A_data_buf</ref>[1])<sp/>*<sp/>2,<sp/>1000<sp/>/<sp/>portTICK_PERIOD_MS);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>data1<sp/>=<sp/><ref refid="_t_c_a6416_a_8c_1a542b01116d4c8ab81413cb29fab79c54" kindref="member">TCA6416A_data_buf</ref>[1],<sp/>data2<sp/>=<sp/><ref refid="_t_c_a6416_a_8c_1a542b01116d4c8ab81413cb29fab79c54" kindref="member">TCA6416A_data_buf</ref>[2];<sp/></highlight><highlight class="comment">//<sp/>取出</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>依据data1,data2数值移位映射</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>16;<sp/>i++)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*)pTCA6416Avalue<sp/>+<sp/>i;<sp/></highlight><highlight class="comment">//<sp/>强制转换地址的类型，指向（存储）成员变量地址</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>8)<sp/><sp/>*p<sp/>=<sp/>(data1<sp/>&gt;&gt;<sp/>i)<sp/>&amp;<sp/>0x01;<sp/></highlight><highlight class="comment">//<sp/>不断取出位移后data1最低位</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/>8)<sp/>*p<sp/>=<sp/>data2<sp/>&gt;&gt;<sp/>(i<sp/>-<sp/>8)<sp/>&amp;<sp/>0x01;<sp/></highlight><highlight class="comment">//<sp/>不断取出位移后data1最低位</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>ESP_OK)ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;与TCA6416A通讯时发现问题<sp/>描述：<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>esp_err_to_name(err));</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="main/TCA6416A.c"/>
  </compounddef>
</doxygen>
