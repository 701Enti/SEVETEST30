<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="zh">
  <compounddef id="sevetest30___led_array_8c" kind="file" language="C++">
    <compoundname>sevetest30_LedArray.c</compoundname>
    <includes refid="sevetest30___led_array_8h" local="yes">sevetest30_LedArray.h</includes>
    <includes refid="sevetest30___u_i_8h" local="yes">sevetest30_UI.h</includes>
    <includes local="yes">freertos/FreeRTOS.h</includes>
    <includes local="yes">freertos/task.h</includes>
    <includes local="yes">stdarg.h</includes>
    <includes local="yes">led_strip.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">stdbool.h</includes>
    <includes local="no">malloc.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">esp_log.h</includes>
    <includes local="yes">driver/rmt.h</includes>
    <includes local="yes">hal/rmt_types.h</includes>
    <includes refid="gt32l32s0140_8h" local="yes">gt32l32s0140.h</includes>
    <incdepgraph>
      <node id="10">
        <label>board_ctrl.h</label>
        <link refid="board__ctrl_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>board_def.h</label>
        <link refid="board__def_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>BL5372.h</label>
        <link refid="_b_l5372_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>TCA6416A.h</label>
        <link refid="_t_c_a6416_a_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>gt32l32s0140.h</label>
        <link refid="gt32l32s0140_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>sevetest30_LedArray.h</label>
        <link refid="sevetest30___led_array_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>sevetest30_UI.h</label>
        <link refid="sevetest30___u_i_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>sevetest30_gpio.h</label>
        <link refid="sevetest30__gpio_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>main/sevetest30_LedArray.c</label>
        <link refid="sevetest30___led_array_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>audio_hal.h</label>
      </node>
      <node id="14">
        <label>driver/i2c.h</label>
      </node>
      <node id="9">
        <label>driver/i2s.h</label>
      </node>
      <node id="30">
        <label>driver/rmt.h</label>
      </node>
      <node id="19">
        <label>driver/spi_common.h</label>
      </node>
      <node id="20">
        <label>driver/spi_master.h</label>
      </node>
      <node id="6">
        <label>esp_err.h</label>
      </node>
      <node id="15">
        <label>esp_gatts_api.h</label>
      </node>
      <node id="29">
        <label>esp_log.h</label>
      </node>
      <node id="21">
        <label>esp_peripherals.h</label>
      </node>
      <node id="11">
        <label>esp_types.h</label>
      </node>
      <node id="16">
        <label>esxxx_common.h</label>
      </node>
      <node id="7">
        <label>freertos/FreeRTOS.h</label>
      </node>
      <node id="8">
        <label>freertos/task.h</label>
      </node>
      <node id="31">
        <label>hal/rmt_types.h</label>
      </node>
      <node id="24">
        <label>led_strip.h</label>
      </node>
      <node id="26">
        <label>malloc.h</label>
      </node>
      <node id="25">
        <label>math.h</label>
      </node>
      <node id="23">
        <label>stdarg.h</label>
      </node>
      <node id="5">
        <label>stdbool.h</label>
      </node>
      <node id="27">
        <label>stdio.h</label>
      </node>
      <node id="28">
        <label>stdlib.h</label>
      </node>
      <node id="3">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="var">
      <memberdef kind="variable" id="sevetest30___led_array_8c_1ad44e1ae1c4f598fe02ebc3eb954e5820" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t red_y1[LINE_LED_NUMBER]</definition>
        <argsstring>[LINE_LED_NUMBER]</argsstring>
        <name>red_y1</name>
        <initializer>= { 0x00 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="59" column="9" bodyfile="main/sevetest30_LedArray.c" bodystart="59" bodyend="59"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___led_array_8c_1ab5de663c114235e7c8ccd61c8f135961" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t red_y2[LINE_LED_NUMBER]</definition>
        <argsstring>[LINE_LED_NUMBER]</argsstring>
        <name>red_y2</name>
        <initializer>= { 0x00 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="60" column="9" bodyfile="main/sevetest30_LedArray.c" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___led_array_8c_1aa4c4611d22f3ccbb1b368068a4b9fcf5" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t red_y3[LINE_LED_NUMBER]</definition>
        <argsstring>[LINE_LED_NUMBER]</argsstring>
        <name>red_y3</name>
        <initializer>= { 0x00 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="61" column="9" bodyfile="main/sevetest30_LedArray.c" bodystart="61" bodyend="61"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___led_array_8c_1a539fbf6aa70ee23c9e9e2b2c674b930c" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t red_y4[LINE_LED_NUMBER]</definition>
        <argsstring>[LINE_LED_NUMBER]</argsstring>
        <name>red_y4</name>
        <initializer>= { 0x00 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="62" column="9" bodyfile="main/sevetest30_LedArray.c" bodystart="62" bodyend="62"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___led_array_8c_1a435a079e71aa8aafa84563747c7b98ff" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t red_y5[LINE_LED_NUMBER]</definition>
        <argsstring>[LINE_LED_NUMBER]</argsstring>
        <name>red_y5</name>
        <initializer>= { 0x00 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="63" column="9" bodyfile="main/sevetest30_LedArray.c" bodystart="63" bodyend="63"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___led_array_8c_1afee0b5bcdd375220257264402111beec" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t red_y6[LINE_LED_NUMBER]</definition>
        <argsstring>[LINE_LED_NUMBER]</argsstring>
        <name>red_y6</name>
        <initializer>= { 0x00 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="64" column="9" bodyfile="main/sevetest30_LedArray.c" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___led_array_8c_1ab9979d3c8c123bec855d7ac12427dbe0" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t red_y7[LINE_LED_NUMBER]</definition>
        <argsstring>[LINE_LED_NUMBER]</argsstring>
        <name>red_y7</name>
        <initializer>= { 0x00 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="65" column="9" bodyfile="main/sevetest30_LedArray.c" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___led_array_8c_1a89d839e16672ca9353e608407687e140" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t red_y8[LINE_LED_NUMBER]</definition>
        <argsstring>[LINE_LED_NUMBER]</argsstring>
        <name>red_y8</name>
        <initializer>= { 0x00 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="66" column="9" bodyfile="main/sevetest30_LedArray.c" bodystart="66" bodyend="66"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___led_array_8c_1a1daff4a6c90d34894d6097271bd2ad83" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t red_y9[LINE_LED_NUMBER]</definition>
        <argsstring>[LINE_LED_NUMBER]</argsstring>
        <name>red_y9</name>
        <initializer>= { 0x00 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="67" column="9" bodyfile="main/sevetest30_LedArray.c" bodystart="67" bodyend="67"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___led_array_8c_1a21bdacda990e8d3298c917ca08242a04" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t red_y10[LINE_LED_NUMBER]</definition>
        <argsstring>[LINE_LED_NUMBER]</argsstring>
        <name>red_y10</name>
        <initializer>= { 0x00 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="68" column="9" bodyfile="main/sevetest30_LedArray.c" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___led_array_8c_1aacc4ccd900a8206611c259b456b6bb8e" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t red_y11[LINE_LED_NUMBER]</definition>
        <argsstring>[LINE_LED_NUMBER]</argsstring>
        <name>red_y11</name>
        <initializer>= { 0x00 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="69" column="9" bodyfile="main/sevetest30_LedArray.c" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___led_array_8c_1a77e4b35443879308f6e21ea521f25bf1" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t red_y12[LINE_LED_NUMBER]</definition>
        <argsstring>[LINE_LED_NUMBER]</argsstring>
        <name>red_y12</name>
        <initializer>= { 0x00 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="70" column="9" bodyfile="main/sevetest30_LedArray.c" bodystart="70" bodyend="70"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___led_array_8c_1a75f2f1c84d9fffcc18505c049a316ff6" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t green_y1[LINE_LED_NUMBER]</definition>
        <argsstring>[LINE_LED_NUMBER]</argsstring>
        <name>green_y1</name>
        <initializer>= { 0x00 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="72" column="9" bodyfile="main/sevetest30_LedArray.c" bodystart="72" bodyend="72"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___led_array_8c_1a9b7ecb2850a8d90716c358a1df8ab74d" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t green_y2[LINE_LED_NUMBER]</definition>
        <argsstring>[LINE_LED_NUMBER]</argsstring>
        <name>green_y2</name>
        <initializer>= { 0x00 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="73" column="9" bodyfile="main/sevetest30_LedArray.c" bodystart="73" bodyend="73"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___led_array_8c_1a60f75c95fdefdb11ecc9068290dd56b8" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t green_y3[LINE_LED_NUMBER]</definition>
        <argsstring>[LINE_LED_NUMBER]</argsstring>
        <name>green_y3</name>
        <initializer>= { 0x00 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="74" column="9" bodyfile="main/sevetest30_LedArray.c" bodystart="74" bodyend="74"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___led_array_8c_1aa229a3f8969ceb591935cfc572168edc" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t green_y4[LINE_LED_NUMBER]</definition>
        <argsstring>[LINE_LED_NUMBER]</argsstring>
        <name>green_y4</name>
        <initializer>= { 0x00 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="75" column="9" bodyfile="main/sevetest30_LedArray.c" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___led_array_8c_1a9e64428ff1ca27f6d77ac6ba4db68d2d" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t green_y5[LINE_LED_NUMBER]</definition>
        <argsstring>[LINE_LED_NUMBER]</argsstring>
        <name>green_y5</name>
        <initializer>= { 0x00 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="76" column="9" bodyfile="main/sevetest30_LedArray.c" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___led_array_8c_1a10f41a0df3fc36db986b4184f8cac3d6" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t green_y6[LINE_LED_NUMBER]</definition>
        <argsstring>[LINE_LED_NUMBER]</argsstring>
        <name>green_y6</name>
        <initializer>= { 0x00 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="77" column="9" bodyfile="main/sevetest30_LedArray.c" bodystart="77" bodyend="77"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___led_array_8c_1ac4405824d3564d2b514f0b6775a08684" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t green_y7[LINE_LED_NUMBER]</definition>
        <argsstring>[LINE_LED_NUMBER]</argsstring>
        <name>green_y7</name>
        <initializer>= { 0x00 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="78" column="9" bodyfile="main/sevetest30_LedArray.c" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___led_array_8c_1abb1ee1f170bf776c1bb26df891b8ad6f" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t green_y8[LINE_LED_NUMBER]</definition>
        <argsstring>[LINE_LED_NUMBER]</argsstring>
        <name>green_y8</name>
        <initializer>= { 0x00 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="79" column="9" bodyfile="main/sevetest30_LedArray.c" bodystart="79" bodyend="79"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___led_array_8c_1ab085bed50e76747cef84dc4a569ddf1b" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t green_y9[LINE_LED_NUMBER]</definition>
        <argsstring>[LINE_LED_NUMBER]</argsstring>
        <name>green_y9</name>
        <initializer>= { 0x00 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="80" column="9" bodyfile="main/sevetest30_LedArray.c" bodystart="80" bodyend="80"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___led_array_8c_1a096d53f53c0cdf27d30c75b980d73c06" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t green_y10[LINE_LED_NUMBER]</definition>
        <argsstring>[LINE_LED_NUMBER]</argsstring>
        <name>green_y10</name>
        <initializer>= { 0x00 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="81" column="9" bodyfile="main/sevetest30_LedArray.c" bodystart="81" bodyend="81"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___led_array_8c_1ae5872581873fdbd12ab0d3a1eaf20141" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t green_y11[LINE_LED_NUMBER]</definition>
        <argsstring>[LINE_LED_NUMBER]</argsstring>
        <name>green_y11</name>
        <initializer>= { 0x00 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="82" column="9" bodyfile="main/sevetest30_LedArray.c" bodystart="82" bodyend="82"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___led_array_8c_1a4b61050b487a27407508aaca3523d775" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t green_y12[LINE_LED_NUMBER]</definition>
        <argsstring>[LINE_LED_NUMBER]</argsstring>
        <name>green_y12</name>
        <initializer>= { 0x00 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="83" column="9" bodyfile="main/sevetest30_LedArray.c" bodystart="83" bodyend="83"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___led_array_8c_1ab762caa46e1cb6b2c7728e38a2a40253" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t blue_y1[LINE_LED_NUMBER]</definition>
        <argsstring>[LINE_LED_NUMBER]</argsstring>
        <name>blue_y1</name>
        <initializer>= { 0x00 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="85" column="9" bodyfile="main/sevetest30_LedArray.c" bodystart="85" bodyend="85"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___led_array_8c_1a5113018ac08ad0103de383e4d5c269d8" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t blue_y2[LINE_LED_NUMBER]</definition>
        <argsstring>[LINE_LED_NUMBER]</argsstring>
        <name>blue_y2</name>
        <initializer>= { 0x00 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="86" column="9" bodyfile="main/sevetest30_LedArray.c" bodystart="86" bodyend="86"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___led_array_8c_1a20312d7632a95d178b319c63bd372a3c" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t blue_y3[LINE_LED_NUMBER]</definition>
        <argsstring>[LINE_LED_NUMBER]</argsstring>
        <name>blue_y3</name>
        <initializer>= { 0x00 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="87" column="9" bodyfile="main/sevetest30_LedArray.c" bodystart="87" bodyend="87"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___led_array_8c_1ab93b7c1b7542d1a593b9b472439ca831" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t blue_y4[LINE_LED_NUMBER]</definition>
        <argsstring>[LINE_LED_NUMBER]</argsstring>
        <name>blue_y4</name>
        <initializer>= { 0x00 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="88" column="9" bodyfile="main/sevetest30_LedArray.c" bodystart="88" bodyend="88"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___led_array_8c_1a5699e1e932a740cf0e1f458ffc06aeda" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t blue_y5[LINE_LED_NUMBER]</definition>
        <argsstring>[LINE_LED_NUMBER]</argsstring>
        <name>blue_y5</name>
        <initializer>= { 0x00 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="89" column="9" bodyfile="main/sevetest30_LedArray.c" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___led_array_8c_1a8be7d772d2f591ba28b5557ad253f5aa" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t blue_y6[LINE_LED_NUMBER]</definition>
        <argsstring>[LINE_LED_NUMBER]</argsstring>
        <name>blue_y6</name>
        <initializer>= { 0x00 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="90" column="9" bodyfile="main/sevetest30_LedArray.c" bodystart="90" bodyend="90"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___led_array_8c_1ac405ab48a40101a4f204b6640a664058" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t blue_y7[LINE_LED_NUMBER]</definition>
        <argsstring>[LINE_LED_NUMBER]</argsstring>
        <name>blue_y7</name>
        <initializer>= { 0x00 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="91" column="9" bodyfile="main/sevetest30_LedArray.c" bodystart="91" bodyend="91"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___led_array_8c_1ac74003f8060ad60a09320238f5c296fd" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t blue_y8[LINE_LED_NUMBER]</definition>
        <argsstring>[LINE_LED_NUMBER]</argsstring>
        <name>blue_y8</name>
        <initializer>= { 0x00 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="92" column="9" bodyfile="main/sevetest30_LedArray.c" bodystart="92" bodyend="92"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___led_array_8c_1ac25cee29209cacfa7ca7117034e2f5ae" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t blue_y9[LINE_LED_NUMBER]</definition>
        <argsstring>[LINE_LED_NUMBER]</argsstring>
        <name>blue_y9</name>
        <initializer>= { 0x00 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="93" column="9" bodyfile="main/sevetest30_LedArray.c" bodystart="93" bodyend="93"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___led_array_8c_1adcd0acc99a935f349189bc6869eb3b15" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t blue_y10[LINE_LED_NUMBER]</definition>
        <argsstring>[LINE_LED_NUMBER]</argsstring>
        <name>blue_y10</name>
        <initializer>= { 0x00 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="94" column="9" bodyfile="main/sevetest30_LedArray.c" bodystart="94" bodyend="94"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___led_array_8c_1a5d3079898178520150951b2510402570" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t blue_y11[LINE_LED_NUMBER]</definition>
        <argsstring>[LINE_LED_NUMBER]</argsstring>
        <name>blue_y11</name>
        <initializer>= { 0x00 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="95" column="9" bodyfile="main/sevetest30_LedArray.c" bodystart="95" bodyend="95"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___led_array_8c_1a06afd935739fe99465ecc66472ea75a3" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t blue_y12[LINE_LED_NUMBER]</definition>
        <argsstring>[LINE_LED_NUMBER]</argsstring>
        <name>blue_y12</name>
        <initializer>= { 0x00 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="96" column="9" bodyfile="main/sevetest30_LedArray.c" bodystart="96" bodyend="96"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___led_array_8c_1a18a7aec9e884728f86ab05ba825ea4bc" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int ledarray_gpio_info[VERTICAL_LED_NUMBER]</definition>
        <argsstring>[VERTICAL_LED_NUMBER]</argsstring>
        <name>ledarray_gpio_info</name>
        <initializer>= { 4, 5, 6, 7, 17, 18, 8, 42, 41, 40, 39, 38 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="98" column="11" bodyfile="main/sevetest30_LedArray.c" bodystart="98" bodyend="98"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___led_array_8c_1ae2fe0d11648c892888a243c9e29cbb81" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t compound_result[LINE_LED_NUMBER *3]</definition>
        <argsstring>[LINE_LED_NUMBER *3]</argsstring>
        <name>compound_result</name>
        <initializer>= { 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="99" column="9" bodyfile="main/sevetest30_LedArray.c" bodystart="99" bodyend="99"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___led_array_8c_1a16ebbd49920cbc3bd87ba89ccd565928" prot="public" static="no" mutable="no">
        <type>rmt_config_t *</type>
        <definition>rmt_config_t* rmt_cfg0</definition>
        <argsstring></argsstring>
        <name>rmt_cfg0</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="104" column="14" bodyfile="main/sevetest30_LedArray.c" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___led_array_8c_1ad24caf1fb6502d896f22bc6d3d147192" prot="public" static="no" mutable="no">
        <type>rmt_config_t *</type>
        <definition>rmt_config_t* rmt_cfg1</definition>
        <argsstring></argsstring>
        <name>rmt_cfg1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="105" column="14" bodyfile="main/sevetest30_LedArray.c" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___led_array_8c_1a842219e4ed8f8a51ac4b38146710c50c" prot="public" static="no" mutable="no">
        <type>led_strip_t *</type>
        <definition>led_strip_t* strip0</definition>
        <argsstring></argsstring>
        <name>strip0</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="106" column="13" bodyfile="main/sevetest30_LedArray.c" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___led_array_8c_1ac31eaf0c595a0d46b92d3983d2a30444" prot="public" static="no" mutable="no">
        <type>led_strip_t *</type>
        <definition>led_strip_t* strip1</definition>
        <argsstring></argsstring>
        <name>strip1</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="107" column="13" bodyfile="main/sevetest30_LedArray.c" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___led_array_8c_1a464c27e038e79cd7b41d1b722be67cbb" prot="public" static="no" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t matrix_0[7]</definition>
        <argsstring>[7]</argsstring>
        <name>matrix_0</name>
        <initializer>= { 0xF0, 0x90, 0x90, 0x90, 0x90, 0x90, 0xF0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="110" column="15" bodyfile="main/sevetest30_LedArray.c" bodystart="110" bodyend="110"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___led_array_8c_1a6a364ef03edff14164920dfaf30cf726" prot="public" static="no" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t matrix_1[7]</definition>
        <argsstring>[7]</argsstring>
        <name>matrix_1</name>
        <initializer>= { 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="111" column="15" bodyfile="main/sevetest30_LedArray.c" bodystart="111" bodyend="111"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___led_array_8c_1a152f124ec09f393e61d48ae1a1a2d1d1" prot="public" static="no" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t matrix_2[7]</definition>
        <argsstring>[7]</argsstring>
        <name>matrix_2</name>
        <initializer>= { 0xF0, 0x10, 0x10, 0xF0, 0x80, 0x80, 0xF0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="112" column="15" bodyfile="main/sevetest30_LedArray.c" bodystart="112" bodyend="112"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___led_array_8c_1a785387d63238f0281285b05ffd8aebbf" prot="public" static="no" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t matrix_3[7]</definition>
        <argsstring>[7]</argsstring>
        <name>matrix_3</name>
        <initializer>= { 0xF0, 0x10, 0x10, 0xF0, 0x10, 0x10, 0xF0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="113" column="15" bodyfile="main/sevetest30_LedArray.c" bodystart="113" bodyend="113"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___led_array_8c_1aa610aec253c352d60c19198e811bc961" prot="public" static="no" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t matrix_4[7]</definition>
        <argsstring>[7]</argsstring>
        <name>matrix_4</name>
        <initializer>= { 0x10, 0x30, 0x50, 0xF0, 0x10, 0x10, 0x10 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="114" column="15" bodyfile="main/sevetest30_LedArray.c" bodystart="114" bodyend="114"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___led_array_8c_1a6c3758a3b5c2352f7795951029f08106" prot="public" static="no" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t matrix_5[7]</definition>
        <argsstring>[7]</argsstring>
        <name>matrix_5</name>
        <initializer>= { 0xF0, 0x80, 0x80, 0xF0, 0x10, 0x10, 0xF0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="115" column="15" bodyfile="main/sevetest30_LedArray.c" bodystart="115" bodyend="115"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___led_array_8c_1a0acc37d8391e6bf93cd8e30d00cef34d" prot="public" static="no" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t matrix_6[7]</definition>
        <argsstring>[7]</argsstring>
        <name>matrix_6</name>
        <initializer>= { 0xF0, 0x80, 0x80, 0xF0, 0x90, 0x90, 0xF0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="116" column="15" bodyfile="main/sevetest30_LedArray.c" bodystart="116" bodyend="116"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___led_array_8c_1a2367a8d20a980cf8add1d5aa01dae14d" prot="public" static="no" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t matrix_7[7]</definition>
        <argsstring>[7]</argsstring>
        <name>matrix_7</name>
        <initializer>= { 0xF0, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="117" column="15" bodyfile="main/sevetest30_LedArray.c" bodystart="117" bodyend="117"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___led_array_8c_1aabb41927fed94381819288e1d3271fb2" prot="public" static="no" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t matrix_8[7]</definition>
        <argsstring>[7]</argsstring>
        <name>matrix_8</name>
        <initializer>= { 0xF0, 0x90, 0x90, 0xF0, 0x90, 0x90, 0xF0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="118" column="15" bodyfile="main/sevetest30_LedArray.c" bodystart="118" bodyend="118"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___led_array_8c_1abfc2482a77212755a828b723e0928ad9" prot="public" static="no" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t matrix_9[7]</definition>
        <argsstring>[7]</argsstring>
        <name>matrix_9</name>
        <initializer>= { 0xF0, 0x90, 0x90, 0xF0, 0x10, 0x10, 0xF0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="119" column="15" bodyfile="main/sevetest30_LedArray.c" bodystart="119" bodyend="119"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___led_array_8c_1acd62dac27e0918225ab0aede60ee2f18" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t draw_line_count[VERTICAL_LED_NUMBER]</definition>
        <argsstring>[VERTICAL_LED_NUMBER]</argsstring>
        <name>draw_line_count</name>
        <initializer>= { 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="124" column="9" bodyfile="main/sevetest30_LedArray.c" bodystart="124" bodyend="124"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___led_array_8c_1a63cce031c5f961a28a01b0863bbbc912" prot="public" static="no" mutable="no">
        <type><ref refid="sevetest30___led_array_8h_1a43484d7921da2388b427cde75836f46e" kindref="member">ledarray_refresh_mode_t</ref></type>
        <definition>ledarray_refresh_mode_t refresh_mode_buf</definition>
        <argsstring></argsstring>
        <name>refresh_mode_buf</name>
        <initializer>= <ref refid="sevetest30___led_array_8h_1a43484d7921da2388b427cde75836f46ea5befe4eb59c860532f3f3287eae868d9" kindref="member">LEDARRAY_REFRESH_DISABLE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="125" column="25" bodyfile="main/sevetest30_LedArray.c" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___led_array_8c_1aa35baad1478bed024ce17f93bc5f4ce0" prot="public" static="no" mutable="no">
        <type>SemaphoreHandle_t</type>
        <definition>SemaphoreHandle_t refresh_Task_Mutex</definition>
        <argsstring></argsstring>
        <name>refresh_Task_Mutex</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="126" column="19" bodyfile="main/sevetest30_LedArray.c" bodystart="126" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="sevetest30___led_array_8c_1a7494912b8b468cd33f54bbfecbbbba17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void refresh_ALL_ONCE_Task</definition>
        <argsstring>()</argsstring>
        <name>refresh_ALL_ONCE_Task</name>
        <briefdescription>
<para>[单次全刷任务]一次性刷新整个屏幕所有行,全屏刷新之后才发生延时 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="129" column="6" bodyfile="main/sevetest30_LedArray.c" bodystart="129" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="sevetest30___led_array_8c_1ad0c691643dc5861bc0fda7636c697537" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void refresh_ALL_MULTIPLE_Task</definition>
        <argsstring>()</argsstring>
        <name>refresh_ALL_MULTIPLE_Task</name>
        <briefdescription>
<para>[多次全刷任务]分多步进地完成刷新整个屏幕所有行,每步之后发生延时 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="139" column="6" bodyfile="main/sevetest30_LedArray.c" bodystart="139" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="sevetest30___led_array_8c_1a3f203095cbab702cdc81c81b3b784ad0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void refresh_PART_ONCE_Task</definition>
        <argsstring>()</argsstring>
        <name>refresh_PART_ONCE_Task</name>
        <briefdescription>
<para>[单次局刷任务]一次性刷新所有发生绘制活动的行,需要部分完全刷新之后才发生延时 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="149" column="6" bodyfile="main/sevetest30_LedArray.c" bodystart="149" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="sevetest30___led_array_8c_1a2bfb656ba73798b17635142277e0ee33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void refresh_PART_MULTIPLE_Task</definition>
        <argsstring>()</argsstring>
        <name>refresh_PART_MULTIPLE_Task</name>
        <briefdescription>
<para>[多次局刷任务]分多步进地完成刷新所有发生绘制活动的行,每步之后发生延时 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="160" column="6" bodyfile="main/sevetest30_LedArray.c" bodystart="160" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="sevetest30___led_array_8c_1a350204007e04d378da6acbc29c1c816c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ledarray_set_refresh_mode</definition>
        <argsstring>(ledarray_refresh_mode_t mode)</argsstring>
        <name>ledarray_set_refresh_mode</name>
        <param>
          <type><ref refid="sevetest30___led_array_8h_1a43484d7921da2388b427cde75836f46e" kindref="member">ledarray_refresh_mode_t</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>设置LED阵列的刷新模式 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>刷新模式 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="172" column="6" bodyfile="main/sevetest30_LedArray.c" bodystart="172" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="sevetest30___led_array_8c_1aa49fb91e47f7a6f6e916239164d8ee4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t *</type>
        <definition>uint8_t * rectangle</definition>
        <argsstring>(int8_t breadth, int8_t length)</argsstring>
        <name>rectangle</name>
        <param>
          <type>int8_t</type>
          <declname>breadth</declname>
        </param>
        <param>
          <type>int8_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>生成一个矩形字模(需要释放) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>breadth</parametername>
</parameternamelist>
<parameterdescription>
<para>矩形横向长度(1-LINE_LED_NUMBER) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>矩形纵向长度(1-VERTICAL_LED_NUMBER) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>返回值 rectangle_data 为矩形数据地址 *rectangle_data 为 总数据大小（Byte） <ref refid="sevetest30___led_array_8h_1a7eebbaa5b8e0a2e58d079d7990de0ea3" kindref="member">RECTANGLE_MATRIX(rectangle_data)</ref> 为 矩形字模 </para>
</simplesect>
<simplesect kind="return"><para>例 返回值为p separation_draw(x,y,b,RECTANGLE_MATRIX(p),*p,color,change); free(p); </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="221" column="9" bodyfile="main/sevetest30_LedArray.c" bodystart="221" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="sevetest30___led_array_8c_1a9e8309cbecd85eff7cbf584b8ff4c743" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void separation_draw</definition>
        <argsstring>(int32_t x, int32_t y, uint8_t breadth, const uint8_t *p, uint8_t byte_number, uint8_t in_color[3], uint8_t change)</argsstring>
        <name>separation_draw</name>
        <param>
          <type>int32_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>breadth</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>byte_number</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>in_color</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>change</declname>
        </param>
        <briefdescription>
<para>三色分离方式 取模适配PCtoLCD2002 </para>
        </briefdescription>
        <detaileddescription>
<para>取模说明：从第一行开始向右每取8个点作为一个字节，如果最后不足8个点就补满8位。</para>
<para>取模顺序是从高到低，即第一个点作为最高位。如*----<mdash/>取为10000000</para>
<para>RGB三色分离方式绘制,只支持单色绘制,之后ledarray_set_and_write需要被调用才可显示</para>
<para>取模方式请参考头文件 <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>图案横坐标(无范围限制，超出不显示)，灯板左上角设为原点（1，1），由左到右绘制 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>图案纵坐标(无范围限制，超出不显示)，灯板左上角设为原点（1，1），由上到下绘制 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>breadth</parametername>
</parameternamelist>
<parameterdescription>
<para>图案宽度（已定义的：FIGURE-数字 LETTER-字母 CHINESE-汉字） </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>导入字模指针 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>byte_number</parametername>
</parameternamelist>
<parameterdescription>
<para>总数据长度(Byte) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_color</parametername>
</parameternamelist>
<parameterdescription>
<para>注入颜色 （RGB） </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>change</parametername>
</parameternamelist>
<parameterdescription>
<para>亮度调整（1-100）警告:过高的调整幅度可能导致色彩失真 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="284" column="6" bodyfile="main/sevetest30_LedArray.c" bodystart="284" bodyend="333"/>
      </memberdef>
      <memberdef kind="function" id="sevetest30___led_array_8c_1ad4691147267eedfb4323ab9781b2dd62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void direct_draw</definition>
        <argsstring>(int32_t x, int32_t y, const uint8_t *p, uint8_t change)</argsstring>
        <name>direct_draw</name>
        <param>
          <type>int32_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>change</declname>
        </param>
        <briefdescription>
<para>彩色图像直显方式 取模方式适配Img2Lcd </para>
        </briefdescription>
        <detaileddescription>
<para>[水平扫描，从左到右，从顶到底扫描，24位真彩（RGB顺序），需要图像数据头]</para>
<para>将自动获取图像头参数,之后ledarray_set_and_write需要被调用才可显示 <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>图案横坐标(无范围限制，超出不显示)，灯板左上角设为原点（1，1），由左到右绘制 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>图案纵坐标(无范围限制，超出不显示)，灯板左上角设为原点（1，1），由上到下绘制 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>导入图像指针 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>change</parametername>
</parameternamelist>
<parameterdescription>
<para>亮度调整（1-100）警告:过高的调整幅度可能导致色彩失真 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="342" column="6" bodyfile="main/sevetest30_LedArray.c" bodystart="342" bodyend="395"/>
      </memberdef>
      <memberdef kind="function" id="sevetest30___led_array_8c_1ab5ecd4e3eb3636ecc41c3f0a0c67e626" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void clean_draw</definition>
        <argsstring>()</argsstring>
        <name>clean_draw</name>
        <briefdescription>
<para>清除屏幕上的所有图案以及数据缓存 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="399" column="6" bodyfile="main/sevetest30_LedArray.c" bodystart="399" bodyend="406"/>
      </memberdef>
      <memberdef kind="function" id="sevetest30___led_array_8c_1a92ce28a239503c364726b5673f2915e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void clean_draw_buf</definition>
        <argsstring>(int8_t y)</argsstring>
        <name>clean_draw_buf</name>
        <param>
          <type>int8_t</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>清空指定行的图像 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>指定行纵坐标(从1开始) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="410" column="6" bodyfile="main/sevetest30_LedArray.c" bodystart="410" bodyend="415"/>
      </memberdef>
      <memberdef kind="function" id="sevetest30___led_array_8c_1a4c4efd3188ccd65c9a42b5e67e6c21d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void progress_draw_buf</definition>
        <argsstring>(int8_t y, uint8_t step, uint8_t *color)</argsstring>
        <name>progress_draw_buf</name>
        <param>
          <type>int8_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>step</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>color</declname>
        </param>
        <briefdescription>
<para>渐进指定行的图像，使得颜色向目标颜色以步进值偏移一步，这只会对绘制状态非活动的区域起作用 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>指定行纵坐标 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>step</parametername>
</parameternamelist>
<parameterdescription>
<para>步进值 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>目标颜色 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="421" column="6" bodyfile="main/sevetest30_LedArray.c" bodystart="421" bodyend="453"/>
      </memberdef>
      <memberdef kind="function" id="sevetest30___led_array_8c_1a248d05ce7ed398103040f5c5b45739cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void print_number</definition>
        <argsstring>(int32_t x, int32_t y, int8_t figure, uint8_t color[3], uint8_t change)</argsstring>
        <name>print_number</name>
        <param>
          <type>int32_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int8_t</type>
          <declname>figure</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>color</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>change</declname>
        </param>
        <briefdescription>
<para>打印一个数字(软件字模) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>起始坐标x </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>起始坐标x </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>figure</parametername>
</parameternamelist>
<parameterdescription>
<para>输入整型0-9数字,不支持负数 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>颜色RGB </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>change</parametername>
</parameternamelist>
<parameterdescription>
<para>亮度0-100 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="463" column="6" bodyfile="main/sevetest30_LedArray.c" bodystart="463" bodyend="515"/>
      </memberdef>
      <memberdef kind="function" id="sevetest30___led_array_8c_1afbd085293d3f3dbf3083dd048cb5a8d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void font_raw_print_12x</definition>
        <argsstring>(int32_t x, int32_t y, uint8_t color[3], uint8_t change, char *format,...)</argsstring>
        <name>font_raw_print_12x</name>
        <param>
          <type>int32_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>color</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>change</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>通过字库芯片支持在LED阵列打印任意字符,图像不含运动效果 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>图案横坐标(无范围限制，超出不显示)，灯板左上角设为原点（1，1），由左到右绘制 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>图案纵坐标(无范围限制，超出不显示)，灯板左上角设为原点（1，1），由上到下绘制 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>字符颜色 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>change</parametername>
</parameternamelist>
<parameterdescription>
<para>亮度调制 1-100 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>形式同printf的可变参量表 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="524" column="6" bodyfile="main/sevetest30_LedArray.c" bodystart="524" bodyend="606"/>
      </memberdef>
      <memberdef kind="function" id="sevetest30___led_array_8c_1ab7ec88320017091e65a906970e06dafd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void font_roll_print_12x</definition>
        <argsstring>(int32_t x, int32_t y, uint8_t color[3], uint8_t change, cartoon_handle_t cartoon_handle, char *format,...)</argsstring>
        <name>font_roll_print_12x</name>
        <param>
          <type>int32_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>color</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>change</declname>
        </param>
        <param>
          <type><ref refid="sevetest30___u_i_8h_1a62944b735214a319f7aa83ce4214b8fd" kindref="member">cartoon_handle_t</ref></type>
          <declname>cartoon_handle</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>通过字库芯片支持在LED阵列滚动打印任意字符 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>初始横坐标(无范围限制，超出不显示)，灯板左上角设为原点（1，1），由左到右绘制 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>初始纵坐标(无范围限制，超出不显示)，灯板左上角设为原点（1，1），由上到下绘制 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>字符颜色 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>change</parametername>
</parameternamelist>
<parameterdescription>
<para>亮度调制 1-100 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cartoon_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>sevetest30_UI动画支持句柄,填写句柄启用预设的动画,填写NULL以使用默认效果 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>形式同printf的可变参量表 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="615" column="6" bodyfile="main/sevetest30_LedArray.c" bodystart="615" bodyend="758"/>
      </memberdef>
      <memberdef kind="function" id="sevetest30___led_array_8c_1aefd30405e1080808060dc92054df0bdb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ledarray_init</definition>
        <argsstring>()</argsstring>
        <name>ledarray_init</name>
        <briefdescription>
<para>初始化灯板阵列 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="763" column="6" bodyfile="main/sevetest30_LedArray.c" bodystart="763" bodyend="803"/>
      </memberdef>
      <memberdef kind="function" id="sevetest30___led_array_8c_1af09cfa198e2fb90a5aa9654d886f3664" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ledarray_deinit</definition>
        <argsstring>()</argsstring>
        <name>ledarray_deinit</name>
        <briefdescription>
<para>去初始化灯板阵列 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="806" column="6" bodyfile="main/sevetest30_LedArray.c" bodystart="806" bodyend="827"/>
      </memberdef>
      <memberdef kind="function" id="sevetest30___led_array_8c_1a0aa50fecb446229afaf4d7b4808254d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ledarray_set_and_write</definition>
        <argsstring>(uint8_t group_sw)</argsstring>
        <name>ledarray_set_and_write</name>
        <param>
          <type>uint8_t</type>
          <declname>group_sw</declname>
        </param>
        <briefdescription>
<para>灯板阵列选定并写入，未通过ledarray_init()初始化ledarray，函数内会自动初始化 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>group_sw</parametername>
</parameternamelist>
<parameterdescription>
<para>选定要刷新的组,每组有两串WS2812,如12行WS2812,共6组,取值为0-5,不足一组单独按一组计算 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="831" column="6" bodyfile="main/sevetest30_LedArray.c" bodystart="831" bodyend="870"/>
      </memberdef>
      <memberdef kind="function" id="sevetest30___led_array_8c_1a6e36c132215af27002355b2ff9d8b072" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void color_input</definition>
        <argsstring>(int8_t x, int8_t y, uint8_t *dat)</argsstring>
        <name>color_input</name>
        <param>
          <type>int8_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int8_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>dat</declname>
        </param>
        <briefdescription>
<para>颜色导入,SE30中VERTICAL_LED_NUMBER=12 如果您希望扩展屏幕纵向长度，务必修改这个函数 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>绝对横坐标(0 到 LINE_LED_NUMBER-1) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>一般纵坐标(1 到 VERTICAL_LED_NUMBER) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dat</parametername>
</parameternamelist>
<parameterdescription>
<para>导入的颜色RGB数据位置 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="876" column="6" bodyfile="main/sevetest30_LedArray.c" bodystart="876" bodyend="963"/>
      </memberdef>
      <memberdef kind="function" id="sevetest30___led_array_8c_1afe36c756b8e5400fbe11f1168eeebab8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void color_output</definition>
        <argsstring>(int8_t x, int8_t y, uint8_t *dat)</argsstring>
        <name>color_output</name>
        <param>
          <type>int8_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int8_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>dat</declname>
        </param>
        <briefdescription>
<para>颜色导出,SE30中VERTICAL_LED_NUMBER=12 如果您希望扩展屏幕纵向长度，务必修改这个函数 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>绝对横坐标(0 到 LINE_LED_NUMBER-1) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>一般纵坐标(1 到 LINE_LED_NUMBER) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dat</parametername>
</parameternamelist>
<parameterdescription>
<para>导出存储的颜色RGB数据的位置 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="969" column="6" bodyfile="main/sevetest30_LedArray.c" bodystart="969" bodyend="1054"/>
      </memberdef>
      <memberdef kind="function" id="sevetest30___led_array_8c_1a670cb7e9249c70161c21ac2aae2b4e4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void color_compound</definition>
        <argsstring>(uint8_t line_sw)</argsstring>
        <name>color_compound</name>
        <param>
          <type>uint8_t</type>
          <declname>line_sw</declname>
        </param>
        <briefdescription>
<para>颜色数据合成,将R red_y(x) G green_y(x) B blue_y(x) 合成为 为WS2812发送的数据 </para>
        </briefdescription>
        <detaileddescription>
<para>SE30中VERTICAL_LED_NUMBER=12 如果您希望扩展屏幕纵向长度，务必修改这个函数 <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>line_sw</parametername>
</parameternamelist>
<parameterdescription>
<para>合成选定的行(1-VERTICAL_LED_NUMBER) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="1060" column="6" bodyfile="main/sevetest30_LedArray.c" bodystart="1060" bodyend="1144"/>
      </memberdef>
      <memberdef kind="function" id="sevetest30___led_array_8c_1acf17011d8638511cc2a6ea72883b0bdb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ledarray_intensity_change</definition>
        <argsstring>(uint8_t *r, uint8_t *g, uint8_t *b, uint8_t intensity)</argsstring>
        <name>ledarray_intensity_change</name>
        <param>
          <type>uint8_t *</type>
          <declname>r</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>g</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>intensity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="1149" column="6" bodyfile="main/sevetest30_LedArray.c" bodystart="1149" bodyend="1168"/>
      </memberdef>
      <memberdef kind="function" id="sevetest30___led_array_8c_1a56a0725fa7f743bec9d665033a24faec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double value_max</definition>
        <argsstring>(double value1, double value2, double value3)</argsstring>
        <name>value_max</name>
        <param>
          <type>double</type>
          <declname>value1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="1171" column="8" bodyfile="main/sevetest30_LedArray.c" bodystart="1171" bodyend="1188"/>
      </memberdef>
      <memberdef kind="function" id="sevetest30___led_array_8c_1aaef76fa03766a31368f86fdb404319d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double value_min</definition>
        <argsstring>(double value1, double value2, double value3)</argsstring>
        <name>value_min</name>
        <param>
          <type>double</type>
          <declname>value1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="1191" column="8" bodyfile="main/sevetest30_LedArray.c" bodystart="1191" bodyend="1208"/>
      </memberdef>
      <memberdef kind="function" id="sevetest30___led_array_8c_1af86abda8c11bbccc90993c7b4e18fd37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rgb_to_hvs</definition>
        <argsstring>(uint8_t red_buf, uint8_t green_buf, uint8_t blue_buf, uint32_t *p_h, uint32_t *p_s, uint32_t *p_v)</argsstring>
        <name>rgb_to_hvs</name>
        <param>
          <type>uint8_t</type>
          <declname>red_buf</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>green_buf</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>blue_buf</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>p_h</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>p_s</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>p_v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="1213" column="6" bodyfile="main/sevetest30_LedArray.c" bodystart="1213" bodyend="1260"/>
      </memberdef>
      <memberdef kind="function" id="sevetest30___led_array_8c_1a1d9fe3c8e1488269731f114f65493de9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void led_strip_hsv2rgb</definition>
        <argsstring>(uint32_t h, uint32_t s, uint32_t v, uint32_t *r, uint32_t *g, uint32_t *b)</argsstring>
        <name>led_strip_hsv2rgb</name>
        <param>
          <type>uint32_t</type>
          <declname>h</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>s</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>v</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>r</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>g</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Simple helper function, converting HSV color space to RGB color space </para>
        </briefdescription>
        <detaileddescription>
<para>Wiki: <ulink url="https://en.wikipedia.org/wiki/HSL_and_HSV">https://en.wikipedia.org/wiki/HSL_and_HSV</ulink> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_LedArray.c" line="1270" column="6" bodyfile="main/sevetest30_LedArray.c" bodystart="1270" bodyend="1315"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>701Enti<sp/>MIT<sp/>License</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>©<sp/>2024<sp/>&lt;701Enti<sp/>organization&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>“Software”),</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>“AS<sp/>IS”,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR<sp/>IMPLIED,</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>该文件归属701Enti组织，SEVETEST30开发团队应该提供责任性维护，包含WS2812构成的LED阵列的图形与显示处理，不包含WS2812底层驱动程序</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>如您发现一些问题，请及时联系我们，我们非常感谢您的支持</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>敬告：文件本体不包含WS2812硬件驱动代码，而是参考Espressif官方提供的led_strip例程文件,同时还使用了源文件中的hsv到rgb的转换函数,非常感谢</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>绘制函数本身不会刷新屏幕,需要运行屏幕刷新,才会在屏幕上点亮</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>绘制函数规定使用字模点阵的左上角的点作为其坐标表示点,LED的延伸方向为X轴正方向,沿线方向的灯排对应的gpio号在ledarray_gpio_info数组的先后顺序指代其在Y轴正向出现顺序,对应角标+1为其对应的Y轴坐标</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>在标准SEVETEST30-LedArray板下,正视&quot;701Enti&quot;标志,此时坐标原点应为最左上角像素点,X轴正方向向右,Y轴正方向向下,原点坐标为(1,1)即填入函数<sp/>x<sp/>=<sp/>1,y<sp/>=<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>ESP-IDF项目地址<sp/>https://github.com/espressif/esp-idf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>官方例程连接：https://github.com/espressif/esp-idf/tree/release/v4.4/examples/common_components/led_strip</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>官方文档链接：https://docs.espressif.com/projects/esp-idf/zh_CN/release-v4.4/esp32/api-reference/peripherals/rmt.html</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>github:<sp/>https://github.com/701Enti</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>bilibili:<sp/>701Enti</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sevetest30___led_array_8h" kindref="compound">sevetest30_LedArray.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sevetest30___u_i_8h" kindref="compound">sevetest30_UI.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;freertos/FreeRTOS.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;freertos/task.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stdarg.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;led_strip.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;malloc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;esp_log.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;driver/rmt.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;hal/rmt_types.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="gt32l32s0140_8h" kindref="compound">gt32l32s0140.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/>一个图像可看作不同颜色的像素组合，而每个像素颜色可用红绿蓝三元色的深度（亮度）表示</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/>因此，我们可以将一个图像分离成三个单色图层，我们就定义三个8bit数组</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/>分别表示这三个图层中[12x24=288]像素R<sp/>G<sp/>B<sp/>三色的明暗程度，合成他们便可表示显示板上的图像</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/>但是考虑到硬件设计中，WS2812是一排24灯为最小操作单位写入，所以每个图层最好分割成12排</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/>最后，我们选择以排为单位，3个图层，每个图层12排，共3x12=36个数组，这里称为缓冲区</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SE30中VERTICAL_LED_NUMBER=12<sp/>如果您希望扩展屏幕纵向长度，务必增加足够变量<sp/>red_y(x)<sp/>green_y(x)<sp/>blue_y(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//请勿移动以下数组定义位置,可能产生内存对齐问题</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal">uint8_t<sp/><ref refid="sevetest30___led_array_8c_1ad44e1ae1c4f598fe02ebc3eb954e5820" kindref="member">red_y1</ref>[<ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref>]<sp/>=<sp/>{<sp/>0x00<sp/>};</highlight></codeline>
<codeline lineno="60"><highlight class="normal">uint8_t<sp/><ref refid="sevetest30___led_array_8c_1ab5de663c114235e7c8ccd61c8f135961" kindref="member">red_y2</ref>[<ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref>]<sp/>=<sp/>{<sp/>0x00<sp/>};</highlight></codeline>
<codeline lineno="61"><highlight class="normal">uint8_t<sp/><ref refid="sevetest30___led_array_8c_1aa4c4611d22f3ccbb1b368068a4b9fcf5" kindref="member">red_y3</ref>[<ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref>]<sp/>=<sp/>{<sp/>0x00<sp/>};</highlight></codeline>
<codeline lineno="62"><highlight class="normal">uint8_t<sp/><ref refid="sevetest30___led_array_8c_1a539fbf6aa70ee23c9e9e2b2c674b930c" kindref="member">red_y4</ref>[<ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref>]<sp/>=<sp/>{<sp/>0x00<sp/>};</highlight></codeline>
<codeline lineno="63"><highlight class="normal">uint8_t<sp/><ref refid="sevetest30___led_array_8c_1a435a079e71aa8aafa84563747c7b98ff" kindref="member">red_y5</ref>[<ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref>]<sp/>=<sp/>{<sp/>0x00<sp/>};</highlight></codeline>
<codeline lineno="64"><highlight class="normal">uint8_t<sp/><ref refid="sevetest30___led_array_8c_1afee0b5bcdd375220257264402111beec" kindref="member">red_y6</ref>[<ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref>]<sp/>=<sp/>{<sp/>0x00<sp/>};</highlight></codeline>
<codeline lineno="65"><highlight class="normal">uint8_t<sp/><ref refid="sevetest30___led_array_8c_1ab9979d3c8c123bec855d7ac12427dbe0" kindref="member">red_y7</ref>[<ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref>]<sp/>=<sp/>{<sp/>0x00<sp/>};</highlight></codeline>
<codeline lineno="66"><highlight class="normal">uint8_t<sp/><ref refid="sevetest30___led_array_8c_1a89d839e16672ca9353e608407687e140" kindref="member">red_y8</ref>[<ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref>]<sp/>=<sp/>{<sp/>0x00<sp/>};</highlight></codeline>
<codeline lineno="67"><highlight class="normal">uint8_t<sp/><ref refid="sevetest30___led_array_8c_1a1daff4a6c90d34894d6097271bd2ad83" kindref="member">red_y9</ref>[<ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref>]<sp/>=<sp/>{<sp/>0x00<sp/>};</highlight></codeline>
<codeline lineno="68"><highlight class="normal">uint8_t<sp/><ref refid="sevetest30___led_array_8c_1a21bdacda990e8d3298c917ca08242a04" kindref="member">red_y10</ref>[<ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref>]<sp/>=<sp/>{<sp/>0x00<sp/>};</highlight></codeline>
<codeline lineno="69"><highlight class="normal">uint8_t<sp/><ref refid="sevetest30___led_array_8c_1aacc4ccd900a8206611c259b456b6bb8e" kindref="member">red_y11</ref>[<ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref>]<sp/>=<sp/>{<sp/>0x00<sp/>};</highlight></codeline>
<codeline lineno="70"><highlight class="normal">uint8_t<sp/><ref refid="sevetest30___led_array_8c_1a77e4b35443879308f6e21ea521f25bf1" kindref="member">red_y12</ref>[<ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref>]<sp/>=<sp/>{<sp/>0x00<sp/>};</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//请勿移动以下数组定义位置,可能产生内存对齐问题</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal">uint8_t<sp/><ref refid="sevetest30___led_array_8c_1a75f2f1c84d9fffcc18505c049a316ff6" kindref="member">green_y1</ref>[<ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref>]<sp/>=<sp/>{<sp/>0x00<sp/>};</highlight></codeline>
<codeline lineno="73"><highlight class="normal">uint8_t<sp/><ref refid="sevetest30___led_array_8c_1a9b7ecb2850a8d90716c358a1df8ab74d" kindref="member">green_y2</ref>[<ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref>]<sp/>=<sp/>{<sp/>0x00<sp/>};</highlight></codeline>
<codeline lineno="74"><highlight class="normal">uint8_t<sp/><ref refid="sevetest30___led_array_8c_1a60f75c95fdefdb11ecc9068290dd56b8" kindref="member">green_y3</ref>[<ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref>]<sp/>=<sp/>{<sp/>0x00<sp/>};</highlight></codeline>
<codeline lineno="75"><highlight class="normal">uint8_t<sp/><ref refid="sevetest30___led_array_8c_1aa229a3f8969ceb591935cfc572168edc" kindref="member">green_y4</ref>[<ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref>]<sp/>=<sp/>{<sp/>0x00<sp/>};</highlight></codeline>
<codeline lineno="76"><highlight class="normal">uint8_t<sp/><ref refid="sevetest30___led_array_8c_1a9e64428ff1ca27f6d77ac6ba4db68d2d" kindref="member">green_y5</ref>[<ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref>]<sp/>=<sp/>{<sp/>0x00<sp/>};</highlight></codeline>
<codeline lineno="77"><highlight class="normal">uint8_t<sp/><ref refid="sevetest30___led_array_8c_1a10f41a0df3fc36db986b4184f8cac3d6" kindref="member">green_y6</ref>[<ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref>]<sp/>=<sp/>{<sp/>0x00<sp/>};</highlight></codeline>
<codeline lineno="78"><highlight class="normal">uint8_t<sp/><ref refid="sevetest30___led_array_8c_1ac4405824d3564d2b514f0b6775a08684" kindref="member">green_y7</ref>[<ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref>]<sp/>=<sp/>{<sp/>0x00<sp/>};</highlight></codeline>
<codeline lineno="79"><highlight class="normal">uint8_t<sp/><ref refid="sevetest30___led_array_8c_1abb1ee1f170bf776c1bb26df891b8ad6f" kindref="member">green_y8</ref>[<ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref>]<sp/>=<sp/>{<sp/>0x00<sp/>};</highlight></codeline>
<codeline lineno="80"><highlight class="normal">uint8_t<sp/><ref refid="sevetest30___led_array_8c_1ab085bed50e76747cef84dc4a569ddf1b" kindref="member">green_y9</ref>[<ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref>]<sp/>=<sp/>{<sp/>0x00<sp/>};</highlight></codeline>
<codeline lineno="81"><highlight class="normal">uint8_t<sp/><ref refid="sevetest30___led_array_8c_1a096d53f53c0cdf27d30c75b980d73c06" kindref="member">green_y10</ref>[<ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref>]<sp/>=<sp/>{<sp/>0x00<sp/>};</highlight></codeline>
<codeline lineno="82"><highlight class="normal">uint8_t<sp/><ref refid="sevetest30___led_array_8c_1ae5872581873fdbd12ab0d3a1eaf20141" kindref="member">green_y11</ref>[<ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref>]<sp/>=<sp/>{<sp/>0x00<sp/>};</highlight></codeline>
<codeline lineno="83"><highlight class="normal">uint8_t<sp/><ref refid="sevetest30___led_array_8c_1a4b61050b487a27407508aaca3523d775" kindref="member">green_y12</ref>[<ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref>]<sp/>=<sp/>{<sp/>0x00<sp/>};</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//请勿移动以下数组定义位置,可能产生内存对齐问题</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal">uint8_t<sp/><ref refid="sevetest30___led_array_8c_1ab762caa46e1cb6b2c7728e38a2a40253" kindref="member">blue_y1</ref>[<ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref>]<sp/>=<sp/>{<sp/>0x00<sp/>};</highlight></codeline>
<codeline lineno="86"><highlight class="normal">uint8_t<sp/><ref refid="sevetest30___led_array_8c_1a5113018ac08ad0103de383e4d5c269d8" kindref="member">blue_y2</ref>[<ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref>]<sp/>=<sp/>{<sp/>0x00<sp/>};</highlight></codeline>
<codeline lineno="87"><highlight class="normal">uint8_t<sp/><ref refid="sevetest30___led_array_8c_1a20312d7632a95d178b319c63bd372a3c" kindref="member">blue_y3</ref>[<ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref>]<sp/>=<sp/>{<sp/>0x00<sp/>};</highlight></codeline>
<codeline lineno="88"><highlight class="normal">uint8_t<sp/><ref refid="sevetest30___led_array_8c_1ab93b7c1b7542d1a593b9b472439ca831" kindref="member">blue_y4</ref>[<ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref>]<sp/>=<sp/>{<sp/>0x00<sp/>};</highlight></codeline>
<codeline lineno="89"><highlight class="normal">uint8_t<sp/><ref refid="sevetest30___led_array_8c_1a5699e1e932a740cf0e1f458ffc06aeda" kindref="member">blue_y5</ref>[<ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref>]<sp/>=<sp/>{<sp/>0x00<sp/>};</highlight></codeline>
<codeline lineno="90"><highlight class="normal">uint8_t<sp/><ref refid="sevetest30___led_array_8c_1a8be7d772d2f591ba28b5557ad253f5aa" kindref="member">blue_y6</ref>[<ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref>]<sp/>=<sp/>{<sp/>0x00<sp/>};</highlight></codeline>
<codeline lineno="91"><highlight class="normal">uint8_t<sp/><ref refid="sevetest30___led_array_8c_1ac405ab48a40101a4f204b6640a664058" kindref="member">blue_y7</ref>[<ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref>]<sp/>=<sp/>{<sp/>0x00<sp/>};</highlight></codeline>
<codeline lineno="92"><highlight class="normal">uint8_t<sp/><ref refid="sevetest30___led_array_8c_1ac74003f8060ad60a09320238f5c296fd" kindref="member">blue_y8</ref>[<ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref>]<sp/>=<sp/>{<sp/>0x00<sp/>};</highlight></codeline>
<codeline lineno="93"><highlight class="normal">uint8_t<sp/><ref refid="sevetest30___led_array_8c_1ac25cee29209cacfa7ca7117034e2f5ae" kindref="member">blue_y9</ref>[<ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref>]<sp/>=<sp/>{<sp/>0x00<sp/>};</highlight></codeline>
<codeline lineno="94"><highlight class="normal">uint8_t<sp/><ref refid="sevetest30___led_array_8c_1adcd0acc99a935f349189bc6869eb3b15" kindref="member">blue_y10</ref>[<ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref>]<sp/>=<sp/>{<sp/>0x00<sp/>};</highlight></codeline>
<codeline lineno="95"><highlight class="normal">uint8_t<sp/><ref refid="sevetest30___led_array_8c_1a5d3079898178520150951b2510402570" kindref="member">blue_y11</ref>[<ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref>]<sp/>=<sp/>{<sp/>0x00<sp/>};</highlight></codeline>
<codeline lineno="96"><highlight class="normal">uint8_t<sp/><ref refid="sevetest30___led_array_8c_1a06afd935739fe99465ecc66472ea75a3" kindref="member">blue_y12</ref>[<ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref>]<sp/>=<sp/>{<sp/>0x00<sp/>};</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="sevetest30___led_array_8c_1a18a7aec9e884728f86ab05ba825ea4bc" kindref="member">ledarray_gpio_info</ref>[<ref refid="sevetest30___led_array_8h_1a8412ebaff2eca2bda07acae207229394" kindref="member">VERTICAL_LED_NUMBER</ref>]<sp/>=<sp/>{<sp/>4,<sp/>5,<sp/>6,<sp/>7,<sp/>17,<sp/>18,<sp/>8,<sp/>42,<sp/>41,<sp/>40,<sp/>39,<sp/>38<sp/>};<sp/></highlight><highlight class="comment">//<sp/>ws2812数据线连接的GPIO信息<sp/>第一行<sp/>到<sp/>最后一行</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal">uint8_t<sp/><ref refid="sevetest30___led_array_8c_1ae2fe0d11648c892888a243c9e29cbb81" kindref="member">compound_result</ref>[<ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref><sp/>*<sp/>3]<sp/>=<sp/>{<sp/>0<sp/>};<sp/></highlight><highlight class="comment">//<sp/>发送给WS2812的格式化数据缓存，GRB格式</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//本库WS2812使用硬件RMT驱动,占用两个RMT模块RMT0<sp/>RMT1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno=CONFIG_WIFI_SSID><highlight class="normal"></highlight><highlight class="comment">//12排分为6组(0-5)两个RMT模块实际绑定了全部的6组IO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">//通过直接的IO模式切换选择RMT的控制对象</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal">rmt_config_t*<sp/><ref refid="sevetest30___led_array_8c_1a16ebbd49920cbc3bd87ba89ccd565928" kindref="member">rmt_cfg0</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal">rmt_config_t*<sp/><ref refid="sevetest30___led_array_8c_1ad24caf1fb6502d896f22bc6d3d147192" kindref="member">rmt_cfg1</ref>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal">led_strip_t*<sp/><ref refid="sevetest30___led_array_8c_1a842219e4ed8f8a51ac4b38146710c50c" kindref="member">strip0</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="107"><highlight class="normal">led_strip_t*<sp/><ref refid="sevetest30___led_array_8c_1ac31eaf0c595a0d46b92d3983d2a30444" kindref="member">strip1</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">//<sp/>数字<sp/>0-9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="sevetest30___led_array_8c_1a464c27e038e79cd7b41d1b722be67cbb" kindref="member">matrix_0</ref>[7]<sp/>=<sp/>{<sp/>0xF0,<sp/>0x90,<sp/>0x90,<sp/>0x90,<sp/>0x90,<sp/>0x90,<sp/>0xF0<sp/>};</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="sevetest30___led_array_8h_1a6a364ef03edff14164920dfaf30cf726" kindref="member">matrix_1</ref>[7]<sp/>=<sp/>{<sp/>0x20,<sp/>0x20,<sp/>0x20,<sp/>0x20,<sp/>0x20,<sp/>0x20,<sp/>0x20<sp/>};</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="sevetest30___led_array_8h_1a152f124ec09f393e61d48ae1a1a2d1d1" kindref="member">matrix_2</ref>[7]<sp/>=<sp/>{<sp/>0xF0,<sp/>0x10,<sp/>0x10,<sp/>0xF0,<sp/>0x80,<sp/>0x80,<sp/>0xF0<sp/>};</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="sevetest30___led_array_8h_1a785387d63238f0281285b05ffd8aebbf" kindref="member">matrix_3</ref>[7]<sp/>=<sp/>{<sp/>0xF0,<sp/>0x10,<sp/>0x10,<sp/>0xF0,<sp/>0x10,<sp/>0x10,<sp/>0xF0<sp/>};</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="sevetest30___led_array_8h_1aa610aec253c352d60c19198e811bc961" kindref="member">matrix_4</ref>[7]<sp/>=<sp/>{<sp/>0x10,<sp/>0x30,<sp/>0x50,<sp/>0xF0,<sp/>0x10,<sp/>0x10,<sp/>0x10<sp/>};</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="sevetest30___led_array_8h_1a6c3758a3b5c2352f7795951029f08106" kindref="member">matrix_5</ref>[7]<sp/>=<sp/>{<sp/>0xF0,<sp/>0x80,<sp/>0x80,<sp/>0xF0,<sp/>0x10,<sp/>0x10,<sp/>0xF0<sp/>};</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="sevetest30___led_array_8h_1a0acc37d8391e6bf93cd8e30d00cef34d" kindref="member">matrix_6</ref>[7]<sp/>=<sp/>{<sp/>0xF0,<sp/>0x80,<sp/>0x80,<sp/>0xF0,<sp/>0x90,<sp/>0x90,<sp/>0xF0<sp/>};</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="sevetest30___led_array_8h_1a2367a8d20a980cf8add1d5aa01dae14d" kindref="member">matrix_7</ref>[7]<sp/>=<sp/>{<sp/>0xF0,<sp/>0x10,<sp/>0x10,<sp/>0x10,<sp/>0x10,<sp/>0x10,<sp/>0x10<sp/>};</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="sevetest30___led_array_8h_1aabb41927fed94381819288e1d3271fb2" kindref="member">matrix_8</ref>[7]<sp/>=<sp/>{<sp/>0xF0,<sp/>0x90,<sp/>0x90,<sp/>0xF0,<sp/>0x90,<sp/>0x90,<sp/>0xF0<sp/>};</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="sevetest30___led_array_8h_1abfc2482a77212755a828b723e0928ad9" kindref="member">matrix_9</ref>[7]<sp/>=<sp/>{<sp/>0xF0,<sp/>0x90,<sp/>0x90,<sp/>0xF0,<sp/>0x10,<sp/>0x10,<sp/>0xF0<sp/>};</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">/******************************屏幕刷新任务<sp/>[绘制函数本身不会刷新屏幕,需要运行屏幕刷新,才会在屏幕上点亮]<sp/>*****************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal">uint8_t<sp/><ref refid="sevetest30___led_array_8c_1acd62dac27e0918225ab0aede60ee2f18" kindref="member">draw_line_count</ref>[<ref refid="sevetest30___led_array_8h_1a8412ebaff2eca2bda07acae207229394" kindref="member">VERTICAL_LED_NUMBER</ref>]<sp/>=<sp/>{<sp/>0<sp/>};</highlight><highlight class="comment">//每行的绘制计数,在局部刷新模式下,为0次绘制活动的行不刷新屏幕</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><ref refid="sevetest30___led_array_8h_1a43484d7921da2388b427cde75836f46e" kindref="member">ledarray_refresh_mode_t</ref><sp/><ref refid="sevetest30___led_array_8c_1a63cce031c5f961a28a01b0863bbbc912" kindref="member">refresh_mode_buf</ref><sp/>=<sp/><ref refid="sevetest30___led_array_8h_1a43484d7921da2388b427cde75836f46ea5befe4eb59c860532f3f3287eae868d9" kindref="member">LEDARRAY_REFRESH_DISABLE</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal">SemaphoreHandle_t<sp/><ref refid="sevetest30___led_array_8c_1aa35baad1478bed024ce17f93bc5f4ce0" kindref="member">refresh_Task_Mutex</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sevetest30___led_array_8c_1a7494912b8b468cd33f54bbfecbbbba17" kindref="member">refresh_ALL_ONCE_Task</ref>()<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>0;idx<sp/>&lt;=<sp/><ref refid="sevetest30___led_array_8h_1a8412ebaff2eca2bda07acae207229394" kindref="member">VERTICAL_LED_NUMBER</ref><sp/>/<sp/>2;idx++)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1a0aa50fecb446229afaf4d7b4808254d8" kindref="member">ledarray_set_and_write</ref>(idx);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(10));</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sevetest30___led_array_8c_1ad0c691643dc5861bc0fda7636c697537" kindref="member">refresh_ALL_MULTIPLE_Task</ref>()<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>0;idx<sp/>&lt;=<sp/><ref refid="sevetest30___led_array_8h_1a8412ebaff2eca2bda07acae207229394" kindref="member">VERTICAL_LED_NUMBER</ref><sp/>/<sp/>2;idx++)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1a0aa50fecb446229afaf4d7b4808254d8" kindref="member">ledarray_set_and_write</ref>(idx);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(2));</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sevetest30___led_array_8c_1a3f203095cbab702cdc81c81b3b784ad0" kindref="member">refresh_PART_ONCE_Task</ref>()<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>0;idx<sp/>&lt;=<sp/><ref refid="sevetest30___led_array_8h_1a8412ebaff2eca2bda07acae207229394" kindref="member">VERTICAL_LED_NUMBER</ref><sp/>/<sp/>2;idx++)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="sevetest30___led_array_8c_1acd62dac27e0918225ab0aede60ee2f18" kindref="member">draw_line_count</ref>[idx<sp/>*<sp/>2<sp/>+<sp/>0]<sp/>||<sp/><ref refid="sevetest30___led_array_8c_1acd62dac27e0918225ab0aede60ee2f18" kindref="member">draw_line_count</ref>[idx<sp/>*<sp/>2<sp/>+<sp/>1])</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1a0aa50fecb446229afaf4d7b4808254d8" kindref="member">ledarray_set_and_write</ref>(idx);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(10));</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sevetest30___led_array_8c_1a2bfb656ba73798b17635142277e0ee33" kindref="member">refresh_PART_MULTIPLE_Task</ref>()<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>0;idx<sp/>&lt;=<sp/><ref refid="sevetest30___led_array_8h_1a8412ebaff2eca2bda07acae207229394" kindref="member">VERTICAL_LED_NUMBER</ref><sp/>/<sp/>2;idx++)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="sevetest30___led_array_8c_1acd62dac27e0918225ab0aede60ee2f18" kindref="member">draw_line_count</ref>[idx<sp/>*<sp/>2<sp/>+<sp/>0]<sp/>||<sp/><ref refid="sevetest30___led_array_8c_1acd62dac27e0918225ab0aede60ee2f18" kindref="member">draw_line_count</ref>[idx<sp/>*<sp/>2<sp/>+<sp/>1])</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1a0aa50fecb446229afaf4d7b4808254d8" kindref="member">ledarray_set_and_write</ref>(idx);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(10));</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sevetest30___led_array_8c_1a350204007e04d378da6acbc29c1c816c" kindref="member">ledarray_set_refresh_mode</ref>(<ref refid="sevetest30___led_array_8h_1a43484d7921da2388b427cde75836f46e" kindref="member">ledarray_refresh_mode_t</ref><sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="sevetest30___led_array_8c_1a63cce031c5f961a28a01b0863bbbc912" kindref="member">refresh_mode_buf</ref>)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="sevetest30___led_array_8h_1a43484d7921da2388b427cde75836f46eadd4d1b30cc7e6a4bbceee0a073bf49e6" kindref="member">LEDARRAY_REFRESH_ALL_ONCE</ref>:</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelete(xTaskGetHandle(</highlight><highlight class="stringliteral">&quot;ALL_ONCE&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="sevetest30___led_array_8h_1a43484d7921da2388b427cde75836f46ea75f5782064dc57b7bdf8f2641a839d3d" kindref="member">LEDARRAY_REFRESH_ALL_MULTIPLE</ref>:</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelete(xTaskGetHandle(</highlight><highlight class="stringliteral">&quot;ALL_MULTIPLE&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="sevetest30___led_array_8h_1a43484d7921da2388b427cde75836f46eaa47c4d025e54bcb08511a20420ee96de" kindref="member">LEDARRAY_REFRESH_PART_ONCE</ref>:</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelete(xTaskGetHandle(</highlight><highlight class="stringliteral">&quot;PART_ONCE&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="sevetest30___led_array_8h_1a43484d7921da2388b427cde75836f46eaba1737e697aceb7d95d172c23bc7075a" kindref="member">LEDARRAY_REFRESH_PART_MULTIPLE</ref>:</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelete(xTaskGetHandle(</highlight><highlight class="stringliteral">&quot;PART_MULTIPLE&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(mode)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="sevetest30___led_array_8h_1a43484d7921da2388b427cde75836f46eadd4d1b30cc7e6a4bbceee0a073bf49e6" kindref="member">LEDARRAY_REFRESH_ALL_ONCE</ref>:</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xTaskCreatePinnedToCore(&amp;<ref refid="sevetest30___led_array_8c_1a7494912b8b468cd33f54bbfecbbbba17" kindref="member">refresh_ALL_ONCE_Task</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ALL_ONCE&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1024,<sp/>NULL,<sp/><ref refid="sevetest30___led_array_8h_1a604ddda5b43efb35391391758c9d8b03" kindref="member">LEDARRAY_REFRESH_TASK_PRIO</ref>,<sp/>NULL,<sp/><ref refid="sevetest30___led_array_8h_1a7397500f61c23a1abea851012874bd3d" kindref="member">LEDARRAY_REFRESH_TASK_CORE</ref>);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="sevetest30___led_array_8h_1a43484d7921da2388b427cde75836f46ea75f5782064dc57b7bdf8f2641a839d3d" kindref="member">LEDARRAY_REFRESH_ALL_MULTIPLE</ref>:</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xTaskCreatePinnedToCore(&amp;<ref refid="sevetest30___led_array_8c_1ad0c691643dc5861bc0fda7636c697537" kindref="member">refresh_ALL_MULTIPLE_Task</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ALL_MULTIPLE&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1024,<sp/>NULL,<sp/><ref refid="sevetest30___led_array_8h_1a604ddda5b43efb35391391758c9d8b03" kindref="member">LEDARRAY_REFRESH_TASK_PRIO</ref>,<sp/>NULL,<sp/><ref refid="sevetest30___led_array_8h_1a7397500f61c23a1abea851012874bd3d" kindref="member">LEDARRAY_REFRESH_TASK_CORE</ref>);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="sevetest30___led_array_8h_1a43484d7921da2388b427cde75836f46eaa47c4d025e54bcb08511a20420ee96de" kindref="member">LEDARRAY_REFRESH_PART_ONCE</ref>:</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xTaskCreatePinnedToCore(&amp;<ref refid="sevetest30___led_array_8c_1a3f203095cbab702cdc81c81b3b784ad0" kindref="member">refresh_PART_ONCE_Task</ref>,<sp/></highlight><highlight class="stringliteral">&quot;PART_ONCE&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1024,<sp/>NULL,<sp/><ref refid="sevetest30___led_array_8h_1a604ddda5b43efb35391391758c9d8b03" kindref="member">LEDARRAY_REFRESH_TASK_PRIO</ref>,<sp/>NULL,<sp/><ref refid="sevetest30___led_array_8h_1a7397500f61c23a1abea851012874bd3d" kindref="member">LEDARRAY_REFRESH_TASK_CORE</ref>);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="sevetest30___led_array_8h_1a43484d7921da2388b427cde75836f46eaba1737e697aceb7d95d172c23bc7075a" kindref="member">LEDARRAY_REFRESH_PART_MULTIPLE</ref>:</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xTaskCreatePinnedToCore(&amp;<ref refid="sevetest30___led_array_8c_1a2bfb656ba73798b17635142277e0ee33" kindref="member">refresh_PART_MULTIPLE_Task</ref>,<sp/></highlight><highlight class="stringliteral">&quot;PART_MULTIPLE&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1024,<sp/>NULL,<sp/><ref refid="sevetest30___led_array_8h_1a604ddda5b43efb35391391758c9d8b03" kindref="member">LEDARRAY_REFRESH_TASK_PRIO</ref>,<sp/>NULL,<sp/><ref refid="sevetest30___led_array_8h_1a7397500f61c23a1abea851012874bd3d" kindref="member">LEDARRAY_REFRESH_TASK_CORE</ref>);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1a63cce031c5f961a28a01b0863bbbc912" kindref="member">refresh_mode_buf</ref><sp/>=<sp/>mode;</highlight></codeline>
<codeline lineno="213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************软件图像生成函数**********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal">uint8_t*<sp/><ref refid="sevetest30___led_array_8c_1aa49fb91e47f7a6f6e916239164d8ee4b" kindref="member">rectangle</ref>(int8_t<sp/>breadth,<sp/>int8_t<sp/>length)</highlight></codeline>
<codeline lineno="222"><highlight class="normal">{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(breadth<sp/>&lt;<sp/>0<sp/>||<sp/>length<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>x_byte_num<sp/>=<sp/>1,<sp/>entire_byte_num<sp/>=<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>横向字节个数，总数据有效字节个数（不包含entire_byte_num段）</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>Dx<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>临时存储一下横向偏移长度，这只是用于计算。纵向偏移长度由绘制函数获取，不需要,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>flag<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>即将写入的位数据值</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t*<sp/>pT1<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t*<sp/>p<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>进一法，最后不足8个点就补满8位。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>因为ceil传入的是浮点数，全部提前转换，防止整型相除而向下取整，否则ceil在这里就没意义了</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>x_byte_num<sp/>=<sp/>ceil(breadth<sp/>*<sp/>1.0<sp/>/<sp/>8.0);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>entire_byte_num<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint8_t)<sp/>*<sp/>x_byte_num<sp/>*<sp/>length;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t*<sp/>rectangle_data<sp/>=<sp/>(uint8_t*)malloc(<ref refid="sevetest30___led_array_8h_1a543c7297f480deb68423813a2aba5b13" kindref="member">RECTANGLE_SIZE_MAX</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint8_t)<sp/>+<sp/>1);</highlight><highlight class="comment">//一个字节用于存储字模数据大小</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(rectangle_data,<sp/>0,<sp/><ref refid="sevetest30___led_array_8h_1a543c7297f480deb68423813a2aba5b13" kindref="member">RECTANGLE_SIZE_MAX</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint8_t)<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>*rectangle_data<sp/>=<sp/>entire_byte_num;<sp/></highlight><highlight class="comment">//<sp/>装载entire_byte_num</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>rectangle_data;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>pT1<sp/>=<sp/>rectangle_data<sp/>+<sp/>0x01;<sp/></highlight><highlight class="comment">//<sp/>获取到数据的起始地址</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>先进行全图填充</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>flag<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>entire_byte_num;<sp/>i++)</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pT1<sp/>-<sp/>p<sp/>&gt;<sp/>entire_byte_num)</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(</highlight><highlight class="stringliteral">&quot;rectangle&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;计算总数据大小出错&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;<sp/></highlight><highlight class="comment">//<sp/>越界退出</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>8;<sp/>j++)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pT1<sp/>|=<sp/>flag<sp/>&lt;&lt;<sp/>(7<sp/>-<sp/>j);<sp/></highlight><highlight class="comment">//<sp/>写入</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Dx<sp/>==<sp/>breadth<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>=<sp/>8;<sp/></highlight><highlight class="comment">//<sp/>一行写完强制退出，写下一个，实际就是回车，因为下一个字节就是下一行的了</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dx++;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pT1++;<sp/></highlight><highlight class="comment">//<sp/>地址偏移</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rectangle_data;</highlight></codeline>
<codeline lineno="268"><highlight class="normal">}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************基本绘制函数**********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sevetest30___led_array_8c_1a9e8309cbecd85eff7cbf584b8ff4c743" kindref="member">separation_draw</ref>(int32_t<sp/>x,<sp/>int32_t<sp/>y,<sp/>uint8_t<sp/>breadth,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>p,<sp/>uint8_t<sp/>byte_number,<sp/>uint8_t<sp/>in_color[3],<sp/>uint8_t<sp/>change)</highlight></codeline>
<codeline lineno="285"><highlight class="normal">{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(</highlight><highlight class="stringliteral">&quot;separation_draw&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;输入了无法处理的空指针&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xSemaphoreTake(<ref refid="sevetest30___led_array_8c_1aa35baad1478bed024ce17f93bc5f4ce0" kindref="member">refresh_Task_Mutex</ref>,<sp/>portMAX_DELAY))<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>Dx<sp/>=<sp/>0,<sp/>Dy<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>xy的增加量</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>dat<sp/>=<sp/>0x00;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>临时数据存储</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>i<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>临时变量i</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>sx<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>临时存储选定的横坐标</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>flag<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>该像素是否需要点亮</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>black[3]<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>color[3]<sp/>=<sp/>{<sp/>in_color[0],<sp/>in_color[1],<sp/>in_color[2]<sp/>};<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>因为数组本质也是指针，所以下级改动，上级数据也会破坏，所以需要隔离</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1acf17011d8638511cc2a6ea72883b0bdb" kindref="member">ledarray_intensity_change</ref>(&amp;color[0],<sp/>&amp;color[1],<sp/>&amp;color[2],<sp/>change);<sp/></highlight><highlight class="comment">//<sp/>亮度调制</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p--;<sp/></highlight><highlight class="comment">//<sp/>地址初始补偿</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(byte_number)</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p++;<sp/></highlight><highlight class="comment">//<sp/>地址被动偏移</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;=<sp/>7;<sp/>i++)</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>数据解析</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dat<sp/>=<sp/>*p;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>读取数据</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flag<sp/>=<sp/>(dat<sp/>&lt;&lt;<sp/>i)<sp/>&amp;<sp/>0x80;<sp/></highlight><highlight class="comment">//<sp/>位移取出一个bit数据，flag显示了选定的像素要不要点亮</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>存储到缓冲区</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sx<sp/>=<sp/>x<sp/>+<sp/>Dx<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flag)</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1a6e36c132215af27002355b2ff9d8b072" kindref="member">color_input</ref>(sx,<sp/>y<sp/>+<sp/>Dy,<sp/>color);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1a6e36c132215af27002355b2ff9d8b072" kindref="member">color_input</ref>(sx,<sp/>y<sp/>+<sp/>Dy,<sp/>black);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Dx<sp/>==<sp/>breadth<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dx<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>横向写入最后一个像素完毕，回车</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dy++;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>横向写入最后一个像素完毕，回车</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>8;<sp/><sp/></highlight><highlight class="comment">//<sp/>横向写入最后一个像素完毕，强制退出，等待地址偏移</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dx++;<sp/></highlight><highlight class="comment">//<sp/>确定写入完成一个像素</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byte_number--;<sp/></highlight><highlight class="comment">//<sp/>一个字节写入完成</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xSemaphoreGive(<ref refid="sevetest30___led_array_8c_1aa35baad1478bed024ce17f93bc5f4ce0" kindref="member">refresh_Task_Mutex</ref>);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal">}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sevetest30___led_array_8c_1ad4691147267eedfb4323ab9781b2dd62" kindref="member">direct_draw</ref>(int32_t<sp/>x,<sp/>int32_t<sp/>y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>p,<sp/>uint8_t<sp/>change)</highlight></codeline>
<codeline lineno="343"><highlight class="normal">{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(</highlight><highlight class="stringliteral">&quot;direct_draw&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;输入了无法处理的空指针&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xSemaphoreTake(<ref refid="sevetest30___led_array_8c_1aa35baad1478bed024ce17f93bc5f4ce0" kindref="member">refresh_Task_Mutex</ref>,<sp/>portMAX_DELAY))<sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>Dx<sp/>=<sp/>0,<sp/>Dy<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>xy的增加量</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>sx<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>临时存储选定的横坐标<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t*<sp/>pT1<sp/>=<sp/>p,<sp/>*<sp/>pT2<sp/>=<sp/>p,<sp/>*<sp/>pT3<sp/>=<sp/>p;<sp/></highlight><highlight class="comment">//<sp/>临时指针</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>获取图案长宽数据</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>length<sp/>=<sp/>0,<sp/>breadth<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>长宽信息</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>dat[4]<sp/>=<sp/>{<sp/>0x00<sp/>};<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>临时数据存储</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>+=<sp/>0x02;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>偏移到长宽数据区</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>4;<sp/>i++)</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dat[i]<sp/>=<sp/>*p;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p++;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>breadth<sp/>=<sp/>(dat[1]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>dat[0];</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length<sp/>=<sp/>(dat[3]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>dat[2];</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>图像解析</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>+=<sp/>0x02;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>偏移到图像数据区</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>color[3]<sp/>=<sp/>{<sp/>0x00<sp/>};<sp/></highlight><highlight class="comment">//<sp/>临时数据存储</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(length)</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>获取颜色数据</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pT1<sp/>=<sp/>p;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pT2<sp/>=<sp/>p<sp/>+<sp/>0x01;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pT3<sp/>=<sp/>p<sp/>+<sp/>0x02;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>color[0]<sp/>=<sp/>*pT1;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>color[1]<sp/>=<sp/>*pT2;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>color[2]<sp/>=<sp/>*pT3;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1acf17011d8638511cc2a6ea72883b0bdb" kindref="member">ledarray_intensity_change</ref>(&amp;color[0],<sp/>&amp;color[1],<sp/>&amp;color[2],<sp/>change);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sx<sp/>=<sp/>x<sp/>+<sp/>Dx<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1a6e36c132215af27002355b2ff9d8b072" kindref="member">color_input</ref>(sx,<sp/>y<sp/>+<sp/>Dy,<sp/>color);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Dx<sp/>==<sp/>breadth<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dx<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>横向写入最后一个像素完毕，回车</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dy++;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>横向写入最后一个像素完毕，回车</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length--;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dx++;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>+=<sp/>0x03;<sp/></highlight><highlight class="comment">//<sp/>地址被动偏移</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xSemaphoreGive(<ref refid="sevetest30___led_array_8c_1aa35baad1478bed024ce17f93bc5f4ce0" kindref="member">refresh_Task_Mutex</ref>);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal">}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************图像操作绘制函数**********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sevetest30___led_array_8c_1ab5ecd4e3eb3636ecc41c3f0a0c67e626" kindref="member">clean_draw</ref>()<sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;=<sp/><ref refid="sevetest30___led_array_8h_1a8412ebaff2eca2bda07acae207229394" kindref="member">VERTICAL_LED_NUMBER</ref><sp/>/<sp/>2<sp/>-<sp/>1;<sp/>i++)</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1a92ce28a239503c364726b5673f2915e5" kindref="member">clean_draw_buf</ref>(i<sp/>*<sp/>2<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1a92ce28a239503c364726b5673f2915e5" kindref="member">clean_draw_buf</ref>(i<sp/>*<sp/>2<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1a0aa50fecb446229afaf4d7b4808254d8" kindref="member">ledarray_set_and_write</ref>(i);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal">}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sevetest30___led_array_8c_1a92ce28a239503c364726b5673f2915e5" kindref="member">clean_draw_buf</ref>(int8_t<sp/>y)</highlight></codeline>
<codeline lineno="411"><highlight class="normal">{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>dat[3]<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1a6e36c132215af27002355b2ff9d8b072" kindref="member">color_input</ref>(i,<sp/>y,<sp/>dat);</highlight></codeline>
<codeline lineno="415"><highlight class="normal">}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sevetest30___led_array_8c_1a4c4efd3188ccd65c9a42b5e67e6c21d2" kindref="member">progress_draw_buf</ref>(int8_t<sp/>y,<sp/>uint8_t<sp/>step,<sp/>uint8_t*<sp/>color)</highlight></codeline>
<codeline lineno="422"><highlight class="normal">{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>dat[3]<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1afe36c756b8e5400fbe11f1168eeebab8" kindref="member">color_output</ref>(i,<sp/>y,<sp/>dat);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>3;<sp/>j++)</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(color[j]<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>color[j]<sp/>&lt;=<sp/>255)</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dat[j]<sp/>&lt;<sp/>color[j])</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(255<sp/>-<sp/>dat[j]<sp/>&gt;=<sp/>step)</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dat[j]<sp/>+=<sp/>step;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dat[j]<sp/>=<sp/>color[j];</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dat[j]<sp/>&gt;<sp/>color[j])</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dat[j]<sp/>&gt;=<sp/>step)</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dat[j]<sp/>-=<sp/>step;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dat[j]<sp/>=<sp/>color[j];</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dat[j]<sp/>=<sp/>color[j];</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1a6e36c132215af27002355b2ff9d8b072" kindref="member">color_input</ref>(i,<sp/>y,<sp/>dat);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal">}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************扩展绘制函数**********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sevetest30___led_array_8c_1a248d05ce7ed398103040f5c5b45739cc" kindref="member">print_number</ref>(int32_t<sp/>x,<sp/>int32_t<sp/>y,<sp/>int8_t<sp/>figure,<sp/>uint8_t<sp/>color[3],<sp/>uint8_t<sp/>change)</highlight></codeline>
<codeline lineno="464"><highlight class="normal">{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t*<sp/>p<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>将p指向对应数字字模</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(figure)</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1a464c27e038e79cd7b41d1b722be67cbb" kindref="member">matrix_0</ref>;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/><ref refid="sevetest30___led_array_8h_1a6a364ef03edff14164920dfaf30cf726" kindref="member">matrix_1</ref>;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/><ref refid="sevetest30___led_array_8h_1a152f124ec09f393e61d48ae1a1a2d1d1" kindref="member">matrix_2</ref>;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/><ref refid="sevetest30___led_array_8h_1a785387d63238f0281285b05ffd8aebbf" kindref="member">matrix_3</ref>;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/><ref refid="sevetest30___led_array_8h_1aa610aec253c352d60c19198e811bc961" kindref="member">matrix_4</ref>;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/><ref refid="sevetest30___led_array_8h_1a6c3758a3b5c2352f7795951029f08106" kindref="member">matrix_5</ref>;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>6:</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/><ref refid="sevetest30___led_array_8h_1a0acc37d8391e6bf93cd8e30d00cef34d" kindref="member">matrix_6</ref>;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>7:</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/><ref refid="sevetest30___led_array_8h_1a2367a8d20a980cf8add1d5aa01dae14d" kindref="member">matrix_7</ref>;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>8:</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/><ref refid="sevetest30___led_array_8h_1aabb41927fed94381819288e1d3271fb2" kindref="member">matrix_8</ref>;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>9:</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/><ref refid="sevetest30___led_array_8h_1abfc2482a77212755a828b723e0928ad9" kindref="member">matrix_9</ref>;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(</highlight><highlight class="stringliteral">&quot;print_number&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;输入了0-9之外的数字&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1a9e8309cbecd85eff7cbf584b8ff4c743" kindref="member">separation_draw</ref>(x,<sp/>y,<sp/><ref refid="sevetest30___led_array_8h_1a18ff66448700e8d0184a01b54e05f340" kindref="member">FIGURE</ref>,<sp/>p,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="sevetest30___led_array_8h_1a2367a8d20a980cf8add1d5aa01dae14d" kindref="member">matrix_7</ref>),<sp/>color,<sp/>change);<sp/></highlight><highlight class="comment">//<sp/>因为，数字字模数据大小一样，随便输入一个字模就可以</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal">}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sevetest30___led_array_8c_1afbd085293d3f3dbf3083dd048cb5a8d6" kindref="member">font_raw_print_12x</ref>(int32_t<sp/>x,<sp/>int32_t<sp/>y,<sp/>uint8_t<sp/>color[3],<sp/>uint8_t<sp/>change,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,<sp/>...)<sp/>{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;font_raw_print_12x&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//申请字符unicode编码缓存</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t*<sp/>buf_unicode<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>buf_unicode<sp/>=<sp/>(uint32_t*)malloc(<ref refid="sevetest30___led_array_8h_1a040fd7a36c7bade335b19df6c8ccf925" kindref="member">FONT_PRINT_NUM_MAX</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t));</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!buf_unicode)</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(1000));</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;申请buf_unicode资源发现问题<sp/>正在重试&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf_unicode<sp/>=<sp/>(uint32_t*)malloc(<ref refid="sevetest30___led_array_8h_1a040fd7a36c7bade335b19df6c8ccf925" kindref="member">FONT_PRINT_NUM_MAX</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t));</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(buf_unicode,<sp/>0,<sp/><ref refid="sevetest30___led_array_8h_1a040fd7a36c7bade335b19df6c8ccf925" kindref="member">FONT_PRINT_NUM_MAX</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t));</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//申请UTF-8编码缓存</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str_buf<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>str_buf<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)malloc(<ref refid="sevetest30___led_array_8h_1a7e587c17cee27d7a1d748472306ec17b" kindref="member">FONT_PRINT_FMT_BUF_SIZE</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!str_buf)</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(1000));</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;申请str_buf资源发现问题<sp/>正在重试&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str_buf<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)malloc(<ref refid="sevetest30___led_array_8h_1a7e587c17cee27d7a1d748472306ec17b" kindref="member">FONT_PRINT_FMT_BUF_SIZE</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(str_buf,<sp/>0,<sp/><ref refid="sevetest30___led_array_8h_1a7e587c17cee27d7a1d748472306ec17b" kindref="member">FONT_PRINT_FMT_BUF_SIZE</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//格式化源字符串(UTF-8编码数据)到UTF-8编码缓存</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/>ap;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start(ap,<sp/>format);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>vsnprintf(str_buf,<sp/><ref refid="sevetest30___led_array_8h_1a7e587c17cee27d7a1d748472306ec17b" kindref="member">FONT_PRINT_FMT_BUF_SIZE</ref>,<sp/>format,<sp/>ap);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//获取所有要显示字符的Unicode,以及字符总个数</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>total_unit<sp/>=<sp/><ref refid="gt32l32s0140_8h_1a3c32b8061c4ca4e0f45567f00f3ba6c0" kindref="member">UTF8_Unicode_get</ref>(str_buf,<sp/>buf_unicode,<sp/><ref refid="sevetest30___led_array_8h_1a040fd7a36c7bade335b19df6c8ccf925" kindref="member">FONT_PRINT_NUM_MAX</ref>);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//申请字符点阵数据缓存</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t*<sp/>font_buf<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>font_buf<sp/>=<sp/>(uint8_t*)malloc(total_unit<sp/>*<sp/><ref refid="gt32l32s0140_8h_1a83d046665b7600df8b85b8c6184ebb3f" kindref="member">FONT_READ_ZH_CN_12X_BYTES</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint8_t));</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!font_buf)</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(1000));</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;申请font_buf资源发现问题<sp/>正在重试&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>font_buf<sp/>=<sp/>(uint8_t*)malloc(total_unit<sp/>*<sp/><ref refid="gt32l32s0140_8h_1a83d046665b7600df8b85b8c6184ebb3f" kindref="member">FONT_READ_ZH_CN_12X_BYTES</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint8_t));</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(font_buf,<sp/>0,<sp/>total_unit<sp/>*<sp/><ref refid="gt32l32s0140_8h_1a83d046665b7600df8b85b8c6184ebb3f" kindref="member">FONT_READ_ZH_CN_12X_BYTES</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint8_t));</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>0;</highlight><highlight class="comment">//选定操作的为[idx]号字符</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>ASCII_num<sp/>=<sp/>0;</highlight><highlight class="comment">//总共含有的ASCII字符个数</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//从字库读取所有字符的点阵数据到font_buf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(idx<sp/>=<sp/>0;idx<sp/>&lt;<sp/>total_unit;idx++)<sp/>{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buf_unicode[idx]<sp/>&gt;=<sp/>128)<sp/>{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gt32l32s0140_8h_1a02e04d0261683a301b35efc9c8be1c29" kindref="member">fonts_read_zh_CN_12x</ref>(buf_unicode[idx],<sp/>&amp;font_buf[idx<sp/>*<sp/><ref refid="gt32l32s0140_8h_1a83d046665b7600df8b85b8c6184ebb3f" kindref="member">FONT_READ_ZH_CN_12X_BYTES</ref>]);</highlight><highlight class="comment">//读取汉字字符<sp/>宽度12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight><highlight class="comment">//Unicode小于128兼容ASCII字符集</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gt32l32s0140_8h_1a1857cd2f981e757d81419e790eac43b9" kindref="member">fonts_read_ASCII_6x12</ref>(buf_unicode[idx],<sp/>&amp;font_buf[idx<sp/>*<sp/><ref refid="gt32l32s0140_8h_1a83d046665b7600df8b85b8c6184ebb3f" kindref="member">FONT_READ_ZH_CN_12X_BYTES</ref>]);</highlight><highlight class="comment">//读取ASCII字符<sp/>宽度6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASCII_num++;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>x_buf<sp/>=<sp/>0;</highlight><highlight class="comment">//当前选定的[idx]号字符点阵图像的起始x轴坐标</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x_base<sp/>=<sp/>0;</highlight><highlight class="comment">//当前选定的[idx]号字符坐标点(字模点阵左上角)与第一个字符即idx=0的水平点阵距离,这在计算[idx-1]号字符时完成累加</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//绘制所有字符</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(idx<sp/>=<sp/>0;idx<sp/>&lt;<sp/>total_unit;idx++)<sp/>{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_buf<sp/>=<sp/>x<sp/>+<sp/>x_base;</highlight><highlight class="comment">//获取当前选定的[idx]号字符点阵图像的起始x轴坐标</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buf_unicode[idx]<sp/>&gt;=<sp/>128)<sp/>{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x_buf<sp/>&gt;<sp/>-<ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref><sp/>&amp;&amp;<sp/>x_buf<sp/>&lt;=<sp/><ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref>)</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1a9e8309cbecd85eff7cbf584b8ff4c743" kindref="member">separation_draw</ref>(x_buf,<sp/>y,<sp/>12,<sp/>&amp;font_buf[idx<sp/>*<sp/><ref refid="gt32l32s0140_8h_1a83d046665b7600df8b85b8c6184ebb3f" kindref="member">FONT_READ_ZH_CN_12X_BYTES</ref>],<sp/><ref refid="gt32l32s0140_8h_1a83d046665b7600df8b85b8c6184ebb3f" kindref="member">FONT_READ_ZH_CN_12X_BYTES</ref>,<sp/>color,<sp/>change);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_base<sp/>+=<sp/>12;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight><highlight class="comment">//Unicode小于128兼容ASCII字符集</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x_buf<sp/>&gt;<sp/>-<ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref><sp/>&amp;&amp;<sp/>x_buf<sp/>&lt;=<sp/><ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref>)</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1a9e8309cbecd85eff7cbf584b8ff4c743" kindref="member">separation_draw</ref>(x_buf,<sp/>y,<sp/>6,<sp/>&amp;font_buf[idx<sp/>*<sp/><ref refid="gt32l32s0140_8h_1a83d046665b7600df8b85b8c6184ebb3f" kindref="member">FONT_READ_ZH_CN_12X_BYTES</ref>],<sp/><ref refid="gt32l32s0140_8h_1a16bdee40048a6b366aefc94f7d8eae71" kindref="member">FONT_READ_ASCII_6X12_BYTES</ref>,<sp/>color,<sp/>change);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_base<sp/>+=<sp/>6;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//释放所有缓存</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>free(buf_unicode);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>buf_unicode<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>free(str_buf);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>str_buf<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>free(font_buf);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>font_buf<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="606"><highlight class="normal">}</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sevetest30___led_array_8c_1ab7ec88320017091e65a906970e06dafd" kindref="member">font_roll_print_12x</ref>(int32_t<sp/>x,<sp/>int32_t<sp/>y,<sp/>uint8_t<sp/>color[3],<sp/>uint8_t<sp/>change,<sp/><ref refid="sevetest30___u_i_8h_1a62944b735214a319f7aa83ce4214b8fd" kindref="member">cartoon_handle_t</ref><sp/>cartoon_handle,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,<sp/>...)<sp/>{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;font_roll_print_12x&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//申请字符unicode编码缓存</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t*<sp/>buf_unicode<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>buf_unicode<sp/>=<sp/>(uint32_t*)malloc(<ref refid="sevetest30___led_array_8h_1a040fd7a36c7bade335b19df6c8ccf925" kindref="member">FONT_PRINT_NUM_MAX</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t));</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!buf_unicode)</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(1000));</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;申请buf_unicode资源发现问题<sp/>正在重试&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf_unicode<sp/>=<sp/>(uint32_t*)malloc(<ref refid="sevetest30___led_array_8h_1a040fd7a36c7bade335b19df6c8ccf925" kindref="member">FONT_PRINT_NUM_MAX</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t));</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(buf_unicode,<sp/>0,<sp/><ref refid="sevetest30___led_array_8h_1a040fd7a36c7bade335b19df6c8ccf925" kindref="member">FONT_PRINT_NUM_MAX</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t));</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//申请UTF-8编码缓存</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str_buf<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>str_buf<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)malloc(<ref refid="sevetest30___led_array_8h_1a7e587c17cee27d7a1d748472306ec17b" kindref="member">FONT_PRINT_FMT_BUF_SIZE</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!str_buf)</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(1000));</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;申请str_buf资源发现问题<sp/>正在重试&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str_buf<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)malloc(<ref refid="sevetest30___led_array_8h_1a7e587c17cee27d7a1d748472306ec17b" kindref="member">FONT_PRINT_FMT_BUF_SIZE</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(str_buf,<sp/>0,<sp/><ref refid="sevetest30___led_array_8h_1a7e587c17cee27d7a1d748472306ec17b" kindref="member">FONT_PRINT_FMT_BUF_SIZE</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//格式化源字符串(UTF-8编码数据)到UTF-8编码缓存</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/>ap;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start(ap,<sp/>format);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>vsnprintf(str_buf,<sp/><ref refid="sevetest30___led_array_8h_1a7e587c17cee27d7a1d748472306ec17b" kindref="member">FONT_PRINT_FMT_BUF_SIZE</ref>,<sp/>format,<sp/>ap);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//获取所有要显示字符的Unicode,以及字符总个数</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>total_unit<sp/>=<sp/><ref refid="gt32l32s0140_8h_1a3c32b8061c4ca4e0f45567f00f3ba6c0" kindref="member">UTF8_Unicode_get</ref>(str_buf,<sp/>buf_unicode,<sp/><ref refid="sevetest30___led_array_8h_1a040fd7a36c7bade335b19df6c8ccf925" kindref="member">FONT_PRINT_NUM_MAX</ref>);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//申请字符点阵数据缓存</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t*<sp/>font_buf<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>font_buf<sp/>=<sp/>(uint8_t*)malloc(total_unit<sp/>*<sp/><ref refid="gt32l32s0140_8h_1a83d046665b7600df8b85b8c6184ebb3f" kindref="member">FONT_READ_ZH_CN_12X_BYTES</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint8_t));</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!font_buf)</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(1000));</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;申请font_buf资源发现问题<sp/>正在重试&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>font_buf<sp/>=<sp/>(uint8_t*)malloc(total_unit<sp/>*<sp/><ref refid="gt32l32s0140_8h_1a83d046665b7600df8b85b8c6184ebb3f" kindref="member">FONT_READ_ZH_CN_12X_BYTES</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint8_t));</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(font_buf,<sp/>0,<sp/>total_unit<sp/>*<sp/><ref refid="gt32l32s0140_8h_1a83d046665b7600df8b85b8c6184ebb3f" kindref="member">FONT_READ_ZH_CN_12X_BYTES</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint8_t));</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>0;</highlight><highlight class="comment">//选定操作的为[idx]号字符</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>ASCII_num<sp/>=<sp/>0;</highlight><highlight class="comment">//总共含有的ASCII字符个数</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//从字库读取所有字符的点阵数据到font_buf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(idx<sp/>=<sp/>0;idx<sp/>&lt;<sp/>total_unit;idx++)<sp/>{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buf_unicode[idx]<sp/>&gt;=<sp/>128)<sp/>{</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gt32l32s0140_8h_1a02e04d0261683a301b35efc9c8be1c29" kindref="member">fonts_read_zh_CN_12x</ref>(buf_unicode[idx],<sp/>&amp;font_buf[idx<sp/>*<sp/><ref refid="gt32l32s0140_8h_1a83d046665b7600df8b85b8c6184ebb3f" kindref="member">FONT_READ_ZH_CN_12X_BYTES</ref>]);</highlight><highlight class="comment">//读取汉字字符<sp/>宽度12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight><highlight class="comment">//Unicode小于128兼容ASCII字符集</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gt32l32s0140_8h_1a1857cd2f981e757d81419e790eac43b9" kindref="member">fonts_read_ASCII_6x12</ref>(buf_unicode[idx],<sp/>&amp;font_buf[idx<sp/>*<sp/><ref refid="gt32l32s0140_8h_1a83d046665b7600df8b85b8c6184ebb3f" kindref="member">FONT_READ_ZH_CN_12X_BYTES</ref>]);</highlight><highlight class="comment">//读取ASCII字符<sp/>宽度6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASCII_num++;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//绘制图像形成滚动效果</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>step<sp/>=<sp/>0;</highlight><highlight class="comment">//当前步进值</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>x_buf<sp/>=<sp/>0;</highlight><highlight class="comment">//当前选定的[idx]号字符点阵图像的起始x轴坐标</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x_base<sp/>=<sp/>0;</highlight><highlight class="comment">//当前选定的[idx]号字符坐标点(字模点阵左上角)与第一个字符即idx=0的水平步数距离,这在计算[idx-1]号字符时完成累加</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//如果把要滚动的字符看做一列火车车厢,屏幕看作一条小于车长的直隧洞</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//那么隧洞有车厢存在的时间,为车头进入一刻,直到车尾离开一刻,这段时间移动距离为隧洞和车厢总长和</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//因此这里,滚动总长度为字符链长+屏幕长,由于可显示的最小移动为一个像素点的偏移,将这个偏移称为1步,长度使用对应步数来标识</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//因为每个字符将发生的位移一致,使用变量step作为所有字符的当前向左偏移步数,由于偏移方向与规定的屏幕x轴正方向(向右)相反,在坐标偏移运算中作减法</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//从而,x_buf的值为对应字符([idx]号字符)在运动未开始时的初始x坐标,再减去step,过程中,step将由0累加到字符链长+屏幕长</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//第1种方式<sp/>-<sp/>使用默认动画绘制</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cartoon_handle)<sp/>{</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(step<sp/>=<sp/>0;step<sp/>&lt;<sp/>ASCII_num<sp/>*<sp/>6<sp/>+<sp/>(total_unit<sp/>-<sp/>ASCII_num)<sp/>*<sp/>12<sp/>+<sp/><ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref>;step++)<sp/>{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//在当前step偏移下刷新一帧图像</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(idx<sp/>=<sp/>0;idx<sp/>&lt;<sp/>total_unit;idx++)<sp/>{</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_buf<sp/>=<sp/>(x<sp/>-<sp/>1)<sp/>+<sp/><ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref><sp/>+<sp/>x_base<sp/>-<sp/>step;</highlight><highlight class="comment">//获取当前选定的[idx]号字符点阵图像的起始x轴坐标(x-1为初始坐标的绝对偏移坐标)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//仅对可视范围内字符进行绘制</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buf_unicode[idx]<sp/>&gt;=<sp/>128)<sp/>{</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x_buf<sp/>&gt;<sp/>-<ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref><sp/>&amp;&amp;<sp/>x_buf<sp/>&lt;=<sp/><ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref>)</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1a9e8309cbecd85eff7cbf584b8ff4c743" kindref="member">separation_draw</ref>(x_buf,<sp/>y,<sp/>12,<sp/>&amp;font_buf[idx<sp/>*<sp/><ref refid="gt32l32s0140_8h_1a83d046665b7600df8b85b8c6184ebb3f" kindref="member">FONT_READ_ZH_CN_12X_BYTES</ref>],<sp/><ref refid="gt32l32s0140_8h_1a83d046665b7600df8b85b8c6184ebb3f" kindref="member">FONT_READ_ZH_CN_12X_BYTES</ref>,<sp/>color,<sp/>change);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_base<sp/>+=<sp/>12;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight><highlight class="comment">//Unicode小于128兼容ASCII字符集</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x_buf<sp/>&gt;<sp/>-<ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref><sp/>&amp;&amp;<sp/>x_buf<sp/>&lt;=<sp/><ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref>)</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1a9e8309cbecd85eff7cbf584b8ff4c743" kindref="member">separation_draw</ref>(x_buf,<sp/>y,<sp/>6,<sp/>&amp;font_buf[idx<sp/>*<sp/><ref refid="gt32l32s0140_8h_1a83d046665b7600df8b85b8c6184ebb3f" kindref="member">FONT_READ_ZH_CN_12X_BYTES</ref>],<sp/><ref refid="gt32l32s0140_8h_1a16bdee40048a6b366aefc94f7d8eae71" kindref="member">FONT_READ_ASCII_6X12_BYTES</ref>,<sp/>color,<sp/>change);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_base<sp/>+=<sp/>6;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(50));</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_base<sp/>=<sp/>0;</highlight><highlight class="comment">//重置字符间隔偏移缓存</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//第2种方式<sp/>-<sp/>运行sevetest30_UI提供的动画支持服务</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cartoon_handle)<sp/>{</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cartoon_handle-&gt;<ref refid="structcartoon__support__t_1a38f3bb6b5c5280ef788e28cc66cf6888" kindref="member">create_callback</ref>(cartoon_handle,</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASCII_num<sp/>*<sp/>6<sp/>+<sp/>(total_unit<sp/>-<sp/>ASCII_num)<sp/>*<sp/>12<sp/>+<sp/><ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref>);</highlight><highlight class="comment">//生成动画</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//创建控制对象</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>cx<sp/>=<sp/>x;</highlight><highlight class="comment">//需要控制的x轴坐标数据,hook函数只写<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>cy<sp/>=<sp/>y;</highlight><highlight class="comment">//需要控制的y轴坐标数据,hook函数只写<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>ccolor[3]<sp/>=<sp/>{<sp/>color[0],color[1],color[2]<sp/>};</highlight><highlight class="comment">//需要控制的颜色数据,hook函数只写<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>cchange<sp/>=<sp/>change;</highlight><highlight class="comment">//需要控制的亮度数据位置,hook函数只写<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcartoon__ctrl__object__t" kindref="compound">cartoon_ctrl_object_t</ref><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.pstep<sp/>=<sp/>&amp;step,</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.px<sp/>=<sp/>&amp;cx,</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.py<sp/>=<sp/>&amp;cy,</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.pcolor<sp/>=<sp/>ccolor,</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.pchange<sp/>=<sp/>&amp;cchange,</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(step<sp/>=<sp/>0;step<sp/>&lt;<sp/>ASCII_num<sp/>*<sp/>6<sp/>+<sp/>(total_unit<sp/>-<sp/>ASCII_num)<sp/>*<sp/>12<sp/>+<sp/><ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref>;step++)<sp/>{</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//调用钩子函数调整控制对象</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cartoon_handle-&gt;<ref refid="structcartoon__support__t_1a128d932d98718b9f813b2e7727805dce" kindref="member">ctrl_hook</ref>(cartoon_handle,&amp;</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(idx<sp/>=<sp/>0;idx<sp/>&lt;<sp/>total_unit;idx++)<sp/>{</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_buf<sp/>=<sp/>(x<sp/>-<sp/>1)<sp/>+<sp/>(cx<sp/>-<sp/>1)<sp/>+<sp/><ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref><sp/>+<sp/>x_base;</highlight><highlight class="comment">//获取当前选定的[idx]号字符点阵图像的起始x轴坐标(x-1<sp/>cx-1为绝对偏移坐标)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//仅对可视范围内字符进行绘制</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buf_unicode[idx]<sp/>&gt;=<sp/>128)<sp/>{</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x_buf<sp/>&gt;<sp/>-<ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref><sp/>&amp;&amp;<sp/>x_buf<sp/>&lt;=<sp/><ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref>)</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1a9e8309cbecd85eff7cbf584b8ff4c743" kindref="member">separation_draw</ref>(x_buf,<sp/>cy<sp/>+<sp/>(y<sp/>-<sp/>1),<sp/>12,<sp/>&amp;font_buf[idx<sp/>*<sp/><ref refid="gt32l32s0140_8h_1a83d046665b7600df8b85b8c6184ebb3f" kindref="member">FONT_READ_ZH_CN_12X_BYTES</ref>],<sp/><ref refid="gt32l32s0140_8h_1a83d046665b7600df8b85b8c6184ebb3f" kindref="member">FONT_READ_ZH_CN_12X_BYTES</ref>,<sp/>ccolor,<sp/>cchange);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_base<sp/>+=<sp/>12;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight><highlight class="comment">//Unicode小于128兼容ASCII字符集</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x_buf<sp/>&gt;<sp/>-<ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref><sp/>&amp;&amp;<sp/>x_buf<sp/>&lt;=<sp/><ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref>)</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1a9e8309cbecd85eff7cbf584b8ff4c743" kindref="member">separation_draw</ref>(x_buf,<sp/>cy<sp/>+<sp/>(y<sp/>-<sp/>1),<sp/>6,<sp/>&amp;font_buf[idx<sp/>*<sp/><ref refid="gt32l32s0140_8h_1a83d046665b7600df8b85b8c6184ebb3f" kindref="member">FONT_READ_ZH_CN_12X_BYTES</ref>],<sp/><ref refid="gt32l32s0140_8h_1a16bdee40048a6b366aefc94f7d8eae71" kindref="member">FONT_READ_ASCII_6X12_BYTES</ref>,<sp/>ccolor,<sp/>cchange);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_base<sp/>+=<sp/>6;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(50));</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_base<sp/>=<sp/>0;</highlight><highlight class="comment">//重置字符间隔偏移缓存</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//释放所有缓存</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/>free(buf_unicode);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/>buf_unicode<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/>free(str_buf);</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/>str_buf<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/>free(font_buf);</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/>font_buf<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="758"><highlight class="normal">}</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************显示驱动函数**********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sevetest30___led_array_8c_1aefd30405e1080808060dc92054df0bdb" kindref="member">ledarray_init</ref>()</highlight></codeline>
<codeline lineno="764"><highlight class="normal">{</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ledarray_init&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="sevetest30___led_array_8c_1aa35baad1478bed024ce17f93bc5f4ce0" kindref="member">refresh_Task_Mutex</ref>)<sp/>{</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1aa35baad1478bed024ce17f93bc5f4ce0" kindref="member">refresh_Task_Mutex</ref><sp/>=<sp/>xSemaphoreCreateMutex();</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="sevetest30___led_array_8c_1aa35baad1478bed024ce17f93bc5f4ce0" kindref="member">refresh_Task_Mutex</ref>)<sp/>{</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;创建refresh_Task_Mutex互斥量时发现问题&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;灯板阵列不可重复初始化,运行ledarray_deinit以去初始化&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/>rmt_config_t<sp/>rmt_cfg0_buf<sp/>=<sp/>RMT_DEFAULT_CONFIG_TX(<ref refid="sevetest30___led_array_8c_1a18a7aec9e884728f86ab05ba825ea4bc" kindref="member">ledarray_gpio_info</ref>[0],<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>使用默认通道配置模板，通道0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/>rmt_config_t<sp/>rmt_cfg1_buf<sp/>=<sp/>RMT_DEFAULT_CONFIG_TX(<ref refid="sevetest30___led_array_8c_1a18a7aec9e884728f86ab05ba825ea4bc" kindref="member">ledarray_gpio_info</ref>[1],<sp/>1);<sp/></highlight><highlight class="comment">//<sp/>使用默认通道配置模板，通道1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/>rmt_cfg0_buf.clk_div<sp/>=<sp/>2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>修改成员，设定计数器分频，如果频率不适配，是无法运行的</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/>rmt_cfg1_buf.clk_div<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/>rmt_config(&amp;rmt_cfg0_buf);<sp/></highlight><highlight class="comment">//<sp/>传输配置参数</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/>rmt_config(&amp;rmt_cfg1_buf);</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>控制器安装<sp/><sp/>（通道选择，接收内存块数量（发送模式使用0个），中断标识）</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/>rmt_driver_install(rmt_cfg0_buf.channel,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/>rmt_driver_install(rmt_cfg1_buf.channel,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>安装<sp/>ws2812控制</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>led_strip_config_t<sp/>strip_cfg0<sp/>=<sp/>LED_STRIP_DEFAULT_CONFIG(<ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref>,<sp/>(led_strip_dev_t)rmt_cfg0_buf.channel);</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/>led_strip_config_t<sp/>strip_cfg1<sp/>=<sp/>LED_STRIP_DEFAULT_CONFIG(<ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref>,<sp/>(led_strip_dev_t)rmt_cfg1_buf.channel);</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1a842219e4ed8f8a51ac4b38146710c50c" kindref="member">strip0</ref><sp/>=<sp/>led_strip_new_rmt_ws2812(&amp;strip_cfg0);</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1ac31eaf0c595a0d46b92d3983d2a30444" kindref="member">strip1</ref><sp/>=<sp/>led_strip_new_rmt_ws2812(&amp;strip_cfg1);</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1a16ebbd49920cbc3bd87ba89ccd565928" kindref="member">rmt_cfg0</ref><sp/>=<sp/>&amp;rmt_cfg0_buf;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1ad24caf1fb6502d896f22bc6d3d147192" kindref="member">rmt_cfg1</ref><sp/>=<sp/>&amp;rmt_cfg0_buf;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1a350204007e04d378da6acbc29c1c816c" kindref="member">ledarray_set_refresh_mode</ref>(<ref refid="sevetest30___led_array_8h_1ac1338a63be3ce085ed1707b3cd37a8c7" kindref="member">LEDARRAY_REFRESH_INIT_MODE</ref>);</highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGW(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>%d<sp/>X<sp/>%d<sp/>LED阵列初始化完成&quot;</highlight><highlight class="normal">,<sp/><ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref>,<sp/><ref refid="sevetest30___led_array_8h_1a8412ebaff2eca2bda07acae207229394" kindref="member">VERTICAL_LED_NUMBER</ref>);</highlight></codeline>
<codeline lineno="803"><highlight class="normal">}</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sevetest30___led_array_8c_1af09cfa198e2fb90a5aa9654d886f3664" kindref="member">ledarray_deinit</ref>()</highlight></codeline>
<codeline lineno="807"><highlight class="normal">{</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ledarray_deinit&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="sevetest30___led_array_8c_1aa35baad1478bed024ce17f93bc5f4ce0" kindref="member">refresh_Task_Mutex</ref>)<sp/>{</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;灯板阵列未初始化,无需去初始化&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1a350204007e04d378da6acbc29c1c816c" kindref="member">ledarray_set_refresh_mode</ref>(<ref refid="sevetest30___led_array_8h_1a43484d7921da2388b427cde75836f46ea5befe4eb59c860532f3f3287eae868d9" kindref="member">LEDARRAY_REFRESH_DISABLE</ref>);</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/>vSemaphoreDelete(<ref refid="sevetest30___led_array_8c_1aa35baad1478bed024ce17f93bc5f4ce0" kindref="member">refresh_Task_Mutex</ref>);</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1aa35baad1478bed024ce17f93bc5f4ce0" kindref="member">refresh_Task_Mutex</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1a842219e4ed8f8a51ac4b38146710c50c" kindref="member">strip0</ref>-&gt;del(<ref refid="sevetest30___led_array_8c_1a842219e4ed8f8a51ac4b38146710c50c" kindref="member">strip0</ref>);</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1a842219e4ed8f8a51ac4b38146710c50c" kindref="member">strip0</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1ac31eaf0c595a0d46b92d3983d2a30444" kindref="member">strip1</ref>-&gt;del(<ref refid="sevetest30___led_array_8c_1ac31eaf0c595a0d46b92d3983d2a30444" kindref="member">strip1</ref>);</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1ac31eaf0c595a0d46b92d3983d2a30444" kindref="member">strip1</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/>rmt_driver_uninstall(0);</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/>rmt_driver_uninstall(1);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGW(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>%d<sp/>X<sp/>%d<sp/>LED阵列去初始化重置完成&quot;</highlight><highlight class="normal">,<sp/><ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref>,<sp/><ref refid="sevetest30___led_array_8h_1a8412ebaff2eca2bda07acae207229394" kindref="member">VERTICAL_LED_NUMBER</ref>);</highlight></codeline>
<codeline lineno="827"><highlight class="normal">}</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sevetest30___led_array_8c_1a0aa50fecb446229afaf4d7b4808254d8" kindref="member">ledarray_set_and_write</ref>(uint8_t<sp/>group_sw)</highlight></codeline>
<codeline lineno="832"><highlight class="normal">{</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(group_sw<sp/>&gt;<sp/><ref refid="sevetest30___led_array_8h_1a8412ebaff2eca2bda07acae207229394" kindref="member">VERTICAL_LED_NUMBER</ref><sp/>/<sp/>2<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>不在显示范围退出即可，允许在范围外但不报告</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="sevetest30___led_array_8c_1a842219e4ed8f8a51ac4b38146710c50c" kindref="member">strip0</ref><sp/>==<sp/>NULL<sp/>||<sp/><ref refid="sevetest30___led_array_8c_1ac31eaf0c595a0d46b92d3983d2a30444" kindref="member">strip1</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(</highlight><highlight class="stringliteral">&quot;ledarray_set_and_write&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;LED阵列未初始化&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xSemaphoreTake(<ref refid="sevetest30___led_array_8c_1aa35baad1478bed024ce17f93bc5f4ce0" kindref="member">refresh_Task_Mutex</ref>,<sp/>portMAX_DELAY))<sp/>{</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>记录了上次调用函数刷新的组的输出IO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>gpio_num_t<sp/>former_select0<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1a18a7aec9e884728f86ab05ba825ea4bc" kindref="member">ledarray_gpio_info</ref>[0];</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>gpio_num_t<sp/>former_select1<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1a18a7aec9e884728f86ab05ba825ea4bc" kindref="member">ledarray_gpio_info</ref>[1];</highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>strip0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gpio_set_direction(former_select0,<sp/>GPIO_MODE_INPUT);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//禁止向之前绑定的IO发送数据</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1a670cb7e9249c70161c21ac2aae2b4e4e" kindref="member">color_compound</ref>(group_sw<sp/>*<sp/>2<sp/>+<sp/>1);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>合成数据</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rmt_set_gpio(0,<sp/>RMT_MODE_TX,<sp/><ref refid="sevetest30___led_array_8c_1a18a7aec9e884728f86ab05ba825ea4bc" kindref="member">ledarray_gpio_info</ref>[group_sw<sp/>*<sp/>2<sp/>+<sp/>0],<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>绑定新IO,数据会向所有已经绑定的IO发送</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/><ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref><sp/>*<sp/>3;<sp/>j<sp/>+=<sp/>3)</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1a842219e4ed8f8a51ac4b38146710c50c" kindref="member">strip0</ref>-&gt;set_pixel(<ref refid="sevetest30___led_array_8c_1a842219e4ed8f8a51ac4b38146710c50c" kindref="member">strip0</ref>,<sp/>j<sp/>/<sp/>3,<sp/><ref refid="sevetest30___led_array_8c_1ae2fe0d11648c892888a243c9e29cbb81" kindref="member">compound_result</ref>[j<sp/>+<sp/>1],<sp/><ref refid="sevetest30___led_array_8c_1ae2fe0d11648c892888a243c9e29cbb81" kindref="member">compound_result</ref>[j<sp/>+<sp/>0],<sp/><ref refid="sevetest30___led_array_8c_1ae2fe0d11648c892888a243c9e29cbb81" kindref="member">compound_result</ref>[j<sp/>+<sp/>2]);<sp/></highlight><highlight class="comment">//<sp/>设置即将刷新的数据</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1a842219e4ed8f8a51ac4b38146710c50c" kindref="member">strip0</ref>-&gt;refresh(<ref refid="sevetest30___led_array_8c_1a842219e4ed8f8a51ac4b38146710c50c" kindref="member">strip0</ref>,<sp/>100);<sp/></highlight><highlight class="comment">//<sp/>对现在绑定的IO写入数据</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>strip1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gpio_set_direction(former_select1,<sp/>GPIO_MODE_INPUT);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//禁止向之前绑定的IO发送数据</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1a670cb7e9249c70161c21ac2aae2b4e4e" kindref="member">color_compound</ref>(group_sw<sp/>*<sp/>2<sp/>+<sp/>2);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>合成数据</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rmt_set_gpio(1,<sp/>RMT_MODE_TX,<sp/><ref refid="sevetest30___led_array_8c_1a18a7aec9e884728f86ab05ba825ea4bc" kindref="member">ledarray_gpio_info</ref>[group_sw<sp/>*<sp/>2<sp/>+<sp/>1],<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>绑定新IO,数据会向所有已经绑定的IO发送</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/><ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref><sp/>*<sp/>3;<sp/>j<sp/>+=<sp/>3)</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1ac31eaf0c595a0d46b92d3983d2a30444" kindref="member">strip1</ref>-&gt;set_pixel(<ref refid="sevetest30___led_array_8c_1ac31eaf0c595a0d46b92d3983d2a30444" kindref="member">strip1</ref>,<sp/>j<sp/>/<sp/>3,<sp/><ref refid="sevetest30___led_array_8c_1ae2fe0d11648c892888a243c9e29cbb81" kindref="member">compound_result</ref>[j<sp/>+<sp/>1],<sp/><ref refid="sevetest30___led_array_8c_1ae2fe0d11648c892888a243c9e29cbb81" kindref="member">compound_result</ref>[j<sp/>+<sp/>0],<sp/><ref refid="sevetest30___led_array_8c_1ae2fe0d11648c892888a243c9e29cbb81" kindref="member">compound_result</ref>[j<sp/>+<sp/>2]);<sp/></highlight><highlight class="comment">//<sp/>设置即将刷新的数据</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1ac31eaf0c595a0d46b92d3983d2a30444" kindref="member">strip1</ref>-&gt;refresh(<ref refid="sevetest30___led_array_8c_1ac31eaf0c595a0d46b92d3983d2a30444" kindref="member">strip1</ref>,<sp/>100);<sp/></highlight><highlight class="comment">//<sp/>对现在绑定的IO写入数据</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>former_select0<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1a18a7aec9e884728f86ab05ba825ea4bc" kindref="member">ledarray_gpio_info</ref>[group_sw<sp/>*<sp/>2<sp/>+<sp/>0];</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>former_select1<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1a18a7aec9e884728f86ab05ba825ea4bc" kindref="member">ledarray_gpio_info</ref>[group_sw<sp/>*<sp/>2<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xSemaphoreGive(<ref refid="sevetest30___led_array_8c_1aa35baad1478bed024ce17f93bc5f4ce0" kindref="member">refresh_Task_Mutex</ref>);</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="870"><highlight class="normal">}</highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sevetest30___led_array_8c_1a6e36c132215af27002355b2ff9d8b072" kindref="member">color_input</ref>(int8_t<sp/>x,<sp/>int8_t<sp/>y,<sp/>uint8_t*<sp/>dat)</highlight></codeline>
<codeline lineno="877"><highlight class="normal">{</highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&lt;<sp/>0<sp/>||<sp/>x<sp/>&gt;<sp/><ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref><sp/>-<sp/>1<sp/>||<sp/>y<sp/>&lt;<sp/>1<sp/>||<sp/>y<sp/>&gt;<sp/><ref refid="sevetest30___led_array_8h_1a8412ebaff2eca2bda07acae207229394" kindref="member">VERTICAL_LED_NUMBER</ref>)<sp/>{</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>不在显示范围退出即可，允许在范围外但不报告</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="sevetest30___led_array_8c_1acd62dac27e0918225ab0aede60ee2f18" kindref="member">draw_line_count</ref>[y<sp/>-<sp/>1]<sp/>&lt;<sp/>255)</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1acd62dac27e0918225ab0aede60ee2f18" kindref="member">draw_line_count</ref>[y<sp/>-<sp/>1]++;</highlight><highlight class="comment">//该行发生绘制活动,计数值增加</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(y)</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1ad44e1ae1c4f598fe02ebc3eb954e5820" kindref="member">red_y1</ref>[x]<sp/>=<sp/>dat[0];</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1a75f2f1c84d9fffcc18505c049a316ff6" kindref="member">green_y1</ref>[x]<sp/>=<sp/>dat[1];</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1ab762caa46e1cb6b2c7728e38a2a40253" kindref="member">blue_y1</ref>[x]<sp/>=<sp/>dat[2];</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1ab5de663c114235e7c8ccd61c8f135961" kindref="member">red_y2</ref>[x]<sp/>=<sp/>dat[0];</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1a9b7ecb2850a8d90716c358a1df8ab74d" kindref="member">green_y2</ref>[x]<sp/>=<sp/>dat[1];</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1a5113018ac08ad0103de383e4d5c269d8" kindref="member">blue_y2</ref>[x]<sp/>=<sp/>dat[2];</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1aa4c4611d22f3ccbb1b368068a4b9fcf5" kindref="member">red_y3</ref>[x]<sp/>=<sp/>dat[0];</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1a60f75c95fdefdb11ecc9068290dd56b8" kindref="member">green_y3</ref>[x]<sp/>=<sp/>dat[1];</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1a20312d7632a95d178b319c63bd372a3c" kindref="member">blue_y3</ref>[x]<sp/>=<sp/>dat[2];</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1a539fbf6aa70ee23c9e9e2b2c674b930c" kindref="member">red_y4</ref>[x]<sp/>=<sp/>dat[0];</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1aa229a3f8969ceb591935cfc572168edc" kindref="member">green_y4</ref>[x]<sp/>=<sp/>dat[1];</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1ab93b7c1b7542d1a593b9b472439ca831" kindref="member">blue_y4</ref>[x]<sp/>=<sp/>dat[2];</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1a435a079e71aa8aafa84563747c7b98ff" kindref="member">red_y5</ref>[x]<sp/>=<sp/>dat[0];</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1a9e64428ff1ca27f6d77ac6ba4db68d2d" kindref="member">green_y5</ref>[x]<sp/>=<sp/>dat[1];</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1a5699e1e932a740cf0e1f458ffc06aeda" kindref="member">blue_y5</ref>[x]<sp/>=<sp/>dat[2];</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>6:</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1afee0b5bcdd375220257264402111beec" kindref="member">red_y6</ref>[x]<sp/>=<sp/>dat[0];</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1a10f41a0df3fc36db986b4184f8cac3d6" kindref="member">green_y6</ref>[x]<sp/>=<sp/>dat[1];</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1a8be7d772d2f591ba28b5557ad253f5aa" kindref="member">blue_y6</ref>[x]<sp/>=<sp/>dat[2];</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>7:</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1ab9979d3c8c123bec855d7ac12427dbe0" kindref="member">red_y7</ref>[x]<sp/>=<sp/>dat[0];</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1ac4405824d3564d2b514f0b6775a08684" kindref="member">green_y7</ref>[x]<sp/>=<sp/>dat[1];</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1ac405ab48a40101a4f204b6640a664058" kindref="member">blue_y7</ref>[x]<sp/>=<sp/>dat[2];</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>8:</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1a89d839e16672ca9353e608407687e140" kindref="member">red_y8</ref>[x]<sp/>=<sp/>dat[0];</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1abb1ee1f170bf776c1bb26df891b8ad6f" kindref="member">green_y8</ref>[x]<sp/>=<sp/>dat[1];</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1ac74003f8060ad60a09320238f5c296fd" kindref="member">blue_y8</ref>[x]<sp/>=<sp/>dat[2];</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>9:</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1a1daff4a6c90d34894d6097271bd2ad83" kindref="member">red_y9</ref>[x]<sp/>=<sp/>dat[0];</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1ab085bed50e76747cef84dc4a569ddf1b" kindref="member">green_y9</ref>[x]<sp/>=<sp/>dat[1];</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1ac25cee29209cacfa7ca7117034e2f5ae" kindref="member">blue_y9</ref>[x]<sp/>=<sp/>dat[2];</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>10:</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1a21bdacda990e8d3298c917ca08242a04" kindref="member">red_y10</ref>[x]<sp/>=<sp/>dat[0];</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1a096d53f53c0cdf27d30c75b980d73c06" kindref="member">green_y10</ref>[x]<sp/>=<sp/>dat[1];</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1adcd0acc99a935f349189bc6869eb3b15" kindref="member">blue_y10</ref>[x]<sp/>=<sp/>dat[2];</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>11:</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1aacc4ccd900a8206611c259b456b6bb8e" kindref="member">red_y11</ref>[x]<sp/>=<sp/>dat[0];</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1ae5872581873fdbd12ab0d3a1eaf20141" kindref="member">green_y11</ref>[x]<sp/>=<sp/>dat[1];</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1a5d3079898178520150951b2510402570" kindref="member">blue_y11</ref>[x]<sp/>=<sp/>dat[2];</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>12:</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1a77e4b35443879308f6e21ea521f25bf1" kindref="member">red_y12</ref>[x]<sp/>=<sp/>dat[0];</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1a4b61050b487a27407508aaca3523d775" kindref="member">green_y12</ref>[x]<sp/>=<sp/>dat[1];</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1a06afd935739fe99465ecc66472ea75a3" kindref="member">blue_y12</ref>[x]<sp/>=<sp/>dat[2];</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="963"><highlight class="normal">}</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sevetest30___led_array_8c_1afe36c756b8e5400fbe11f1168eeebab8" kindref="member">color_output</ref>(int8_t<sp/>x,<sp/>int8_t<sp/>y,<sp/>uint8_t*<sp/>dat)</highlight></codeline>
<codeline lineno="970"><highlight class="normal">{</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dat)<sp/>{</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(</highlight><highlight class="stringliteral">&quot;color_output&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;输入了无法处理的空指针&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&lt;<sp/>0<sp/>||<sp/>x<sp/>&gt;<sp/><ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref><sp/>-<sp/>1<sp/>||<sp/>y<sp/>&lt;<sp/>1<sp/>||<sp/>y<sp/>&gt;<sp/><ref refid="sevetest30___led_array_8h_1a8412ebaff2eca2bda07acae207229394" kindref="member">VERTICAL_LED_NUMBER</ref>)</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>不在显示范围退出即可，允许在范围外但不报告</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(y)</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dat[0]<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1ad44e1ae1c4f598fe02ebc3eb954e5820" kindref="member">red_y1</ref>[x];</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dat[1]<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1a75f2f1c84d9fffcc18505c049a316ff6" kindref="member">green_y1</ref>[x];</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dat[2]<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1ab762caa46e1cb6b2c7728e38a2a40253" kindref="member">blue_y1</ref>[x];</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dat[0]<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1ab5de663c114235e7c8ccd61c8f135961" kindref="member">red_y2</ref>[x];</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dat[1]<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1a9b7ecb2850a8d90716c358a1df8ab74d" kindref="member">green_y2</ref>[x];</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dat[2]<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1a5113018ac08ad0103de383e4d5c269d8" kindref="member">blue_y2</ref>[x];</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dat[0]<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1aa4c4611d22f3ccbb1b368068a4b9fcf5" kindref="member">red_y3</ref>[x];</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dat[1]<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1a60f75c95fdefdb11ecc9068290dd56b8" kindref="member">green_y3</ref>[x];</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dat[2]<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1a20312d7632a95d178b319c63bd372a3c" kindref="member">blue_y3</ref>[x];</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dat[0]<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1a539fbf6aa70ee23c9e9e2b2c674b930c" kindref="member">red_y4</ref>[x];</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dat[1]<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1aa229a3f8969ceb591935cfc572168edc" kindref="member">green_y4</ref>[x];</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dat[2]<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1ab93b7c1b7542d1a593b9b472439ca831" kindref="member">blue_y4</ref>[x];</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dat[0]<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1a435a079e71aa8aafa84563747c7b98ff" kindref="member">red_y5</ref>[x];</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dat[1]<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1a9e64428ff1ca27f6d77ac6ba4db68d2d" kindref="member">green_y5</ref>[x];</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dat[2]<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1a5699e1e932a740cf0e1f458ffc06aeda" kindref="member">blue_y5</ref>[x];</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>6:</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dat[0]<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1afee0b5bcdd375220257264402111beec" kindref="member">red_y6</ref>[x];</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dat[1]<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1a10f41a0df3fc36db986b4184f8cac3d6" kindref="member">green_y6</ref>[x];</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dat[2]<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1a8be7d772d2f591ba28b5557ad253f5aa" kindref="member">blue_y6</ref>[x];</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>7:</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dat[0]<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1ab9979d3c8c123bec855d7ac12427dbe0" kindref="member">red_y7</ref>[x];</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dat[1]<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1ac4405824d3564d2b514f0b6775a08684" kindref="member">green_y7</ref>[x];</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dat[2]<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1ac405ab48a40101a4f204b6640a664058" kindref="member">blue_y7</ref>[x];</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>8:</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dat[0]<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1a89d839e16672ca9353e608407687e140" kindref="member">red_y8</ref>[x];</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dat[1]<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1abb1ee1f170bf776c1bb26df891b8ad6f" kindref="member">green_y8</ref>[x];</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dat[2]<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1ac74003f8060ad60a09320238f5c296fd" kindref="member">blue_y8</ref>[x];</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>9:</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dat[0]<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1a1daff4a6c90d34894d6097271bd2ad83" kindref="member">red_y9</ref>[x];</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dat[1]<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1ab085bed50e76747cef84dc4a569ddf1b" kindref="member">green_y9</ref>[x];</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dat[2]<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1ac25cee29209cacfa7ca7117034e2f5ae" kindref="member">blue_y9</ref>[x];</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>10:</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dat[0]<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1a21bdacda990e8d3298c917ca08242a04" kindref="member">red_y10</ref>[x];</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dat[1]<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1a096d53f53c0cdf27d30c75b980d73c06" kindref="member">green_y10</ref>[x];</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dat[2]<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1adcd0acc99a935f349189bc6869eb3b15" kindref="member">blue_y10</ref>[x];</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>11:</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dat[0]<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1aacc4ccd900a8206611c259b456b6bb8e" kindref="member">red_y11</ref>[x];</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dat[1]<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1ae5872581873fdbd12ab0d3a1eaf20141" kindref="member">green_y11</ref>[x];</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dat[2]<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1a5d3079898178520150951b2510402570" kindref="member">blue_y11</ref>[x];</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>12:</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dat[0]<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1a77e4b35443879308f6e21ea521f25bf1" kindref="member">red_y12</ref>[x];</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dat[1]<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1a4b61050b487a27407508aaca3523d775" kindref="member">green_y12</ref>[x];</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dat[2]<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1a06afd935739fe99465ecc66472ea75a3" kindref="member">blue_y12</ref>[x];</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1054"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sevetest30___led_array_8c_1a670cb7e9249c70161c21ac2aae2b4e4e" kindref="member">color_compound</ref>(uint8_t<sp/>line_sw)</highlight></codeline>
<codeline lineno="1061"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>初始化</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t*<sp/>red<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t*<sp/>green<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t*<sp/>blue<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(line_sw)</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>red<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1ad44e1ae1c4f598fe02ebc3eb954e5820" kindref="member">red_y1</ref>;</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>green<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1a75f2f1c84d9fffcc18505c049a316ff6" kindref="member">green_y1</ref>;</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blue<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1ab762caa46e1cb6b2c7728e38a2a40253" kindref="member">blue_y1</ref>;</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>red<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1ab5de663c114235e7c8ccd61c8f135961" kindref="member">red_y2</ref>;</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>green<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1a9b7ecb2850a8d90716c358a1df8ab74d" kindref="member">green_y2</ref>;</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blue<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1a5113018ac08ad0103de383e4d5c269d8" kindref="member">blue_y2</ref>;</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>red<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1aa4c4611d22f3ccbb1b368068a4b9fcf5" kindref="member">red_y3</ref>;</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>green<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1a60f75c95fdefdb11ecc9068290dd56b8" kindref="member">green_y3</ref>;</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blue<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1a20312d7632a95d178b319c63bd372a3c" kindref="member">blue_y3</ref>;</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>red<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1a539fbf6aa70ee23c9e9e2b2c674b930c" kindref="member">red_y4</ref>;</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>green<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1aa229a3f8969ceb591935cfc572168edc" kindref="member">green_y4</ref>;</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blue<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1ab93b7c1b7542d1a593b9b472439ca831" kindref="member">blue_y4</ref>;</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>red<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1a435a079e71aa8aafa84563747c7b98ff" kindref="member">red_y5</ref>;</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>green<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1a9e64428ff1ca27f6d77ac6ba4db68d2d" kindref="member">green_y5</ref>;</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blue<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1a5699e1e932a740cf0e1f458ffc06aeda" kindref="member">blue_y5</ref>;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>6:</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>red<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1afee0b5bcdd375220257264402111beec" kindref="member">red_y6</ref>;</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>green<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1a10f41a0df3fc36db986b4184f8cac3d6" kindref="member">green_y6</ref>;</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blue<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1a8be7d772d2f591ba28b5557ad253f5aa" kindref="member">blue_y6</ref>;</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>7:</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>red<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1ab9979d3c8c123bec855d7ac12427dbe0" kindref="member">red_y7</ref>;</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>green<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1ac4405824d3564d2b514f0b6775a08684" kindref="member">green_y7</ref>;</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blue<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1ac405ab48a40101a4f204b6640a664058" kindref="member">blue_y7</ref>;</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>8:</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>red<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1a89d839e16672ca9353e608407687e140" kindref="member">red_y8</ref>;</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>green<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1abb1ee1f170bf776c1bb26df891b8ad6f" kindref="member">green_y8</ref>;</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blue<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1ac74003f8060ad60a09320238f5c296fd" kindref="member">blue_y8</ref>;</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>9:</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>red<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1a1daff4a6c90d34894d6097271bd2ad83" kindref="member">red_y9</ref>;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>green<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1ab085bed50e76747cef84dc4a569ddf1b" kindref="member">green_y9</ref>;</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blue<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1ac25cee29209cacfa7ca7117034e2f5ae" kindref="member">blue_y9</ref>;</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>10:</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>red<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1a21bdacda990e8d3298c917ca08242a04" kindref="member">red_y10</ref>;</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>green<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1a096d53f53c0cdf27d30c75b980d73c06" kindref="member">green_y10</ref>;</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blue<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1adcd0acc99a935f349189bc6869eb3b15" kindref="member">blue_y10</ref>;</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>11:</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>red<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1aacc4ccd900a8206611c259b456b6bb8e" kindref="member">red_y11</ref>;</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>green<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1ae5872581873fdbd12ab0d3a1eaf20141" kindref="member">green_y11</ref>;</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blue<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1a5d3079898178520150951b2510402570" kindref="member">blue_y11</ref>;</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>12:</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>red<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1a77e4b35443879308f6e21ea521f25bf1" kindref="member">red_y12</ref>;</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>green<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1a4b61050b487a27407508aaca3523d775" kindref="member">green_y12</ref>;</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blue<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1a06afd935739fe99465ecc66472ea75a3" kindref="member">blue_y12</ref>;</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1acd62dac27e0918225ab0aede60ee2f18" kindref="member">draw_line_count</ref>[line_sw<sp/>-<sp/>1]<sp/>=<sp/>0;</highlight><highlight class="comment">//该行发生刷新活动,绘制计数值重置</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>填充数据</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="sevetest30___led_array_8h_1ab042d2d448a216c0570d1a147af03adb" kindref="member">LINE_LED_NUMBER</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GRB顺序</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1ae2fe0d11648c892888a243c9e29cbb81" kindref="member">compound_result</ref>[i<sp/>*<sp/>3<sp/>+<sp/>0]<sp/>=<sp/>*green;</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1ae2fe0d11648c892888a243c9e29cbb81" kindref="member">compound_result</ref>[i<sp/>*<sp/>3<sp/>+<sp/>1]<sp/>=<sp/>*red;</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1ae2fe0d11648c892888a243c9e29cbb81" kindref="member">compound_result</ref>[i<sp/>*<sp/>3<sp/>+<sp/>2]<sp/>=<sp/>*blue;</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>red++,<sp/>green++,<sp/>blue++;<sp/></highlight><highlight class="comment">//<sp/>地址偏移</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"></highlight></codeline>
<codeline lineno="1146"><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************运算转换函数**********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight><highlight class="comment">//<sp/>RGB亮度调制<sp/><sp/>导入r<sp/>g<sp/>b数值地址+亮度</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sevetest30___led_array_8c_1acf17011d8638511cc2a6ea72883b0bdb" kindref="member">ledarray_intensity_change</ref>(uint8_t*<sp/>r,<sp/>uint8_t*<sp/>g,<sp/>uint8_t*<sp/>b,<sp/>uint8_t<sp/>intensity)</highlight></codeline>
<codeline lineno="1150"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>注意，RGB和HSV的取值范围并不一致，标准定义是<sp/>R<sp/>G<sp/>B<sp/>为<sp/>0-255<sp/><sp/>H<sp/>为<sp/>0-360<sp/>S<sp/>V<sp/>为0-1（为了方便计算，这里<sp/>S<sp/>V<sp/>映射到<sp/>0-100）</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*r<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>*g<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>*b<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/><sp/>倘若<sp/>r<sp/>g<sp/>b<sp/>三个分量值都是0，显然客观上不需要变换，增加明度只会干扰数值</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(intensity<sp/>&gt;<sp/>100)</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(</highlight><highlight class="stringliteral">&quot;ledarray_intensity_change&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;错误的亮度数值<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>intensity);</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*r<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*g<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*b<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>h<sp/>=<sp/>0,<sp/>s<sp/>=<sp/>0,<sp/>v<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1af86abda8c11bbccc90993c7b4e18fd37" kindref="member">rgb_to_hvs</ref>(*r,<sp/>*g,<sp/>*b,<sp/>&amp;h,<sp/>&amp;s,<sp/>&amp;v);</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/>v<sp/>=<sp/>intensity;</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sevetest30___led_array_8c_1a1d9fe3c8e1488269731f114f65493de9" kindref="member">led_strip_hsv2rgb</ref>(h,<sp/>s,<sp/>v,<sp/>(uint32_t*)r,<sp/>(uint32_t*)g,<sp/>(uint32_t*)b);</highlight></codeline>
<codeline lineno="1168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"></highlight><highlight class="comment">//<sp/>取三个double元素最大的那个</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="sevetest30___led_array_8c_1a56a0725fa7f743bec9d665033a24faec" kindref="member">value_max</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value3)</highlight></codeline>
<codeline lineno="1172"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>buffer[3]<sp/>=<sp/>{<sp/>value1,<sp/>value2,<sp/>value3<sp/>};</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>a<sp/>=<sp/>0,<sp/>b<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(a<sp/>=<sp/>0;<sp/>a<sp/>&lt;<sp/>2;<sp/>a++)</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(b<sp/>=<sp/>a<sp/>+<sp/>1;<sp/>b<sp/>&lt;<sp/>3;<sp/>b++)</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buffer[a]<sp/>&gt;<sp/>buffer[b])</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>save<sp/>=<sp/>buffer[b];</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[b]<sp/>=<sp/>buffer[a];</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[a]<sp/>=<sp/>save;</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buffer[2];</highlight></codeline>
<codeline lineno="1188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"></highlight><highlight class="comment">//<sp/>取三个double元素最小的那个</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="sevetest30___led_array_8c_1aaef76fa03766a31368f86fdb404319d7" kindref="member">value_min</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value3)</highlight></codeline>
<codeline lineno="1192"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>buffer[3]<sp/>=<sp/>{<sp/>value1,<sp/>value2,<sp/>value3<sp/>};</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>a<sp/>=<sp/>0,<sp/>b<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(a<sp/>=<sp/>0;<sp/>a<sp/>&lt;<sp/>2;<sp/>a++)</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(b<sp/>=<sp/>a<sp/>+<sp/>1;<sp/>b<sp/>&lt;<sp/>3;<sp/>b++)</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buffer[a]<sp/>&gt;<sp/>buffer[b])</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>save<sp/>=<sp/>buffer[b];</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[b]<sp/>=<sp/>buffer[a];</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[a]<sp/>=<sp/>save;</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buffer[0];</highlight></codeline>
<codeline lineno="1208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight><highlight class="comment">//<sp/>注意，RGB和HSV的取值范围并不一致，标准定义是<sp/>R<sp/>G<sp/>B<sp/>为<sp/>0-255<sp/><sp/>H<sp/>为<sp/>0-360<sp/>S<sp/>V<sp/>为0-1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"></highlight><highlight class="comment">//<sp/>然而，为了方便计算，这里<sp/>S<sp/>V<sp/>映射到<sp/>0-100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1212"><highlight class="normal"></highlight><highlight class="comment">//<sp/>将RGB转换到HSV颜色空间,计算方法是网上随便找的</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sevetest30___led_array_8c_1af86abda8c11bbccc90993c7b4e18fd37" kindref="member">rgb_to_hvs</ref>(uint8_t<sp/>red_buf,<sp/>uint8_t<sp/>green_buf,<sp/>uint8_t<sp/>blue_buf,<sp/>uint32_t*<sp/>p_h,<sp/>uint32_t*<sp/>p_s,<sp/>uint32_t*<sp/>p_v)</highlight></codeline>
<codeline lineno="1214"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>HSV需要浮点存储</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>h<sp/>=<sp/>0,<sp/>s<sp/>=<sp/>0,<sp/>v<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>将RGB映射到0<sp/>-<sp/>1之间,并由浮点变量<sp/>r<sp/>g<sp/>b<sp/>存储</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>0,<sp/>g<sp/>=<sp/>0,<sp/>b<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>red_buf<sp/>/<sp/>255.0;</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/>g<sp/>=<sp/>green_buf<sp/>/<sp/>255.0;</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/>b<sp/>=<sp/>blue_buf<sp/>/<sp/>255.0;</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>计算V</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/>v<sp/>=<sp/><ref refid="sevetest30___led_array_8c_1a56a0725fa7f743bec9d665033a24faec" kindref="member">value_max</ref>(r,<sp/>g,<sp/>b);</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>计算S</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>v<sp/>-<sp/><ref refid="sevetest30___led_array_8c_1aaef76fa03766a31368f86fdb404319d7" kindref="member">value_min</ref>(r,<sp/>g,<sp/>b);</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>s<sp/>/<sp/>v;</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"></highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>计算H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>==<sp/>r)</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h<sp/>=<sp/>60<sp/>*<sp/>(g<sp/>-<sp/>b)<sp/>/<sp/>(v<sp/>-<sp/><ref refid="sevetest30___led_array_8c_1aaef76fa03766a31368f86fdb404319d7" kindref="member">value_min</ref>(r,<sp/>g,<sp/>b));</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>==<sp/>g)</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h<sp/>=<sp/>120<sp/>+<sp/>60<sp/>*<sp/>(b<sp/>-<sp/>r)<sp/>/<sp/>(v<sp/>-<sp/><ref refid="sevetest30___led_array_8c_1aaef76fa03766a31368f86fdb404319d7" kindref="member">value_min</ref>(r,<sp/>g,<sp/>b));</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>==<sp/>b)</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h<sp/>=<sp/>240<sp/>+<sp/>60<sp/>*<sp/>(r<sp/>-<sp/>g)<sp/>/<sp/>(v<sp/>-<sp/><ref refid="sevetest30___led_array_8c_1aaef76fa03766a31368f86fdb404319d7" kindref="member">value_min</ref>(r,<sp/>g,<sp/>b));</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h<sp/>=<sp/>h<sp/>+<sp/>360;</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"></highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>映射到需求范围<sp/>0<sp/>-<sp/>100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/>s<sp/>*<sp/>100;</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/>v<sp/>=<sp/>v<sp/>*<sp/>100;</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>out_h<sp/>=<sp/>0,<sp/>out_s<sp/>=<sp/>0,<sp/>out_v<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>类型转换，随便四舍五入一下</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/>out_h<sp/>=<sp/>ceil(h);</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/>out_s<sp/>=<sp/>ceil(s);</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/>out_v<sp/>=<sp/>ceil(v);</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>数据输出</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/>*p_h<sp/>=<sp/>out_h;</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/>*p_s<sp/>=<sp/>out_s;</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/>*p_v<sp/>=<sp/>out_v;</highlight></codeline>
<codeline lineno="1260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"></highlight></codeline>
<codeline lineno="1262"><highlight class="normal"></highlight><highlight class="comment">//<sp/>以下函数来自ESP-IDFv4.4<sp/>led_strip.c<sp/>例程文件</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sevetest30___led_array_8c_1a1d9fe3c8e1488269731f114f65493de9" kindref="member">led_strip_hsv2rgb</ref>(uint32_t<sp/>h,<sp/>uint32_t<sp/>s,<sp/>uint32_t<sp/>v,<sp/>uint32_t*<sp/>r,<sp/>uint32_t*<sp/>g,<sp/>uint32_t*<sp/>b)</highlight></codeline>
<codeline lineno="1271"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/>h<sp/>%=<sp/>360;<sp/></highlight><highlight class="comment">//<sp/>h<sp/>-&gt;<sp/>[0,360]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>rgb_max<sp/>=<sp/>v<sp/>*<sp/>2.55f;</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>rgb_min<sp/>=<sp/>rgb_max<sp/>*<sp/>(100<sp/>-<sp/>s)<sp/>/<sp/>100.0f;</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>i<sp/>=<sp/>h<sp/>/<sp/>60;</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>diff<sp/>=<sp/>h<sp/>%<sp/>60;</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>RGB<sp/>adjustment<sp/>amount<sp/>by<sp/>hue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>rgb_adj<sp/>=<sp/>(rgb_max<sp/>-<sp/>rgb_min)<sp/>*<sp/>diff<sp/>/<sp/>60;</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(i)</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*r<sp/>=<sp/>rgb_max;</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*g<sp/>=<sp/>rgb_min<sp/>+<sp/>rgb_adj;</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*b<sp/>=<sp/>rgb_min;</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*r<sp/>=<sp/>rgb_max<sp/>-<sp/>rgb_adj;</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*g<sp/>=<sp/>rgb_max;</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*b<sp/>=<sp/>rgb_min;</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*r<sp/>=<sp/>rgb_min;</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*g<sp/>=<sp/>rgb_max;</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*b<sp/>=<sp/>rgb_min<sp/>+<sp/>rgb_adj;</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*r<sp/>=<sp/>rgb_min;</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*g<sp/>=<sp/>rgb_max<sp/>-<sp/>rgb_adj;</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*b<sp/>=<sp/>rgb_max;</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*r<sp/>=<sp/>rgb_min<sp/>+<sp/>rgb_adj;</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*g<sp/>=<sp/>rgb_min;</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*b<sp/>=<sp/>rgb_max;</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*r<sp/>=<sp/>rgb_max;</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*g<sp/>=<sp/>rgb_min;</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*b<sp/>=<sp/>rgb_max<sp/>-<sp/>rgb_adj;</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1315"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="main/sevetest30_LedArray.c"/>
  </compounddef>
</doxygen>
