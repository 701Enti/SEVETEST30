<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="zh">
  <compounddef id="sevetest30__gpio_8c" kind="file" language="C++">
    <compoundname>sevetest30_gpio.c</compoundname>
    <includes refid="sevetest30__gpio_8h" local="yes">sevetest30_gpio.h</includes>
    <includes refid="board__def_8h" local="yes">board_def.h</includes>
    <includes local="yes">esp_log.h</includes>
    <includes local="yes">freertos/FreeRTOS.h</includes>
    <includes local="yes">freertos/task.h</includes>
    <includes local="yes">freertos/queue.h</includes>
    <includes local="yes">driver/gpio.h</includes>
    <incdepgraph>
      <node id="6">
        <label>board_def.h</label>
        <link refid="board__def_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>TCA6416A.h</label>
        <link refid="_t_c_a6416_a_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>sevetest30_gpio.h</label>
        <link refid="sevetest30__gpio_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>main/sevetest30_gpio.c</label>
        <link refid="sevetest30__gpio_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>audio_hal.h</label>
      </node>
      <node id="14">
        <label>driver/gpio.h</label>
      </node>
      <node id="8">
        <label>driver/i2c.h</label>
      </node>
      <node id="9">
        <label>esp_gatts_api.h</label>
      </node>
      <node id="10">
        <label>esp_log.h</label>
      </node>
      <node id="11">
        <label>freertos/FreeRTOS.h</label>
      </node>
      <node id="13">
        <label>freertos/queue.h</label>
      </node>
      <node id="12">
        <label>freertos/task.h</label>
      </node>
      <node id="5">
        <label>stdbool.h</label>
      </node>
      <node id="4">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="var">
      <memberdef kind="variable" id="sevetest30__gpio_8c_1ac525bc7fc3fcba293304c1a21c8a19bf" prot="public" static="no" mutable="no">
        <type><ref refid="structext__io__ctrl__t" kindref="compound">ext_io_ctrl_t</ref></type>
        <definition>ext_io_ctrl_t ext_io_ctrl</definition>
        <argsstring></argsstring>
        <name>ext_io_ctrl</name>
        <initializer>= {
  .auto_read_EN = true,
  .auto_read_INT = false,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_gpio.c" line="39" column="15" bodyfile="main/sevetest30_gpio.c" bodystart="39" bodyend="42"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30__gpio_8c_1a0d9d08ab91d9e3ef21cb08e7cda6bde9" prot="public" static="no" mutable="no">
        <type><ref refid="struct_t_c_a6416_a__mode__t" kindref="compound">TCA6416A_mode_t</ref> *</type>
        <definition>TCA6416A_mode_t* P_ext_io_mode_data</definition>
        <argsstring></argsstring>
        <name>P_ext_io_mode_data</name>
        <initializer>=NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_gpio.c" line="44" column="18" bodyfile="main/sevetest30_gpio.c" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30__gpio_8c_1afd396507e59bbe50db8d28467607be92" prot="public" static="no" mutable="no">
        <type><ref refid="struct_t_c_a6416_a__value__t" kindref="compound">TCA6416A_value_t</ref> *</type>
        <definition>TCA6416A_value_t* P_ext_io_value_data</definition>
        <argsstring></argsstring>
        <name>P_ext_io_value_data</name>
        <initializer>=NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_gpio.c" line="45" column="18" bodyfile="main/sevetest30_gpio.c" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30__gpio_8c_1aee76cf33319d816373e4519db4d41d6d" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t P_ext_io_auto_read_flag</definition>
        <argsstring></argsstring>
        <name>P_ext_io_auto_read_flag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_gpio.c" line="48" column="10" bodyfile="main/sevetest30_gpio.c" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30__gpio_8c_1a39d37c647bde2406574b7239c7b7d1e3" prot="public" static="yes" mutable="no">
        <type>xQueueHandle</type>
        <definition>xQueueHandle tca6416a_int_queue</definition>
        <argsstring></argsstring>
        <name>tca6416a_int_queue</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_gpio.c" line="50" column="21" bodyfile="main/sevetest30_gpio.c" bodystart="50" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="sevetest30__gpio_8c_1afee1ba299a01f068b186d706945142d8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void IRAM_ATTR</type>
        <definition>static void IRAM_ATTR tca6416a_int_isr_handler</definition>
        <argsstring>(void *arg)</argsstring>
        <name>tca6416a_int_isr_handler</name>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_gpio.c" line="52" column="23" bodyfile="main/sevetest30_gpio.c" bodystart="52" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="sevetest30__gpio_8c_1a9bc3c1d66d3b006c69df61492ddfd5c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ext_io_value_service</definition>
        <argsstring>()</argsstring>
        <name>ext_io_value_service</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_gpio.c" line="60" column="6" bodyfile="main/sevetest30_gpio.c" bodystart="60" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="sevetest30__gpio_8c_1adad7c0479faa334137a7d6448a485bf8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ext_io_mode_service</definition>
        <argsstring>()</argsstring>
        <name>ext_io_mode_service</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_gpio.c" line="67" column="6" bodyfile="main/sevetest30_gpio.c" bodystart="67" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="sevetest30__gpio_8c_1a04eb3ac77e00b49f7c4aab5e25fcf275" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ext_io_init</definition>
        <argsstring>(TCA6416A_mode_t *p_mode, TCA6416A_value_t *p_value)</argsstring>
        <name>ext_io_init</name>
        <param>
          <type><ref refid="struct_t_c_a6416_a__mode__t" kindref="compound">TCA6416A_mode_t</ref> *</type>
          <declname>p_mode</declname>
        </param>
        <param>
          <type><ref refid="struct_t_c_a6416_a__value__t" kindref="compound">TCA6416A_value_t</ref> *</type>
          <declname>p_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_gpio.c" line="75" column="6" bodyfile="main/sevetest30_gpio.c" bodystart="75" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="sevetest30__gpio_8c_1ac699a211bba4f3573ae4e4d39e9aba5e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tca6416a_int_task</definition>
        <argsstring>(void *arg)</argsstring>
        <name>tca6416a_int_task</name>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_gpio.c" line="90" column="13" bodyfile="main/sevetest30_gpio.c" bodystart="90" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="sevetest30__gpio_8c_1a81f0008748f9b5e03f7681ef74146d72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sevetest30_gpio_init</definition>
        <argsstring>(TCA6416A_mode_t *p_ext_mode, TCA6416A_value_t *p_ext_value)</argsstring>
        <name>sevetest30_gpio_init</name>
        <param>
          <type><ref refid="struct_t_c_a6416_a__mode__t" kindref="compound">TCA6416A_mode_t</ref> *</type>
          <declname>p_ext_mode</declname>
        </param>
        <param>
          <type><ref refid="struct_t_c_a6416_a__value__t" kindref="compound">TCA6416A_value_t</ref> *</type>
          <declname>p_ext_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_gpio.c" line="108" column="6" bodyfile="main/sevetest30_gpio.c" bodystart="108" bodyend="141"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>701Enti<sp/>MIT<sp/>License</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>©<sp/>2024<sp/>&lt;701Enti<sp/>organization&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>“Software”),<sp/></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>“AS<sp/>IS”,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/></highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/></highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>该文件归属701Enti组织，SEVETEST30开发团队应该提供责任性维护，包含一些sevetest30的GPIO配置工作(内部+扩展)，主要为了TCA6416A控制函数的解耦</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>如您发现一些问题，请及时联系我们，我们非常感谢您的支持</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>敬告：文件本体只针对sevetest30的硬件设计，该库代码中的配置是否合理会影响到设备能否正常运行，请谨慎修改</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>此处没有使用TCA6416A的RESET引脚，但并不代表RESET可以悬空，请将其上拉到VCC,并在RESET连接一个1uF左右电容到GND(这不是对TCA6416A的使用建议)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>github:<sp/>https://github.com/701Enti</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>bilibili:<sp/>701Enti</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sevetest30__gpio_8h" kindref="compound">sevetest30_gpio.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="board__def_8h" kindref="compound">board_def.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;esp_log.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;freertos/FreeRTOS.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;freertos/task.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;freertos/queue.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;driver/gpio.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><ref refid="structext__io__ctrl__t" kindref="compound">ext_io_ctrl_t</ref><sp/><ref refid="sevetest30__gpio_8h_1ac525bc7fc3fcba293304c1a21c8a19bf" kindref="member">ext_io_ctrl</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>.auto_read_EN<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>.auto_read_INT<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="42"><highlight class="normal">};</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><ref refid="struct_t_c_a6416_a__mode__t" kindref="compound">TCA6416A_mode_t</ref>*<sp/><sp/><ref refid="sevetest30__gpio_8c_1a0d9d08ab91d9e3ef21cb08e7cda6bde9" kindref="member">P_ext_io_mode_data</ref>=NULL;<sp/></highlight><highlight class="comment">//扩展IO输入输出模式</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><ref refid="struct_t_c_a6416_a__value__t" kindref="compound">TCA6416A_value_t</ref>*<sp/><ref refid="sevetest30__gpio_8c_1afd396507e59bbe50db8d28467607be92" kindref="member">P_ext_io_value_data</ref>=NULL;</highlight><highlight class="comment">//扩展IO电平信息，写入和回读通用</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//中断参数传flag地址以保证flag值同步，该变量存储了这个地址，作为ISR参数</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal">uint32_t<sp/><ref refid="sevetest30__gpio_8c_1aee76cf33319d816373e4519db4d41d6d" kindref="member">P_ext_io_auto_read_flag</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>xQueueHandle<sp/><ref refid="sevetest30__gpio_8c_1a39d37c647bde2406574b7239c7b7d1e3" kindref="member">tca6416a_int_queue</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>IRAM_ATTR<sp/><ref refid="sevetest30__gpio_8c_1afee1ba299a01f068b186d706945142d8" kindref="member">tca6416a_int_isr_handler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>arg){</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>uint32_t<sp/>P_auto_read_flag<sp/>=<sp/>(uint32_t)arg;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>xQueueSendFromISR(<ref refid="sevetest30__gpio_8c_1a39d37c647bde2406574b7239c7b7d1e3" kindref="member">tca6416a_int_queue</ref>,&amp;P_auto_read_flag,NULL);</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>扩展gpio电平值服务，读写通用，但当有电平变化，系统中断触发会自动调用该函数，所以主要用来写操作</highlight></codeline>
<codeline lineno="58"><highlight class="comment">写：先对ext_io_value_data这个全局公共结构体变量修改值，等待系统大循环调用该函数写入IO电平</highlight></codeline>
<codeline lineno="59"><highlight class="comment">读：（当中断读取使能，只要电平变化系统中断触发，将全自动读取，一般无需调用）如果需要主动读取：先调用该函数刷新ext_io_value_data，之后直接读取ext_io_value_data内的成员变量值<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sevetest30__gpio_8c_1a9bc3c1d66d3b006c69df61492ddfd5c9" kindref="member">ext_io_value_service</ref>(){</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><ref refid="_t_c_a6416_a_8h_1acd16f8e50904d583bd542451716e8a73" kindref="member">TCA6416A_gpio_service</ref>(<ref refid="sevetest30__gpio_8c_1afd396507e59bbe50db8d28467607be92" kindref="member">P_ext_io_value_data</ref>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>扩展gpio输入输出模式服务</highlight></codeline>
<codeline lineno="65"><highlight class="comment">写：先对ext_io_mode_data这个全局公共结构体变量写入需要修改的值，再调用该函数控制IO输入输出模式</highlight></codeline>
<codeline lineno="66"><highlight class="comment">读：直接读取ext_io_mode_data内的成员变量值，不需要调用该函数<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sevetest30__gpio_8c_1adad7c0479faa334137a7d6448a485bf8" kindref="member">ext_io_mode_service</ref>(){</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//在将外部IO模式由输出模式转向输入模式时，可能发生意外中断问题，通过flag在模式设置时屏蔽中断自动读取，可以代价较低地避免可能性极小的重复读取问题的发生</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><ref refid="sevetest30__gpio_8h_1ac525bc7fc3fcba293304c1a21c8a19bf" kindref="member">ext_io_ctrl</ref>.auto_read_EN<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><ref refid="_t_c_a6416_a_8h_1a1296270d47065321a8499d26dd2bb317" kindref="member">TCA6416A_mode_set</ref>(<ref refid="sevetest30__gpio_8c_1a0d9d08ab91d9e3ef21cb08e7cda6bde9" kindref="member">P_ext_io_mode_data</ref>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><ref refid="sevetest30__gpio_8h_1ac525bc7fc3fcba293304c1a21c8a19bf" kindref="member">ext_io_ctrl</ref>.auto_read_EN<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//<sp/>扩展gpio(TCA6416A)初始化，在gpio_init函数调用时该函数就会被执行</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sevetest30__gpio_8c_1a04eb3ac77e00b49f7c4aab5e25fcf275" kindref="member">ext_io_init</ref>(<ref refid="struct_t_c_a6416_a__mode__t" kindref="compound">TCA6416A_mode_t</ref>*<sp/>p_mode,<ref refid="struct_t_c_a6416_a__value__t" kindref="compound">TCA6416A_value_t</ref>*<sp/>p_value){</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//此处没有使用TCA6416A的RESET引脚，但并不代表RESET可以悬空</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//请将其上拉到VCC,并在RESET连接一个1uF左右电容到GND(这不是对TCA6416A的使用建议)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><ref refid="struct_t_c_a6416_a__mode__t" kindref="compound">TCA6416A_mode_t</ref><sp/>mode_buf<sp/>=<sp/><ref refid="_t_c_a6416_a_8h_1afeab57a13b94a2c4182f4bf4bf3b899b" kindref="member">TCA6416A_DEFAULT_CONFIG_MODE</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><ref refid="struct_t_c_a6416_a__value__t" kindref="compound">TCA6416A_value_t</ref><sp/>value_buf<sp/>=<sp/><ref refid="_t_c_a6416_a_8h_1ad3a407e19a128821e446e2a6f6424629" kindref="member">TCA6416A_DEFAULT_CONFIG_VALUE</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>*p_mode<sp/>=<sp/>mode_buf;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>*p_value<sp/>=<sp/>value_buf;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><ref refid="sevetest30__gpio_8c_1a0d9d08ab91d9e3ef21cb08e7cda6bde9" kindref="member">P_ext_io_mode_data</ref><sp/>=<sp/>p_mode;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><ref refid="sevetest30__gpio_8c_1afd396507e59bbe50db8d28467607be92" kindref="member">P_ext_io_value_data</ref><sp/>=<sp/>p_value;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><ref refid="sevetest30__gpio_8c_1adad7c0479faa334137a7d6448a485bf8" kindref="member">ext_io_mode_service</ref>();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><ref refid="sevetest30__gpio_8c_1a9bc3c1d66d3b006c69df61492ddfd5c9" kindref="member">ext_io_value_service</ref>();</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sevetest30__gpio_8c_1ac699a211bba4f3573ae4e4d39e9aba5e" kindref="member">tca6416a_int_task</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>arg){</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>flag_buf<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>uint32_t<sp/>P_auto_read_flag;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(1){<sp/></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(500));</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(xQueueReceive(<ref refid="sevetest30__gpio_8c_1a39d37c647bde2406574b7239c7b7d1e3" kindref="member">tca6416a_int_queue</ref>,&amp;P_auto_read_flag,portMAX_DELAY)){</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//将自动读取标志值的地址作为ISR参数进行传输</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>flag_buf<sp/>=<sp/>*(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*)P_auto_read_flag;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(flag_buf){</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30__gpio_8h_1ac525bc7fc3fcba293304c1a21c8a19bf" kindref="member">ext_io_ctrl</ref>.auto_read_INT<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno=CONFIG_WIFI_SSID><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">//gpio初始化,包括内部IO和扩展IO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">//输入两个存储扩展IO模式和值的结构体</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//之后可直接改变结构体成员值来控制扩展IO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sevetest30__gpio_8c_1a81f0008748f9b5e03f7681ef74146d72" kindref="member">sevetest30_gpio_init</ref>(<ref refid="struct_t_c_a6416_a__mode__t" kindref="compound">TCA6416A_mode_t</ref>*<sp/>p_ext_mode,<ref refid="struct_t_c_a6416_a__value__t" kindref="compound">TCA6416A_value_t</ref>*<sp/>p_ext_value)</highlight></codeline>
<codeline lineno="109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>gpio_config_t<sp/>battery_in_ctrl_io_config<sp/>=<sp/>{<sp/></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>.pin_bit_mask<sp/>=<sp/>1ULL<sp/>&lt;&lt;<sp/><ref refid="board__def_8h_1a05bc8b752e30f53660d6267818dbd901" kindref="member">BAT_IN_CTRL_IO</ref>,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>.mode<sp/>=<sp/>GPIO_MODE_OUTPUT,<sp/><sp/></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>.pull_up_en<sp/>=<sp/>GPIO_PULLUP_DISABLE,<sp/></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>.pull_down_en<sp/>=GPIO_PULLDOWN_DISABLE,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>.intr_type<sp/>=GPIO_INTR_DISABLE,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>gpio_config(&amp;battery_in_ctrl_io_config);</highlight><highlight class="comment">//传参</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>gpio_set_level(<ref refid="board__def_8h_1a05bc8b752e30f53660d6267818dbd901" kindref="member">BAT_IN_CTRL_IO</ref>,1);</highlight><highlight class="comment">//设置IO,初始电平</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//TCA6416A<sp/>INT引脚</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>gpio_config_t<sp/>TCA6416A_int_config<sp/>=<sp/>{<sp/></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>.pin_bit_mask<sp/>=<sp/>1ULL<sp/>&lt;&lt;<sp/><ref refid="board__def_8h_1ac340ee18ca5d2b67727105fb71e1a50d" kindref="member">TCA6416A_IO_INT</ref>,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>.mode<sp/>=<sp/>GPIO_MODE_INPUT,<sp/><sp/></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>.pull_up_en<sp/>=<sp/>GPIO_PULLUP_DISABLE,<sp/></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>.pull_down_en<sp/>=GPIO_PULLDOWN_DISABLE,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>.intr_type<sp/>=GPIO_INTR_NEGEDGE,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>gpio_config(&amp;TCA6416A_int_config);</highlight><highlight class="comment">//传参</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//INT中断配置</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><ref refid="sevetest30__gpio_8c_1a39d37c647bde2406574b7239c7b7d1e3" kindref="member">tca6416a_int_queue</ref><sp/>=<sp/>xQueueCreate(10,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t));</highlight><highlight class="comment">//队列创建</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>xTaskCreatePinnedToCore(<ref refid="sevetest30__gpio_8c_1ac699a211bba4f3573ae4e4d39e9aba5e" kindref="member">tca6416a_int_task</ref>,</highlight><highlight class="stringliteral">&quot;tca6416a_int_task&quot;</highlight><highlight class="normal">,2048,NULL,<ref refid="sevetest30__gpio_8h_1a56d21302e927d9cf108f8f36215d6c08" kindref="member">EXT_IO_READ_EVT_PRIO</ref>,NULL,<ref refid="sevetest30__gpio_8h_1a347b78b1a2875bbaf5b56f8c00ba7a32" kindref="member">EXT_IO_READ_EVT_CORE</ref>);</highlight><highlight class="comment">//中断识别任务创建</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>gpio_install_isr_service(<ref refid="sevetest30__gpio_8h_1a6f5c5d9b818e93d8dae886efd668f659" kindref="member">EXT_IO_READ_INTR_FLAG</ref>);</highlight><highlight class="comment">//安装ISR服务优先级</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><ref refid="sevetest30__gpio_8c_1aee76cf33319d816373e4519db4d41d6d" kindref="member">P_ext_io_auto_read_flag</ref><sp/>=<sp/>&amp;<ref refid="sevetest30__gpio_8h_1ac525bc7fc3fcba293304c1a21c8a19bf" kindref="member">ext_io_ctrl</ref>.auto_read_EN;</highlight><highlight class="comment">//将自动读取标志值的地址作为ISR参数进行传输</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>gpio_isr_handler_add(<ref refid="board__def_8h_1ac340ee18ca5d2b67727105fb71e1a50d" kindref="member">TCA6416A_IO_INT</ref>,<ref refid="sevetest30__gpio_8c_1afee1ba299a01f068b186d706945142d8" kindref="member">tca6416a_int_isr_handler</ref>,(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<ref refid="sevetest30__gpio_8c_1aee76cf33319d816373e4519db4d41d6d" kindref="member">P_ext_io_auto_read_flag</ref>);</highlight><highlight class="comment">//为选定的GPIO添加ISR句柄</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>此处没有使用TCA6416A的RESET引脚，但并不代表RESET可以悬空，请将其上拉到VCC,并在RESET连接一个1uF左右电容到GND(这不是对TCA6416A的使用建议)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><ref refid="sevetest30__gpio_8c_1a04eb3ac77e00b49f7c4aab5e25fcf275" kindref="member">ext_io_init</ref>(p_ext_mode,p_ext_value);</highlight><highlight class="comment">//扩展gpio初始化</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="main/sevetest30_gpio.c"/>
  </compounddef>
</doxygen>
