<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="zh">
  <compounddef id="sevetest30___i_w_e_d_a_8c" kind="file" language="C++">
    <compoundname>sevetest30_IWEDA.c</compoundname>
    <includes local="yes">zlib.h</includes>
    <includes local="yes">zutil.h</includes>
    <includes local="yes">inftrees.h</includes>
    <includes local="yes">inflate.h</includes>
    <includes local="no">sys/time.h</includes>
    <includes local="no">string.h</includes>
    <includes local="yes">freertos/FreeRTOS.h</includes>
    <includes local="yes">freertos/task.h</includes>
    <includes refid="sevetest30___i_w_e_d_a_8h" local="yes">sevetest30_IWEDA.h</includes>
    <includes refid="sevetest30__sound_8h" local="yes">sevetest30_sound.h</includes>
    <includes local="yes">baidu_access_token.h</includes>
    <includes local="yes">esp_log.h</includes>
    <includes local="yes">esp_wifi.h</includes>
    <includes local="yes">nvs_flash.h</includes>
    <includes local="yes">sdkconfig.h</includes>
    <includes local="no">esp_sntp.h</includes>
    <includes local="yes">periph_wifi.h</includes>
    <includes refid="board_8h" local="yes">board.h</includes>
    <includes refid="board__ctrl_8h" local="yes">board_ctrl.h</includes>
    <includes local="yes">cjson.h</includes>
    <includes local="yes">audio_idf_version.h</includes>
    <includes local="yes">esp_netif.h</includes>
    <incdepgraph>
      <node id="23">
        <label>board.h</label>
        <link refid="board_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>board_ctrl.h</label>
        <link refid="board__ctrl_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>board_def.h</label>
        <link refid="board__def_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>board_pins_config.h</label>
        <link refid="board__pins__config_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>BL5372.h</label>
        <link refid="_b_l5372_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>TCA6416A.h</label>
        <link refid="_t_c_a6416_a_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>sevetest30_IWEDA.h</label>
        <link refid="sevetest30___i_w_e_d_a_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>sevetest30_gpio.h</label>
        <link refid="sevetest30__gpio_8h"/>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>sevetest30_sound.h</label>
        <link refid="sevetest30__sound_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>main/sevetest30_IWEDA.c</label>
        <link refid="sevetest30___i_w_e_d_a_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>audio_event_iface.h</label>
      </node>
      <node id="24">
        <label>audio_hal.h</label>
      </node>
      <node id="41">
        <label>audio_idf_version.h</label>
      </node>
      <node id="17">
        <label>baidu_access_token.h</label>
      </node>
      <node id="40">
        <label>cjson.h</label>
      </node>
      <node id="26">
        <label>driver/i2c.h</label>
      </node>
      <node id="38">
        <label>driver/i2s.h</label>
      </node>
      <node id="33">
        <label>driver/spi_common.h</label>
      </node>
      <node id="34">
        <label>driver/spi_master.h</label>
      </node>
      <node id="39">
        <label>driver/spi_slave.h</label>
      </node>
      <node id="13">
        <label>esp_err.h</label>
      </node>
      <node id="27">
        <label>esp_gatts_api.h</label>
      </node>
      <node id="12">
        <label>esp_http_client.h</label>
      </node>
      <node id="18">
        <label>esp_log.h</label>
      </node>
      <node id="42">
        <label>esp_netif.h</label>
      </node>
      <node id="35">
        <label>esp_peripherals.h</label>
      </node>
      <node id="22">
        <label>esp_sntp.h</label>
      </node>
      <node id="29">
        <label>esp_types.h</label>
      </node>
      <node id="19">
        <label>esp_wifi.h</label>
      </node>
      <node id="30">
        <label>esxxx_common.h</label>
      </node>
      <node id="8">
        <label>freertos/FreeRTOS.h</label>
      </node>
      <node id="9">
        <label>freertos/task.h</label>
      </node>
      <node id="5">
        <label>inflate.h</label>
      </node>
      <node id="4">
        <label>inftrees.h</label>
      </node>
      <node id="20">
        <label>nvs_flash.h</label>
      </node>
      <node id="11">
        <label>periph_wifi.h</label>
      </node>
      <node id="21">
        <label>sdkconfig.h</label>
      </node>
      <node id="14">
        <label>stdbool.h</label>
      </node>
      <node id="7">
        <label>string.h</label>
      </node>
      <node id="6">
        <label>sys/time.h</label>
      </node>
      <node id="2">
        <label>zlib.h</label>
      </node>
      <node id="3">
        <label>zutil.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="var">
      <memberdef kind="variable" id="sevetest30___i_w_e_d_a_8c_1a133d5084d12e7ff3fd5f9241628b1e06" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char http_get_out_buf[HTTP_BUF_MAX]</definition>
        <argsstring>[HTTP_BUF_MAX]</argsstring>
        <name>http_get_out_buf</name>
        <initializer>= { 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_IWEDA.c" line="63" column="6" bodyfile="main/sevetest30_IWEDA.c" bodystart="63" bodyend="63"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___i_w_e_d_a_8c_1a2059450556bc82366d96a332d68881bf" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char http_get_url_buf[HTTP_BUF_MAX]</definition>
        <argsstring>[HTTP_BUF_MAX]</argsstring>
        <name>http_get_url_buf</name>
        <initializer>= { 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_IWEDA.c" line="64" column="6" bodyfile="main/sevetest30_IWEDA.c" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___i_w_e_d_a_8c_1a43cfeffd1fd4cfd457c5183f70d3cdaf" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* ip_address</definition>
        <argsstring></argsstring>
        <name>ip_address</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_IWEDA.c" line="65" column="6" bodyfile="main/sevetest30_IWEDA.c" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___i_w_e_d_a_8c_1a2b1df1a1a353073fa2f8db3dd6fe3f26" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* sevetest30_asr_result_tex</definition>
        <argsstring></argsstring>
        <name>sevetest30_asr_result_tex</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_IWEDA.c" line="67" column="6" bodyfile="main/sevetest30_IWEDA.c" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___i_w_e_d_a_8c_1ae874bcbe8211c4b22a94996c49debcc9" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* ERNIE_Bot_4_chat_result</definition>
        <argsstring></argsstring>
        <name>ERNIE_Bot_4_chat_result</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_IWEDA.c" line="68" column="6" bodyfile="main/sevetest30_IWEDA.c" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___i_w_e_d_a_8c_1a4718fd08964287860f61766475e96858" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* ERNIE_Bot_4_chat_user_content</definition>
        <argsstring></argsstring>
        <name>ERNIE_Bot_4_chat_user_content</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_IWEDA.c" line="69" column="6" bodyfile="main/sevetest30_IWEDA.c" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___i_w_e_d_a_8c_1ac7bb61d4f7ba5faf047aa01bbf89956f" prot="public" static="no" mutable="no">
        <type><ref refid="struct_real__time__weather" kindref="compound">Real_time_weather</ref> *</type>
        <definition>Real_time_weather* real_time_weather_data</definition>
        <argsstring></argsstring>
        <name>real_time_weather_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_IWEDA.c" line="71" column="19" bodyfile="main/sevetest30_IWEDA.c" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___i_w_e_d_a_8c_1aa9a1aac211eb71e3942f10b52638f904" prot="public" static="no" mutable="no">
        <type><ref refid="structip__position" kindref="compound">ip_position</ref> *</type>
        <definition>ip_position* ip_position_data</definition>
        <argsstring></argsstring>
        <name>ip_position_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_IWEDA.c" line="72" column="13" bodyfile="main/sevetest30_IWEDA.c" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___i_w_e_d_a_8c_1aa5158a4156168970051fa2d9d2f428ea" prot="public" static="no" mutable="no">
        <type>esp_http_client_handle_t</type>
        <definition>esp_http_client_handle_t http_get_handle</definition>
        <argsstring></argsstring>
        <name>http_get_handle</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_IWEDA.c" line="74" column="26" bodyfile="main/sevetest30_IWEDA.c" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___i_w_e_d_a_8c_1acc57b1fb678068603324cf957c2e4cc9" prot="public" static="no" mutable="no">
        <type>esp_periph_handle_t</type>
        <definition>esp_periph_handle_t se30_wifi_periph_handle</definition>
        <argsstring></argsstring>
        <name>se30_wifi_periph_handle</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_IWEDA.c" line="75" column="21" bodyfile="main/sevetest30_IWEDA.c" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sevetest30___i_w_e_d_a_8c_1aae31c687cd82dc52352b25eee3055227" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char baidu_ERNIE_Bot_access_token[ACCESSTOKEN_SIZE_MAX]</definition>
        <argsstring>[ACCESSTOKEN_SIZE_MAX]</argsstring>
        <name>baidu_ERNIE_Bot_access_token</name>
        <initializer>= { 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_IWEDA.c" line="77" column="6" bodyfile="main/sevetest30_IWEDA.c" bodystart="77" bodyend="77"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="sevetest30___i_w_e_d_a_8c_1a7e37a9a731dbc6ae76209c2bf82d6ed9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void transform_ip_address</definition>
        <argsstring>()</argsstring>
        <name>transform_ip_address</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_IWEDA.c" line="519" column="6" bodyfile="main/sevetest30_IWEDA.c" bodystart="519" bodyend="587" declfile="main/sevetest30_IWEDA.c" declline="79" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="sevetest30___i_w_e_d_a_8c_1a9e45a7edd8edbe3b4a405d4bb66ec91e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void transform_postcode</definition>
        <argsstring>()</argsstring>
        <name>transform_postcode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_IWEDA.c" line="589" column="6" bodyfile="main/sevetest30_IWEDA.c" bodystart="589" bodyend="615" declfile="main/sevetest30_IWEDA.c" declline="80" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="sevetest30___i_w_e_d_a_8c_1a4ee1c1d994236e8eee7199baae486b01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void transform_lng_lat</definition>
        <argsstring>()</argsstring>
        <name>transform_lng_lat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_IWEDA.c" line="617" column="6" bodyfile="main/sevetest30_IWEDA.c" bodystart="617" bodyend="637" declfile="main/sevetest30_IWEDA.c" declline="81" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="sevetest30___i_w_e_d_a_8c_1aec9ce0a4f817dcba7dbf0729d0d7449a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void transform_locationID</definition>
        <argsstring>()</argsstring>
        <name>transform_locationID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_IWEDA.c" line="639" column="6" bodyfile="main/sevetest30_IWEDA.c" bodystart="639" bodyend="667" declfile="main/sevetest30_IWEDA.c" declline="82" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="sevetest30___i_w_e_d_a_8c_1a1f7f523937b41549158ede27ddeb6550" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void transform_real_time_weather_data</definition>
        <argsstring>()</argsstring>
        <name>transform_real_time_weather_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_IWEDA.c" line="669" column="6" bodyfile="main/sevetest30_IWEDA.c" bodystart="669" bodyend="724" declfile="main/sevetest30_IWEDA.c" declline="83" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="sevetest30___i_w_e_d_a_8c_1a1a05edcb6723e4f73dc2cebf30b86ba1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>esp_err_t wifi_init</definition>
        <argsstring>(esp_periph_config_t *periph_config)</argsstring>
        <name>wifi_init</name>
        <param>
          <type>esp_periph_config_t *</type>
          <declname>periph_config</declname>
        </param>
        <briefdescription>
<para>WIFI外设初始化 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>periph_config</parametername>
</parameternamelist>
<parameterdescription>
<para>网络外设配置 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ESP_OK / ESP_FAIL </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_IWEDA.c" line="89" column="11" bodyfile="main/sevetest30_IWEDA.c" bodystart="89" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="sevetest30___i_w_e_d_a_8c_1a692bbc21a4fc6fbd33865a0f9e21be79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>esp_err_t wifi_connect</definition>
        <argsstring>(periph_wifi_cfg_t *wifi_cfg)</argsstring>
        <name>wifi_connect</name>
        <param>
          <type>periph_wifi_cfg_t *</type>
          <declname>wifi_cfg</declname>
        </param>
        <briefdescription>
<para>通用网络连接函数 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>wifi_cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>网络配置,要连接的网络SSID和密码必填 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ESP_OK / ESP_FAIL </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_IWEDA.c" line="111" column="11" bodyfile="main/sevetest30_IWEDA.c" bodystart="111" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="sevetest30___i_w_e_d_a_8c_1aec71d466f36992a2eba45408ef193056" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>esp_err_t baidu_get_AccessToken</definition>
        <argsstring>(char *client_id, char *client_secret, char *AccessToken)</argsstring>
        <name>baidu_get_AccessToken</name>
        <param>
          <type>char *</type>
          <declname>client_id</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>client_secret</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>AccessToken</declname>
        </param>
        <briefdescription>
<para>百度API获取AccessToken,保存到char数组 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client_id</parametername>
</parameternamelist>
<parameterdescription>
<para>client_id 字符串 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>client_secret</parametername>
</parameternamelist>
<parameterdescription>
<para>client_secret 字符串 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>AccessToken</parametername>
</parameternamelist>
<parameterdescription>
<para>char数组地址 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ESP_FAIL / ESP_OK </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_IWEDA.c" line="136" column="11" bodyfile="main/sevetest30_IWEDA.c" bodystart="136" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="sevetest30___i_w_e_d_a_8c_1af968b606d4533f7eee5953cd5bda499b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void refresh_position_data</definition>
        <argsstring>()</argsstring>
        <name>refresh_position_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_IWEDA.c" line="183" column="6" bodyfile="main/sevetest30_IWEDA.c" bodystart="183" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="sevetest30___i_w_e_d_a_8c_1a71180d898510335fe528eb67d5ea6484" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void refresh_weather_data</definition>
        <argsstring>()</argsstring>
        <name>refresh_weather_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_IWEDA.c" line="234" column="6" bodyfile="main/sevetest30_IWEDA.c" bodystart="234" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="sevetest30___i_w_e_d_a_8c_1a219bd6694bce503b164a4c07c1ae896b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_time_data_sntp</definition>
        <argsstring>()</argsstring>
        <name>init_time_data_sntp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_IWEDA.c" line="248" column="6" bodyfile="main/sevetest30_IWEDA.c" bodystart="248" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="sevetest30___i_w_e_d_a_8c_1a1bf7359c50e40d51701bee3becfaf201" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int http_check_response_content</definition>
        <argsstring>(esp_http_client_handle_t client_handle)</argsstring>
        <name>http_check_response_content</name>
        <param>
          <type>esp_http_client_handle_t</type>
          <declname>client_handle</declname>
        </param>
        <briefdescription>
<para>检查响应内容 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>连接句柄 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ESP_OK 正确可用 否则返回 响应错误码 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_IWEDA.c" line="266" column="5" bodyfile="main/sevetest30_IWEDA.c" bodystart="266" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="sevetest30___i_w_e_d_a_8c_1a87dac3e875ff547b5217b6b5f1f7f59d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int http_check_common_url</definition>
        <argsstring>(const char *url)</argsstring>
        <name>http_check_common_url</name>
        <param>
          <type>const char *</type>
          <declname>url</declname>
        </param>
        <briefdescription>
<para>检测URL的可用性，进行针对如音频资源的可用检查而无其他复杂上下文 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>url</parametername>
</parameternamelist>
<parameterdescription>
<para>需要检测的URL </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ESP_FAIL 无法连接 ESP_OK 正确可用 否则返回 响应错误码 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_IWEDA.c" line="297" column="5" bodyfile="main/sevetest30_IWEDA.c" bodystart="297" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="sevetest30___i_w_e_d_a_8c_1ab9c17de9ad3e974ac5dbcfa04b69aa17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void http_init_get_request</definition>
        <argsstring>()</argsstring>
        <name>http_init_get_request</name>
        <briefdescription>
<para>初始化GET请求 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_IWEDA.c" line="325" column="6" bodyfile="main/sevetest30_IWEDA.c" bodystart="325" bodyend="345"/>
      </memberdef>
      <memberdef kind="function" id="sevetest30___i_w_e_d_a_8c_1a028a26229a83f29f38df40c82a3715c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void http_get_request_send</definition>
        <argsstring>(bool *flag)</argsstring>
        <name>http_get_request_send</name>
        <param>
          <type>bool *</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_IWEDA.c" line="352" column="6" bodyfile="main/sevetest30_IWEDA.c" bodystart="352" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="sevetest30___i_w_e_d_a_8c_1a4d019480577b2ef75c99737c66688672" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gzip_decompress</definition>
        <argsstring>(void *input, void *output, int len)</argsstring>
        <name>gzip_decompress</name>
        <param>
          <type>void *</type>
          <declname>input</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_IWEDA.c" line="388" column="6" bodyfile="main/sevetest30_IWEDA.c" bodystart="388" bodyend="428"/>
      </memberdef>
      <memberdef kind="function" id="sevetest30___i_w_e_d_a_8c_1ae582dc867f61fa36c8cc9e243b0bbed6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int json_line_unit_num_get</definition>
        <argsstring>(char *data, int len)</argsstring>
        <name>json_line_unit_num_get</name>
        <param>
          <type>char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>获取JSON_Line数据中的有效数据单元个数 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>要扫描的JSON_Line数据字符串或字符数组首地址 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>要扫描的字符长度 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>合法的数据单元个数 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_IWEDA.c" line="435" column="5" bodyfile="main/sevetest30_IWEDA.c" bodystart="435" bodyend="468"/>
      </memberdef>
      <memberdef kind="function" id="sevetest30___i_w_e_d_a_8c_1ac1e58ef555264a706495314a1247c464" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void json_line_unit_copy</definition>
        <argsstring>(char *dest, char *src, int unit_id, int max_len)</argsstring>
        <name>json_line_unit_copy</name>
        <param>
          <type>char *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>int</type>
          <declname>unit_id</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max_len</declname>
        </param>
        <briefdescription>
<para>选定JSON_Line数据中的一个数据单元复制到外部字符缓存区 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dest</parametername>
</parameternamelist>
<parameterdescription>
<para>外部字符缓存区,需要在外部函数提前申请好连续内存 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>JSON_Line格式源数据字符串 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unit_id</parametername>
</parameternamelist>
<parameterdescription>
<para>选定复制的数据单元ID,第一个单元为0,第二个单元为1.... </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_len</parametername>
</parameternamelist>
<parameterdescription>
<para>最多复制max_len个字符 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_IWEDA.c" line="475" column="6" bodyfile="main/sevetest30_IWEDA.c" bodystart="475" bodyend="516"/>
      </memberdef>
      <memberdef kind="function" id="sevetest30___i_w_e_d_a_8c_1a6713306ef66b3a5f97efaade9ef65706" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ERNIE_Bot_4_chat_transform</definition>
        <argsstring>(char *chat_response)</argsstring>
        <name>ERNIE_Bot_4_chat_transform</name>
        <param>
          <type>char *</type>
          <declname>chat_response</declname>
        </param>
        <briefdescription>
<para>解析百度文心一言 ERNIE-Bot 4.0 返回的数据(单个json格式数据/[流式传输]JSON_Line数据中的一个数据单元)，缓存识别结果追加到 ERNIE_Bot_4_chat_result(自动申请内存) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>chat_response</parametername>
</parameternamelist>
<parameterdescription>
<para>单个json格式数据/[流式传输]JSON_Line数据中的一个数据单元 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_IWEDA.c" line="729" column="6" bodyfile="main/sevetest30_IWEDA.c" bodystart="729" bodyend="763"/>
      </memberdef>
      <memberdef kind="function" id="sevetest30___i_w_e_d_a_8c_1a5b4a89294fdd0ea7d8b14eae9cc14a58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ERNIE_Bot_4_chat_over_status</definition>
        <argsstring>(char *chat_response)</argsstring>
        <name>ERNIE_Bot_4_chat_over_status</name>
        <param>
          <type>char *</type>
          <declname>chat_response</declname>
        </param>
        <briefdescription>
<para>根据百度文心一言 ERNIE-Bot 4.0 返回的数据(单个json格式数据/[流式传输]JSON_Line数据中的一个数据单元) 获取聊天传输状态是否结束 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>chat_response</parametername>
</parameternamelist>
<parameterdescription>
<para>单个json格式数据/[流式传输]JSON_Line数据中的一个数据单元 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true 结束 / false 进行中(或者错误) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_IWEDA.c" line="768" column="5" bodyfile="main/sevetest30_IWEDA.c" bodystart="768" bodyend="791"/>
      </memberdef>
      <memberdef kind="function" id="sevetest30___i_w_e_d_a_8c_1a3cd770bd0608c2ae8ff52ff4728ee04d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ERNIE_Bot_4_chat_http_Task</definition>
        <argsstring>(bool *flag)</argsstring>
        <name>ERNIE_Bot_4_chat_http_Task</name>
        <param>
          <type>bool *</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
<para>ERNIE-4.0聊天传输任务,使用POST请求 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>flag</parametername>
</parameternamelist>
<parameterdescription>
<para>传入flag来确定任务是否结束（结束为true，也有可能是非正常的结束） </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_IWEDA.c" line="795" column="6" bodyfile="main/sevetest30_IWEDA.c" bodystart="795" bodyend="975"/>
      </memberdef>
      <memberdef kind="function" id="sevetest30___i_w_e_d_a_8c_1a8b985c45f6a665a338a423b498bbdb9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * ERNIE_Bot_4_chat_tex_exchange</definition>
        <argsstring>(char *user_content)</argsstring>
        <name>ERNIE_Bot_4_chat_tex_exchange</name>
        <param>
          <type>char *</type>
          <declname>user_content</declname>
        </param>
        <briefdescription>
<para>文心一言ERNIE-Bot 4.0文本对话 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>user_content</parametername>
</parameternamelist>
<parameterdescription>
<para>用户内容 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>对话返回结果/NULL(错误) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_IWEDA.c" line="980" column="6" bodyfile="main/sevetest30_IWEDA.c" bodystart="980" bodyend="1011"/>
      </memberdef>
      <memberdef kind="function" id="sevetest30___i_w_e_d_a_8c_1aea77672640e2d57865fcd3e7c26dc4b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void asr_data_save_result</definition>
        <argsstring>(char *asr_response)</argsstring>
        <name>asr_data_save_result</name>
        <param>
          <type>char *</type>
          <declname>asr_response</declname>
        </param>
        <briefdescription>
<para>解析百度语音识别响应的数据，缓存识别结果到 asr_result_tex </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>asr_response</parametername>
</parameternamelist>
<parameterdescription>
<para>语音识别响应的数据 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_IWEDA.c" line="1016" column="6" bodyfile="main/sevetest30_IWEDA.c" bodystart="1016" bodyend="1059"/>
      </memberdef>
      <memberdef kind="function" id="sevetest30___i_w_e_d_a_8c_1a13078dc6808f00e12a3e2625fe21f8f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>esp_err_t get_music_lyric_by_url</definition>
        <argsstring>(char *url, char *dest, int len_max)</argsstring>
        <name>get_music_lyric_by_url</name>
        <param>
          <type>char *</type>
          <declname>url</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len_max</declname>
        </param>
        <briefdescription>
<para>通过特定URL提取json数据中音乐歌词(LRC格式数据) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>url</parametername>
</parameternamelist>
<parameterdescription>
<para>获取音乐歌词使用的完整URL </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dest</parametername>
</parameternamelist>
<parameterdescription>
<para>读取保存到的位置 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len_max</parametername>
</parameternamelist>
<parameterdescription>
<para>最大允许保存的字符长度 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/sevetest30_IWEDA.c" line="1066" column="11" bodyfile="main/sevetest30_IWEDA.c" bodystart="1066" bodyend="1096"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>701Enti<sp/>MIT<sp/>License</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>©<sp/>2024<sp/>&lt;701Enti<sp/>organization&gt;</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>“Software”),</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>“AS<sp/>IS”,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR<sp/>IMPLIED,</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>该文件归属701Enti组织，SEVETEST30开发团队应该提供责任性维护，包含一些sevetest30的<sp/><sp/>互联网环境中<sp/><sp/>数据获取（IWEDA）</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>如您发现一些问题，请及时联系我们，我们非常感谢您的支持</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>附加<sp/>1<sp/><sp/>github<sp/>-<sp/>zlib项目<sp/>链接<sp/>https://github.com/madler/zlib</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>2<sp/><sp/>和风天气API开发文档：<sp/><sp/><sp/>https://dev.qweather.com/docs/api</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>敬告：有效的数据存储变量都封装在该库下，不需要在外部函数定义一个数据结构体缓存作为参数，直接读取公共变量，主要为了方便FreeRTOS的任务支持</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>github:<sp/>https://github.com/701Enti</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>bilibili:<sp/>701Enti</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;zlib.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;zutil.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;inftrees.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;inflate.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;freertos/FreeRTOS.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;freertos/task.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sevetest30___i_w_e_d_a_8h" kindref="compound">sevetest30_IWEDA.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sevetest30__sound_8h" kindref="compound">sevetest30_sound.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;baidu_access_token.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;esp_log.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;esp_wifi.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nvs_flash.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;sdkconfig.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;esp_sntp.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;periph_wifi.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="board_8h" kindref="compound">board.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="board__ctrl_8h" kindref="compound">board_ctrl.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cjson.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;audio_idf_version.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(ESP_IDF_VERSION<sp/>&gt;=<sp/>ESP_IDF_VERSION_VAL(4,<sp/>1,<sp/>0))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;esp_netif.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tcpip_adapter.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="sevetest30___i_w_e_d_a_8h_1a133d5084d12e7ff3fd5f9241628b1e06" kindref="member">http_get_out_buf</ref>[<ref refid="sevetest30___i_w_e_d_a_8h_1a39df150cec693d7e56c68ce387ed6517" kindref="member">HTTP_BUF_MAX</ref>]<sp/>=<sp/>{<sp/>0<sp/>};<sp/></highlight><highlight class="comment">//<sp/>输出数据缓存</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="sevetest30___i_w_e_d_a_8h_1a2059450556bc82366d96a332d68881bf" kindref="member">http_get_url_buf</ref>[<ref refid="sevetest30___i_w_e_d_a_8h_1a39df150cec693d7e56c68ce387ed6517" kindref="member">HTTP_BUF_MAX</ref>]<sp/>=<sp/>{<sp/>0<sp/>};<sp/></highlight><highlight class="comment">//<sp/>url缓存,留着调用时候可以用</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1a43cfeffd1fd4cfd457c5183f70d3cdaf" kindref="member">ip_address</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>公网IP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1a2b1df1a1a353073fa2f8db3dd6fe3f26" kindref="member">sevetest30_asr_result_tex</ref><sp/>=<sp/>NULL;<sp/></highlight><highlight class="comment">//<sp/>语音识别结果</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="sevetest30___i_w_e_d_a_8c_1ae874bcbe8211c4b22a94996c49debcc9" kindref="member">ERNIE_Bot_4_chat_result</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="sevetest30___i_w_e_d_a_8c_1a4718fd08964287860f61766475e96858" kindref="member">ERNIE_Bot_4_chat_user_content</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><ref refid="struct_real__time__weather" kindref="compound">Real_time_weather</ref>*<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1ac7bb61d4f7ba5faf047aa01bbf89956f" kindref="member">real_time_weather_data</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><ref refid="structip__position" kindref="compound">ip_position</ref>*<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1aa9a1aac211eb71e3942f10b52638f904" kindref="member">ip_position_data</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal">esp_http_client_handle_t<sp/><ref refid="sevetest30___i_w_e_d_a_8c_1aa5158a4156168970051fa2d9d2f428ea" kindref="member">http_get_handle</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="75"><highlight class="normal">esp_periph_handle_t<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1acc57b1fb678068603324cf957c2e4cc9" kindref="member">se30_wifi_periph_handle</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="sevetest30___i_w_e_d_a_8c_1aae31c687cd82dc52352b25eee3055227" kindref="member">baidu_ERNIE_Bot_access_token</ref>[<ref refid="sevetest30___i_w_e_d_a_8h_1ab8f59cf8e85982e5f25ab7974f6f280e" kindref="member">ACCESSTOKEN_SIZE_MAX</ref>]<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sevetest30___i_w_e_d_a_8c_1a7e37a9a731dbc6ae76209c2bf82d6ed9" kindref="member">transform_ip_address</ref>();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sevetest30___i_w_e_d_a_8c_1a9e45a7edd8edbe3b4a405d4bb66ec91e" kindref="member">transform_postcode</ref>();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sevetest30___i_w_e_d_a_8c_1a4ee1c1d994236e8eee7199baae486b01" kindref="member">transform_lng_lat</ref>();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sevetest30___i_w_e_d_a_8c_1aec9ce0a4f817dcba7dbf0729d0d7449a" kindref="member">transform_locationID</ref>();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sevetest30___i_w_e_d_a_8c_1a1f7f523937b41549158ede27ddeb6550" kindref="member">transform_real_time_weather_data</ref>();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal">esp_err_t<sp/><ref refid="sevetest30___i_w_e_d_a_8c_1a1a05edcb6723e4f73dc2cebf30b86ba1" kindref="member">wifi_init</ref>(esp_periph_config_t*<sp/>periph_config)</highlight></codeline>
<codeline lineno="90"><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_err_t<sp/>ret<sp/>=<sp/>nvs_flash_init();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>==<sp/>ESP_ERR_NVS_NO_FREE_PAGES<sp/>||<sp/>ret<sp/>==<sp/>ESP_ERR_NVS_NEW_VERSION_FOUND)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_ERROR_CHECK(nvs_flash_erase());</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>nvs_flash_init();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ERROR_CHECK(ret);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>初始化TCP/IP协议栈</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>esp_netif_init();</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>初始化网络外设</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno=CONFIG_WIFI_SSID><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="board__ctrl_8h_1aeaaf905f04464312cce03723cf3a9307" kindref="member">se30_periph_set_handle</ref><sp/>=<sp/>esp_periph_set_init(periph_config);<sp/></highlight><highlight class="comment">//<sp/>获取运行配置句柄</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal">esp_err_t<sp/><ref refid="sevetest30___i_w_e_d_a_8c_1a692bbc21a4fc6fbd33865a0f9e21be79" kindref="member">wifi_connect</ref>(periph_wifi_cfg_t*<sp/>wifi_cfg)</highlight></codeline>
<codeline lineno="112"><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;wifi_connect&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="board__ctrl_8h_1aeaaf905f04464312cce03723cf3a9307" kindref="member">se30_periph_set_handle</ref>)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;初始化工作未完成&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_FAIL;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="sevetest30___i_w_e_d_a_8h_1acc57b1fb678068603324cf957c2e4cc9" kindref="member">se30_wifi_periph_handle</ref>)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;上次的WIFI句柄未有效删除,无法连接&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_FAIL;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sevetest30___i_w_e_d_a_8h_1acc57b1fb678068603324cf957c2e4cc9" kindref="member">se30_wifi_periph_handle</ref><sp/>=<sp/>periph_wifi_init(wifi_cfg);<sp/></highlight><highlight class="comment">//<sp/>获取wifi配置句柄</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_periph_start(<ref refid="board__ctrl_8h_1aeaaf905f04464312cce03723cf3a9307" kindref="member">se30_periph_set_handle</ref>,<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1acc57b1fb678068603324cf957c2e4cc9" kindref="member">se30_wifi_periph_handle</ref>);</highlight><highlight class="comment">//<sp/>启动连接任务</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>periph_wifi_wait_for_connected(<ref refid="sevetest30___i_w_e_d_a_8h_1acc57b1fb678068603324cf957c2e4cc9" kindref="member">se30_wifi_periph_handle</ref>,<sp/>pdMS_TO_TICKS(<ref refid="sevetest30___i_w_e_d_a_8h_1a269a6cfad0972318bcd4766eb6a1d7f2" kindref="member">WIFI_CONNECT_TIMEOUT_MS</ref>));</highlight><highlight class="comment">//请求连接</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal">esp_err_t<sp/><ref refid="sevetest30___i_w_e_d_a_8c_1aec71d466f36992a2eba45408ef193056" kindref="member">baidu_get_AccessToken</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>client_id,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>client_secret,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>AccessToken)</highlight></codeline>
<codeline lineno="137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;baidu_get_AccessToken&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!AccessToken)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;需要导入一个char数组的地址,而导入的为空指针&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_FAIL;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(periph_wifi_is_connected(<ref refid="sevetest30___i_w_e_d_a_8h_1acc57b1fb678068603324cf957c2e4cc9" kindref="member">se30_wifi_periph_handle</ref>)<sp/>!=<sp/>PERIPH_WIFI_CONNECTED)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;网络未连接&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_FAIL;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//发送请求</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Task_comp_flag<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>任务是否完成标识</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>snprintf(<ref refid="sevetest30___i_w_e_d_a_8h_1a2059450556bc82366d96a332d68881bf" kindref="member">http_get_url_buf</ref>,<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1a39df150cec693d7e56c68ce387ed6517" kindref="member">HTTP_BUF_MAX</ref>,<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1a9dc0000ff2d22af637f0d6c2b9811d27" kindref="member">BAIDU_GET_ACCESS_TOKEN_URL</ref>,<sp/>client_id,<sp/>client_secret);<sp/></highlight><highlight class="comment">//<sp/>确定请求URL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sevetest30___i_w_e_d_a_8c_1ab9c17de9ad3e974ac5dbcfa04b69aa17" kindref="member">http_init_get_request</ref>();</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_http_client_set_timeout_ms(<ref refid="sevetest30___i_w_e_d_a_8c_1aa5158a4156168970051fa2d9d2f428ea" kindref="member">http_get_handle</ref>,<sp/>10000);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>xTaskCreatePinnedToCore(&amp;<ref refid="sevetest30___i_w_e_d_a_8h_1a028a26229a83f29f38df40c82a3715c1" kindref="member">http_get_request_send</ref>,<sp/></highlight><highlight class="stringliteral">&quot;http_get_request_send&quot;</highlight><highlight class="normal">,<sp/>8192,<sp/>&amp;Task_comp_flag,<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1a770e0b83bbde8146c2a2d75380e1e338" kindref="member">HTTP_TASK_PRIO</ref>,<sp/>NULL,<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1a9df4f6c1214f4106dd604d535b4c9175" kindref="member">HTTP_TASK_CORE</ref>);<sp/></highlight><highlight class="comment">//<sp/>启动http传输任务,GET方式</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!Task_comp_flag)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(200));</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//检查是否得到请求响应的结果</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcasecmp(<ref refid="sevetest30___i_w_e_d_a_8h_1a133d5084d12e7ff3fd5f9241628b1e06" kindref="member">http_get_out_buf</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_FAIL;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//解析数据</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cJSON*<sp/>root_data<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>root_data<sp/>=<sp/>cJSON_Parse(<ref refid="sevetest30___i_w_e_d_a_8h_1a133d5084d12e7ff3fd5f9241628b1e06" kindref="member">http_get_out_buf</ref>);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cJSON*<sp/>cjson_AccessToken<sp/>=<sp/>cJSON_GetObjectItem(root_data,<sp/></highlight><highlight class="stringliteral">&quot;access_token&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(AccessToken,<sp/>0,<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1ab8f59cf8e85982e5f25ab7974f6f280e" kindref="member">ACCESSTOKEN_SIZE_MAX</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));</highlight><highlight class="comment">//清空之前的存储</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(AccessToken,<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1ab8f59cf8e85982e5f25ab7974f6f280e" kindref="member">ACCESSTOKEN_SIZE_MAX</ref>,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>cjson_AccessToken-&gt;valuestring);</highlight><highlight class="comment">//复制AccessToken</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cJSON_Delete(root_data);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="comment">//<sp/>封装好的网络信息API请求服务，包含信息解析，并存储到对应结构体或缓冲变量</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="comment">//<sp/>刷新位置数据</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sevetest30___i_w_e_d_a_8c_1af968b606d4533f7eee5953cd5bda499b" kindref="member">refresh_position_data</ref>()</highlight></codeline>
<codeline lineno="184"><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Task_comp_flag<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>任务是否完成标识</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>获取公网IP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>Task_comp_flag<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(<ref refid="sevetest30___i_w_e_d_a_8h_1a2059450556bc82366d96a332d68881bf" kindref="member">http_get_url_buf</ref>,<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1a0e4661963ffaccf90c84b7c5726a64cf" kindref="member">GET_IP_ADDRESS_API_URL</ref>);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sevetest30___i_w_e_d_a_8c_1ab9c17de9ad3e974ac5dbcfa04b69aa17" kindref="member">http_init_get_request</ref>();</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>xTaskCreatePinnedToCore(&amp;<ref refid="sevetest30___i_w_e_d_a_8h_1a028a26229a83f29f38df40c82a3715c1" kindref="member">http_get_request_send</ref>,<sp/></highlight><highlight class="stringliteral">&quot;http_get_request_send&quot;</highlight><highlight class="normal">,<sp/>8192,<sp/>&amp;Task_comp_flag,<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1a770e0b83bbde8146c2a2d75380e1e338" kindref="member">HTTP_TASK_PRIO</ref>,<sp/>NULL,<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1a9df4f6c1214f4106dd604d535b4c9175" kindref="member">HTTP_TASK_CORE</ref>);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!Task_comp_flag)</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(200));</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sevetest30___i_w_e_d_a_8c_1a7e37a9a731dbc6ae76209c2bf82d6ed9" kindref="member">transform_ip_address</ref>();</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>获取IP归属地邮政编码</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>Task_comp_flag<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>snprintf(<ref refid="sevetest30___i_w_e_d_a_8h_1a2059450556bc82366d96a332d68881bf" kindref="member">http_get_url_buf</ref>,<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1a39df150cec693d7e56c68ce387ed6517" kindref="member">HTTP_BUF_MAX</ref>,<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1a715e1e200ca54e6d976e4b3c285042ff" kindref="member">IP_POSITION_API_URL</ref>,<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1a43cfeffd1fd4cfd457c5183f70d3cdaf" kindref="member">ip_address</ref>);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sevetest30___i_w_e_d_a_8c_1ab9c17de9ad3e974ac5dbcfa04b69aa17" kindref="member">http_init_get_request</ref>();</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_http_client_set_header(<ref refid="sevetest30___i_w_e_d_a_8c_1aa5158a4156168970051fa2d9d2f428ea" kindref="member">http_get_handle</ref>,<sp/></highlight><highlight class="stringliteral">&quot;token&quot;</highlight><highlight class="normal">,<sp/><ref refid="build_2config_2sdkconfig_8h_1a95ac9b4be7fc9d9980d9f818a9b2930f" kindref="member">CONFIG_IP_138_TOKEN</ref>);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>xTaskCreatePinnedToCore(&amp;<ref refid="sevetest30___i_w_e_d_a_8h_1a028a26229a83f29f38df40c82a3715c1" kindref="member">http_get_request_send</ref>,<sp/></highlight><highlight class="stringliteral">&quot;http_get_request_send&quot;</highlight><highlight class="normal">,<sp/>8192,<sp/>&amp;Task_comp_flag,<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1a770e0b83bbde8146c2a2d75380e1e338" kindref="member">HTTP_TASK_PRIO</ref>,<sp/>NULL,<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1a9df4f6c1214f4106dd604d535b4c9175" kindref="member">HTTP_TASK_CORE</ref>);<sp/></highlight><highlight class="comment">//<sp/>启动http传输任务,GET方式</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!Task_comp_flag)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(200));</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sevetest30___i_w_e_d_a_8c_1a9e45a7edd8edbe3b4a405d4bb66ec91e" kindref="member">transform_postcode</ref>();</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ip_position_data.postcode<sp/>=<sp/>&quot;343100&quot;;//调试用,并将上面这块注释来避免调试时的花费</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>通过邮政编码获取经纬度以进行城市搜索</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>原因有三点</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1.cilent库似乎没有URL中文解码，在URL装载时出现错误</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2.IP138的API返回可能不包含&quot;县&quot;&quot;市&quot;等字，如此处返回的是两个吉安，因为这里县和市的名字一样被认定为模糊搜索，通过GeoAPI返回的是市里下级的所有县</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>3.邮政编码大概率直接对应一个县或区，并且IP138API网页还可找到一个免费还不用鉴权的&quot;行政区划&quot;查询服务，会返回一个经纬度，这是GeoAPI支持的搜索关键词</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>免费还不用鉴权的行政区划查询服务，支持多种关键词搜索：<sp/>https://quhua.ipchaxun.com/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>Task_comp_flag<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>snprintf(<ref refid="sevetest30___i_w_e_d_a_8h_1a2059450556bc82366d96a332d68881bf" kindref="member">http_get_url_buf</ref>,<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1a39df150cec693d7e56c68ce387ed6517" kindref="member">HTTP_BUF_MAX</ref>,<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1a71b468b280326474583ef5864f09ac92" kindref="member">TO_LNG_LAT_API_URL</ref>,<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1aa9a1aac211eb71e3942f10b52638f904" kindref="member">ip_position_data</ref>-&gt;postcode);<sp/></highlight><highlight class="comment">//<sp/>确定请求URL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sevetest30___i_w_e_d_a_8c_1ab9c17de9ad3e974ac5dbcfa04b69aa17" kindref="member">http_init_get_request</ref>();</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>xTaskCreatePinnedToCore(&amp;<ref refid="sevetest30___i_w_e_d_a_8h_1a028a26229a83f29f38df40c82a3715c1" kindref="member">http_get_request_send</ref>,<sp/></highlight><highlight class="stringliteral">&quot;http_get_request_send&quot;</highlight><highlight class="normal">,<sp/>8192,<sp/>&amp;Task_comp_flag,<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1a770e0b83bbde8146c2a2d75380e1e338" kindref="member">HTTP_TASK_PRIO</ref>,<sp/>NULL,<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1a9df4f6c1214f4106dd604d535b4c9175" kindref="member">HTTP_TASK_CORE</ref>);<sp/></highlight><highlight class="comment">//<sp/>启动http传输任务,GET方式</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!Task_comp_flag)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(200));</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sevetest30___i_w_e_d_a_8c_1a4ee1c1d994236e8eee7199baae486b01" kindref="member">transform_lng_lat</ref>();</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>城市搜索，获取locationID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>Task_comp_flag<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>snprintf(<ref refid="sevetest30___i_w_e_d_a_8h_1a2059450556bc82366d96a332d68881bf" kindref="member">http_get_url_buf</ref>,<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1a39df150cec693d7e56c68ce387ed6517" kindref="member">HTTP_BUF_MAX</ref>,<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1a9582df33d302f976016b6ad5cdab04dc" kindref="member">GEO_API_URL</ref>,<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1aa9a1aac211eb71e3942f10b52638f904" kindref="member">ip_position_data</ref>-&gt;lng,<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1aa9a1aac211eb71e3942f10b52638f904" kindref="member">ip_position_data</ref>-&gt;lat,<sp/><ref refid="build_2config_2sdkconfig_8h_1a4274de2e01afcef13a625fdff53f57d2" kindref="member">CONFIG_WEATHER_API_KEY</ref>);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sevetest30___i_w_e_d_a_8c_1ab9c17de9ad3e974ac5dbcfa04b69aa17" kindref="member">http_init_get_request</ref>();</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>xTaskCreatePinnedToCore(&amp;<ref refid="sevetest30___i_w_e_d_a_8h_1a028a26229a83f29f38df40c82a3715c1" kindref="member">http_get_request_send</ref>,<sp/></highlight><highlight class="stringliteral">&quot;http_get_request_send&quot;</highlight><highlight class="normal">,<sp/>8192,<sp/>&amp;Task_comp_flag,<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1a770e0b83bbde8146c2a2d75380e1e338" kindref="member">HTTP_TASK_PRIO</ref>,<sp/>NULL,<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1a9df4f6c1214f4106dd604d535b4c9175" kindref="member">HTTP_TASK_CORE</ref>);<sp/></highlight><highlight class="comment">//<sp/>启动http传输任务,GET方式</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!Task_comp_flag)</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(200));</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sevetest30___i_w_e_d_a_8c_1aec9ce0a4f817dcba7dbf0729d0d7449a" kindref="member">transform_locationID</ref>();</highlight></codeline>
<codeline lineno="231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="comment">//<sp/>刷新天气数据</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sevetest30___i_w_e_d_a_8c_1a71180d898510335fe528eb67d5ea6484" kindref="member">refresh_weather_data</ref>()</highlight></codeline>
<codeline lineno="235"><highlight class="normal">{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Task_comp_flag<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>任务是否完成标识</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>snprintf(<ref refid="sevetest30___i_w_e_d_a_8h_1a2059450556bc82366d96a332d68881bf" kindref="member">http_get_url_buf</ref>,<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1a39df150cec693d7e56c68ce387ed6517" kindref="member">HTTP_BUF_MAX</ref>,<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1a982701b2e255313bdb8dca477131a5a7" kindref="member">WEATHER_API_URL</ref>,<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1aa9a1aac211eb71e3942f10b52638f904" kindref="member">ip_position_data</ref>-&gt;id,<sp/><ref refid="build_2config_2sdkconfig_8h_1a4274de2e01afcef13a625fdff53f57d2" kindref="member">CONFIG_WEATHER_API_KEY</ref>);<sp/></highlight><highlight class="comment">//<sp/>确定请求URL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sevetest30___i_w_e_d_a_8c_1ab9c17de9ad3e974ac5dbcfa04b69aa17" kindref="member">http_init_get_request</ref>();</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>xTaskCreatePinnedToCore(&amp;<ref refid="sevetest30___i_w_e_d_a_8h_1a028a26229a83f29f38df40c82a3715c1" kindref="member">http_get_request_send</ref>,<sp/></highlight><highlight class="stringliteral">&quot;http_get_request_send&quot;</highlight><highlight class="normal">,<sp/>8192,<sp/>&amp;Task_comp_flag,<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1a770e0b83bbde8146c2a2d75380e1e338" kindref="member">HTTP_TASK_PRIO</ref>,<sp/>NULL,<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1a9df4f6c1214f4106dd604d535b4c9175" kindref="member">HTTP_TASK_CORE</ref>);<sp/></highlight><highlight class="comment">//<sp/>启动http传输任务,GET方式</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!Task_comp_flag)</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(200));</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sevetest30___i_w_e_d_a_8c_1a1f7f523937b41549158ede27ddeb6550" kindref="member">transform_real_time_weather_data</ref>();</highlight></codeline>
<codeline lineno="243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="comment">//<sp/>初始化系统时间数据,sntp方式</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="comment">//<sp/>调用这个函数后，系统需要等待NTP服务器响应</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="comment">//<sp/>测试发现默认使用的NTP需要调用完成后3到4秒完成更新</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sevetest30___i_w_e_d_a_8c_1a219bd6694bce503b164a4c07c1ae896b" kindref="member">init_time_data_sntp</ref>()</highlight></codeline>
<codeline lineno="249"><highlight class="normal">{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(periph_wifi_is_connected(<ref refid="sevetest30___i_w_e_d_a_8h_1acc57b1fb678068603324cf957c2e4cc9" kindref="member">se30_wifi_periph_handle</ref>)<sp/>!=<sp/>PERIPH_WIFI_CONNECTED)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(</highlight><highlight class="stringliteral">&quot;http_init_get_request&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;网络未连接&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>调整方式参考了官方文档<sp/>https://docs.espressif.com/projects/esp-idf/zh_CN/release-v4.4/esp32/api-reference/system/system_time.html?highlight=time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_sntp_setoperatingmode(ESP_SNTP_OPMODE_POLL);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_sntp_setservername(0,<sp/><ref refid="build_2config_2sdkconfig_8h_1ab6d3f8f4b694c2e4a498d8d7e50a6eba" kindref="member">CONFIG_NTP_SERVER_0</ref>);<sp/></highlight><highlight class="comment">//<sp/>索引表示第0个，其NTP服务器名为</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_sntp_setservername(1,<sp/><ref refid="build_2config_2sdkconfig_8h_1abc9b51606fb1a109b797071b323b1706" kindref="member">CONFIG_NTP_SERVER_1</ref>);<sp/></highlight><highlight class="comment">//<sp/>索引表示第1个，其NTP服务器名为</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_sntp_setservername(2,<sp/><ref refid="build_2config_2sdkconfig_8h_1aee5ca7e88cc0379ebeeed0c9627a4dc1" kindref="member">CONFIG_NTP_SERVER_2</ref>);<sp/></highlight><highlight class="comment">//<sp/>索引表示第2个，其NTP服务器名为</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_sntp_init();</highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="sevetest30___i_w_e_d_a_8c_1a1bf7359c50e40d51701bee3becfaf201" kindref="member">http_check_response_content</ref>(esp_http_client_handle_t<sp/>client_handle)</highlight></codeline>
<codeline lineno="267"><highlight class="normal">{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;http_check_response_content&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_http_client_fetch_headers(client_handle);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>接收消息头</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>esp_http_client_get_status_code(client_handle);<sp/></highlight><highlight class="comment">//<sp/>获取消息头中的响应状态信息</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>esp_http_client_get_content_length(client_handle);<sp/></highlight><highlight class="comment">//<sp/>获取消息头中的总数据大小信息</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/>200)</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(esp_http_client_is_chunked_response(client_handle)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;本次传输响应数据已分块<sp/>但是处于不正常的响应状态<sp/>-&gt;<sp/>%d<sp/>数据将不会保存&quot;</highlight><highlight class="normal">,<sp/>status);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;不正常的响应状态<sp/>-&gt;<sp/>%d<sp/>共接收到<sp/>-&gt;<sp/>%d<sp/>数据将不会保存&quot;</highlight><highlight class="normal">,<sp/>status,<sp/>len);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(esp_http_client_is_chunked_response(client_handle)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;连接就绪，响应状态-&gt;<sp/>%d<sp/>,本次传输响应数据已分块&quot;</highlight><highlight class="normal">,<sp/>status);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;连接就绪，响应状态-&gt;<sp/>%d<sp/>，响应数据共<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>status,<sp/>len);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal">}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="sevetest30___i_w_e_d_a_8c_1a87dac3e875ff547b5217b6b5f1f7f59d" kindref="member">http_check_common_url</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>url)</highlight></codeline>
<codeline lineno="298"><highlight class="normal">{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;http_check_common_url&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>ESP_OK;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(periph_wifi_is_connected(<ref refid="sevetest30___i_w_e_d_a_8h_1acc57b1fb678068603324cf957c2e4cc9" kindref="member">se30_wifi_periph_handle</ref>)<sp/>!=<sp/>PERIPH_WIFI_CONNECTED)<sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(</highlight><highlight class="stringliteral">&quot;http_check_common_url&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;网络未连接&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_FAIL;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(<ref refid="sevetest30___i_w_e_d_a_8h_1a2059450556bc82366d96a332d68881bf" kindref="member">http_get_url_buf</ref>,<sp/>url);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sevetest30___i_w_e_d_a_8c_1ab9c17de9ad3e974ac5dbcfa04b69aa17" kindref="member">http_init_get_request</ref>();</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(esp_http_client_open(<ref refid="sevetest30___i_w_e_d_a_8c_1aa5158a4156168970051fa2d9d2f428ea" kindref="member">http_get_handle</ref>,<sp/>0)<sp/>!=<sp/>ESP_OK)</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;无法打开连接的URL<sp/>-&gt;<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>url);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>esp_http_client_cleanup(<ref refid="sevetest30___i_w_e_d_a_8c_1aa5158a4156168970051fa2d9d2f428ea" kindref="member">http_get_handle</ref>);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_FAIL;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>校验响应状态与数据</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="sevetest30___i_w_e_d_a_8c_1a1bf7359c50e40d51701bee3becfaf201" kindref="member">http_check_response_content</ref>(<ref refid="sevetest30___i_w_e_d_a_8c_1aa5158a4156168970051fa2d9d2f428ea" kindref="member">http_get_handle</ref>);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>!=<sp/>ESP_OK)ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;响应信息发现异常的URL<sp/>\n-&gt;<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>url);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_http_client_cleanup(<ref refid="sevetest30___i_w_e_d_a_8c_1aa5158a4156168970051fa2d9d2f428ea" kindref="member">http_get_handle</ref>);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="322"><highlight class="normal">}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sevetest30___i_w_e_d_a_8c_1ab9c17de9ad3e974ac5dbcfa04b69aa17" kindref="member">http_init_get_request</ref>()</highlight></codeline>
<codeline lineno="326"><highlight class="normal">{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(periph_wifi_is_connected(<ref refid="sevetest30___i_w_e_d_a_8h_1acc57b1fb678068603324cf957c2e4cc9" kindref="member">se30_wifi_periph_handle</ref>)<sp/>!=<sp/>PERIPH_WIFI_CONNECTED)<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(</highlight><highlight class="stringliteral">&quot;http_init_get_request&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;网络未连接&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>配置http传输信息</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_http_client_config_t<sp/>http_config;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;http_config,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(http_config));<sp/></highlight><highlight class="comment">//<sp/>对参数初始化为0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>http_config.url<sp/>=<sp/>&amp;<ref refid="sevetest30___i_w_e_d_a_8h_1a2059450556bc82366d96a332d68881bf" kindref="member">http_get_url_buf</ref>[0];<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>导入URL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>配置传输任务，GET方式</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sevetest30___i_w_e_d_a_8c_1aa5158a4156168970051fa2d9d2f428ea" kindref="member">http_get_handle</ref><sp/>=<sp/>esp_http_client_init(&amp;http_config);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>获取连接句柄，之后读取状态和响应都需要这个</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_http_client_set_method(<ref refid="sevetest30___i_w_e_d_a_8c_1aa5158a4156168970051fa2d9d2f428ea" kindref="member">http_get_handle</ref>,<sp/>HTTP_METHOD_GET);<sp/></highlight><highlight class="comment">//<sp/>GET方式</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>清除http_get_out_buf之前的残留数据</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(<ref refid="sevetest30___i_w_e_d_a_8h_1a133d5084d12e7ff3fd5f9241628b1e06" kindref="member">http_get_out_buf</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>URL也清一下</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(<ref refid="sevetest30___i_w_e_d_a_8h_1a2059450556bc82366d96a332d68881bf" kindref="member">http_get_url_buf</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="345"><highlight class="normal">}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="comment">//<sp/>发送GET请求，传入flag来确定任务是否结束（结束为true，也有可能是非正常的结束），</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="comment">//<sp/>输出会保存到<sp/>http_get_out_buf，本函数不提供任何实时解码，特殊API参考手册将在外部进行解析前预处理</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="comment">//<sp/>如果服务器响应的数据使用chunked编码发送或gzip压缩等传输处理，不会发生报错，并且这是在设计考虑范围之内的，</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="comment">//<sp/>如果出现响应数据无法解析的问题，考虑解码方式是否对应合理，本库中包含对gzip的便捷解压支持函数</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="comment">//<sp/>有效的分析方式是通过抓包，参考详细响应的消息头，极少数API文档也许不会提供这些信息</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sevetest30___i_w_e_d_a_8c_1a028a26229a83f29f38df40c82a3715c1" kindref="member">http_get_request_send</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>flag)</highlight></codeline>
<codeline lineno="353"><highlight class="normal">{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;http_get_request_send&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>对服务器发送连接请求</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>esp_err_t<sp/>err_flag<sp/>=<sp/>esp_http_client_open(<ref refid="sevetest30___i_w_e_d_a_8c_1aa5158a4156168970051fa2d9d2f428ea" kindref="member">http_get_handle</ref>,<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>get请求无需额外添加报文数据</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err_flag<sp/>!=<sp/>ESP_OK)</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;请求连接服务器时出现问题<sp/>-&gt;<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="sevetest30___i_w_e_d_a_8h_1a2059450556bc82366d96a332d68881bf" kindref="member">http_get_url_buf</ref>[0]);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>esp_http_client_cleanup(<ref refid="sevetest30___i_w_e_d_a_8c_1aa5158a4156168970051fa2d9d2f428ea" kindref="member">http_get_handle</ref>);<sp/></highlight><highlight class="comment">//<sp/>释放数据缓存</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*flag<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelete(NULL);<sp/></highlight><highlight class="comment">//<sp/>终止任务</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>校验响应状态与数据</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="sevetest30___i_w_e_d_a_8c_1a1bf7359c50e40d51701bee3becfaf201" kindref="member">http_check_response_content</ref>(<ref refid="sevetest30___i_w_e_d_a_8c_1aa5158a4156168970051fa2d9d2f428ea" kindref="member">http_get_handle</ref>)<sp/>!=<sp/>ESP_OK)</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>esp_http_client_cleanup(<ref refid="sevetest30___i_w_e_d_a_8c_1aa5158a4156168970051fa2d9d2f428ea" kindref="member">http_get_handle</ref>);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*flag<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelete(NULL);<sp/></highlight><highlight class="comment">//<sp/>终止任务</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>读取响应内容</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>esp_http_client_read_response(<ref refid="sevetest30___i_w_e_d_a_8c_1aa5158a4156168970051fa2d9d2f428ea" kindref="member">http_get_handle</ref>,<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1a133d5084d12e7ff3fd5f9241628b1e06" kindref="member">http_get_out_buf</ref>,<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1a39df150cec693d7e56c68ce387ed6517" kindref="member">HTTP_BUF_MAX</ref>);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>esp_http_client_cleanup(<ref refid="sevetest30___i_w_e_d_a_8c_1aa5158a4156168970051fa2d9d2f428ea" kindref="member">http_get_handle</ref>);<sp/></highlight><highlight class="comment">//<sp/>关闭连接<sp/>释放数据缓存</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*flag<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelete(NULL);<sp/></highlight><highlight class="comment">//<sp/>完成，终止任务</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="normal">}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="comment">//<sp/>对gzip压缩后的响应，解压回原来的JSON格式，外部函数需要对传入参数有效性负责</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="comment">//<sp/>输入数据选择，输出数据缓冲区选择，输入数据最大允许长度</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="comment">//<sp/>对于<sp/>和风天气+ESP32<sp/>通过zlib解压gzip数据的思路可以参考这位大佬的博客，甚有帮助非常感谢：https://yuanze.wang/posts/esp32-unzip-gzip-http-response/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sevetest30___i_w_e_d_a_8c_1a4d019480577b2ef75c99737c66688672" kindref="member">gzip_decompress</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>input,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>output,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len)</highlight></codeline>
<codeline lineno="389"><highlight class="normal">{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;zlib_gzip_decompress&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flag<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>解压状态标识</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>配置zlib数据流</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>z_stream<sp/>stream_config<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>stream_config.next_in<sp/>=<sp/>input;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>输入数据</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>stream_config.next_out<sp/>=<sp/>output;<sp/></highlight><highlight class="comment">//<sp/>输出数据</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>stream_config.avail_in<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>当前输入数据的有效字节数</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>stream_config.zalloc<sp/>=<sp/>NULL;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>内部内存分配状态标识，不需要</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>stream_config.zfree<sp/>=<sp/>NULL;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>内部内存释放状态标识，不需要</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>stream_config.opaque<sp/>=<sp/>NULL;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>给上述两个内存标识的私有数据对象，没有</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>flag<sp/>=<sp/>inflateInit2(&amp;stream_config,<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1a8a23b5482a5de844e3b06493db2226b9" kindref="member">ZLIB_WINDOW_MAX</ref>);<sp/></highlight><highlight class="comment">//<sp/>传入参数</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flag<sp/>!=<sp/>Z_OK)</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;配置解压参数时出错&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>开始解压</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(stream_config.total_in<sp/>&lt;<sp/>len)</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream_config.avail_in<sp/>=<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>解压1字节</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream_config.avail_out<sp/>=<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>解压1字节</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flag<sp/>=<sp/>inflate(&amp;stream_config,<sp/>Z_NO_FLUSH);<sp/></highlight><highlight class="comment">//<sp/>解压并获取返回状态</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>如果解压完成，正常退出解压循环，如果解压未完成却出现非正常标识，报告问题并退出函数，如果是正常标识，继续解压循环</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flag<sp/>==<sp/>Z_STREAM_END)</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flag<sp/>!=<sp/>Z_OK)</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;解压数据时出现问题，在<sp/>%lx<sp/>-&gt;<sp/>%lx<sp/>时&quot;</highlight><highlight class="normal">,<sp/>stream_config.total_in,<sp/>stream_config.total_out);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;数据解压完成<sp/>%lx<sp/>-&gt;<sp/>%lx&quot;</highlight><highlight class="normal">,<sp/>stream_config.total_in,<sp/>stream_config.total_out);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>最后一件事，在输出末尾添加结束标识以便识别</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)output)[stream_config.total_out]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="428"><highlight class="normal">}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="sevetest30___i_w_e_d_a_8c_1ae582dc867f61fa36c8cc9e243b0bbed6" kindref="member">json_line_unit_num_get</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len)<sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//此处的处理思路</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//当一个&quot;<sp/>{<sp/>&quot;出现,表示json数据中一个对象开始表达,出现新焦点focus_num++</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//当一个&quot;<sp/>}<sp/>&quot;出现,表示json数据中一个对象停止表达,关闭焦点focus_num--</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{&quot;is_end&quot;:false,&quot;result&quot;:&quot;当然可以！&quot;,&quot;usage&quot;:{&quot;prompt_tokens&quot;:5,&quot;completion_tokens&quot;:0,&quot;total_tokens&quot;:5}}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{&quot;is_end&quot;:false,&quot;result&quot;:&quot;这是一个经典的笑话。&quot;,&quot;usage&quot;:{&quot;prompt_tokens&quot;:5,&quot;completion_tokens&quot;:0,&quot;total_tokens&quot;:5}}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//假设通过参数data传入一个上面的数据整体,此函数遍历该文本数据时,仅关注&quot;{&quot;和&quot;}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//按照上面的逻辑,focus_num变化为[单元0]<sp/>0(变量初始化后为0)<sp/>-<sp/>1<sp/>-<sp/>2<sp/>-<sp/>1<sp/>-<sp/>0<sp/>|<sp/>[单元1]<sp/>0(单元1末尾变成0)<sp/><sp/>-<sp/>1<sp/>-<sp/>2<sp/>-<sp/>1<sp/>-<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//显然地,focus_num在&quot;关闭焦点&quot;时跳变到0一次,就有一个单元;跳变到0两次,就有两个单元(保存到缓存unit_num中),以此类推,只要原数据合理,数据单元计算将不受到数据长度和复杂度的干涉</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>focus_num<sp/>=<sp/>0;</highlight><highlight class="comment">//焦点个数</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unit_num<sp/>=<sp/>0;</highlight><highlight class="comment">//扫描到的数据单元个数</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>0;idx<sp/>&lt;<sp/>len;idx++)<sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data[idx]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;{&apos;</highlight><highlight class="normal">)focus_num++;</highlight><highlight class="comment">//出现新焦点</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data[idx]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;}&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>focus_num--;</highlight><highlight class="comment">//关闭焦点</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(focus_num<sp/>==<sp/>0)unit_num++;</highlight><highlight class="comment">//focus_num在&quot;关闭焦点&quot;时跳变到0一次,就有一个单元</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//不合法的JSON_Line数据<sp/>-<sp/>源数据末尾被截断</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(idx<sp/>==<sp/>len<sp/>-<sp/>1<sp/>&amp;&amp;<sp/>focus_num<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>unit_num;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//不合法的JSON_Line数据<sp/>-<sp/>格式错误</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(focus_num<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>unit_num;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>unit_num;</highlight></codeline>
<codeline lineno="468"><highlight class="normal">}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sevetest30___i_w_e_d_a_8c_1ac1e58ef555264a706495314a1247c464" kindref="member">json_line_unit_copy</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dest,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unit_id,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_len)<sp/>{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//此处的处理思路(基于上面的json_line_unit_num_get函数思路)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//当一个&quot;<sp/>{<sp/>&quot;出现,表示json数据中一个对象开始表达,出现新焦点focus_num++</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//当一个&quot;<sp/>}<sp/>&quot;出现,表示json数据中一个对象停止表达,关闭焦点focus_num--</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{&quot;is_end&quot;:false,&quot;result&quot;:&quot;当然可以！&quot;,&quot;usage&quot;:{&quot;prompt_tokens&quot;:5,&quot;completion_tokens&quot;:0,&quot;total_tokens&quot;:5}}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{&quot;is_end&quot;:false,&quot;result&quot;:&quot;这是一个经典的笑话。&quot;,&quot;usage&quot;:{&quot;prompt_tokens&quot;:5,&quot;completion_tokens&quot;:0,&quot;total_tokens&quot;:5}}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//假设传入一个上面的数据整体,此函数遍历该文本数据时,仅关注&quot;{&quot;和&quot;}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//按照上面的逻辑,focus_num变化为[单元0]<sp/>0(变量初始化后为0)<sp/>-<sp/>1<sp/>-<sp/>2<sp/>-<sp/>1<sp/>-<sp/>0<sp/>|<sp/>[单元1]<sp/>0(单元1末尾变成0)<sp/><sp/>-<sp/>1<sp/>-<sp/>2<sp/>-<sp/>1<sp/>-<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//显然地,数据中任意单元开始位置是&quot;出现新焦点&quot;并且focus_num由0跳变到1的位置,结束位置是&quot;关闭焦点&quot;并且focus_num由1跳变到0的位置</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//记录这些&quot;坐标&quot;以及间距,利用strncpy标准C函数的特性复制目标区域即可</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>focus_num<sp/>=<sp/>0;</highlight><highlight class="comment">//焦点个数</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unit_num<sp/>=<sp/>0;</highlight><highlight class="comment">//扫描到的数据单元个数</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start<sp/>=<sp/>0;</highlight><highlight class="comment">//开始位置</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>total_len<sp/>=<sp/>0;</highlight><highlight class="comment">//选定单元的实际总长度</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>0;idx<sp/>&lt;<sp/>max_len;idx++)<sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(src[idx]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;{&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>focus_num++;</highlight><highlight class="comment">//出现新焦点<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(focus_num<sp/>==<sp/>1<sp/>&amp;&amp;<sp/>unit_num<sp/>==<sp/>unit_id)</highlight><highlight class="comment">//扫描到指定的数据单元</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start<sp/>=<sp/>idx;</highlight><highlight class="comment">//开始位置是&quot;出现新焦点&quot;并且focus_num由0跳变到1的位置</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(src[idx]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;}&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>focus_num--;</highlight><highlight class="comment">//关闭焦点</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(focus_num<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//现在在指定的数据单元</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unit_num<sp/>==<sp/>unit_id)<sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_len<sp/>=<sp/>idx<sp/>-<sp/>start<sp/>+<sp/>1;</highlight><highlight class="comment">//选定单元的实际总长度</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(total_len<sp/>&gt;=<sp/>max_len)total_len<sp/>=<sp/>max_len;</highlight><highlight class="comment">//最多复制max_len个字符</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(dest,<sp/>&amp;src[start],<sp/>total_len);</highlight><highlight class="comment">//利用strncpy标准C函数的特性复制目标区域即可</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unit_num++;</highlight><highlight class="comment">//focus_num在&quot;关闭焦点&quot;时跳变到0一次,一个单元被扫过</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(focus_num<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(</highlight><highlight class="stringliteral">&quot;json_line_unit_copy&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;不合法的JSON_Line数据<sp/>终止字符的下标位置-%d&quot;</highlight><highlight class="normal">,<sp/>idx);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="normal">}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight><highlight class="comment">//<sp/>解析返回的IP地址数据，保存到ip_address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sevetest30___i_w_e_d_a_8c_1a7e37a9a731dbc6ae76209c2bf82d6ed9" kindref="member">transform_ip_address</ref>()</highlight></codeline>
<codeline lineno="520"><highlight class="normal">{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;transform_ip_address&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sevetest30___i_w_e_d_a_8h_1a43cfeffd1fd4cfd457c5183f70d3cdaf" kindref="member">ip_address</ref><sp/>=<sp/>malloc(30);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(<ref refid="sevetest30___i_w_e_d_a_8h_1a43cfeffd1fd4cfd457c5183f70d3cdaf" kindref="member">ip_address</ref>,<sp/>0,<sp/>30);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buf<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="sevetest30___i_w_e_d_a_8h_1a133d5084d12e7ff3fd5f9241628b1e06" kindref="member">http_get_out_buf</ref>[i]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="sevetest30___i_w_e_d_a_8h_1a133d5084d12e7ff3fd5f9241628b1e06" kindref="member">http_get_out_buf</ref>[i])</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;2&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;2&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;3&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;3&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;4&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;4&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;5&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;5&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;6&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;6&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;7&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;7&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;8&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;8&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;9&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>OK;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcat(<ref refid="sevetest30___i_w_e_d_a_8h_1a43cfeffd1fd4cfd457c5183f70d3cdaf" kindref="member">ip_address</ref>,<sp/>buf);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="583"><highlight class="normal">OK:</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>buf<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>strcat(<ref refid="sevetest30___i_w_e_d_a_8h_1a43cfeffd1fd4cfd457c5183f70d3cdaf" kindref="member">ip_address</ref>,<sp/>buf);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;解析完毕,获取到公网IP<sp/>%s<sp/>(总字符数<sp/>%d)&quot;</highlight><highlight class="normal">,<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1a43cfeffd1fd4cfd457c5183f70d3cdaf" kindref="member">ip_address</ref>,<sp/>i);</highlight></codeline>
<codeline lineno="587"><highlight class="normal">}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight><highlight class="comment">//<sp/>解析返回的IP归属地址邮政编码信息，保存到ip_position_data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sevetest30___i_w_e_d_a_8c_1a9e45a7edd8edbe3b4a405d4bb66ec91e" kindref="member">transform_postcode</ref>()</highlight></codeline>
<codeline lineno="590"><highlight class="normal">{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;transform_postcode&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>因为返回数据中被一个find（）扩住了，json解析不了，想办法缓存有用的数据再解析,注意其中特征<sp/>&quot;find(&quot;的位置<sp/><sp/><sp/><sp/>&quot;)&quot;始终为结束字符</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find({&quot;ret&quot;:&quot;ok&quot;,&quot;ip&quot;:&quot;39.158.160.240&quot;,&quot;data&quot;:[&quot;中国&quot;,&quot;江西&quot;,&quot;吉安&quot;,&quot;吉安&quot;,&quot;移动&quot;,&quot;343100&quot;,&quot;0796&quot;]})</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>json_buf[<ref refid="sevetest30___i_w_e_d_a_8h_1aa3bb9d375e94bc67c793095abb864bce" kindref="member">PRE_CJSON_BUF_MAX</ref>]<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>i<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="sevetest30___i_w_e_d_a_8h_1a133d5084d12e7ff3fd5f9241628b1e06" kindref="member">http_get_out_buf</ref>[i]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;)&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json_buf[i<sp/>-<sp/>5]<sp/>=<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1a133d5084d12e7ff3fd5f9241628b1e06" kindref="member">http_get_out_buf</ref>[i];</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sevetest30___i_w_e_d_a_8h_1a133d5084d12e7ff3fd5f9241628b1e06" kindref="member">http_get_out_buf</ref>[i]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>提取完成开始json解析</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>cJSON*<sp/>root_data<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>root_data<sp/>=<sp/>cJSON_Parse(json_buf);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>cJSON*<sp/>cjson_data<sp/>=<sp/>cJSON_GetObjectItem(root_data,<sp/></highlight><highlight class="stringliteral">&quot;data&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>cJSON*<sp/>cjson_postcode<sp/>=<sp/>cJSON_GetArrayItem(cjson_data,<sp/>5);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sevetest30___i_w_e_d_a_8h_1aa9a1aac211eb71e3942f10b52638f904" kindref="member">ip_position_data</ref>-&gt;postcode<sp/>=<sp/>cjson_postcode-&gt;valuestring;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;解析完毕,获取到IP归属地邮政编码<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>cjson_postcode-&gt;valuestring);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cJSON_Delete(root_data);<sp/>//<sp/>完成数据解析，释放cJSON，但是由于外部需要使用其中字符串数据，不进行释放</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal">}</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight><highlight class="comment">//<sp/>解析经纬度数据,保存到ip_position_data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sevetest30___i_w_e_d_a_8c_1a4ee1c1d994236e8eee7199baae486b01" kindref="member">transform_lng_lat</ref>()</highlight></codeline>
<codeline lineno="618"><highlight class="normal">{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;transform_lng_lat&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>cJSON*<sp/>root_data<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>root_data<sp/>=<sp/>cJSON_Parse(<ref refid="sevetest30___i_w_e_d_a_8h_1a133d5084d12e7ff3fd5f9241628b1e06" kindref="member">http_get_out_buf</ref>);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>cJSON*<sp/>cjson_data<sp/>=<sp/>cJSON_GetObjectItem(root_data,<sp/></highlight><highlight class="stringliteral">&quot;data&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>cJSON*<sp/>cjson_results<sp/>=<sp/>cJSON_GetObjectItem(cjson_data,<sp/></highlight><highlight class="stringliteral">&quot;results&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>cJSON*<sp/>cjson_results_root<sp/>=<sp/>cJSON_GetArrayItem(cjson_results,<sp/>0);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>cJSON*<sp/>cjson_lng<sp/>=<sp/>cJSON_GetObjectItem(cjson_results_root,<sp/></highlight><highlight class="stringliteral">&quot;lng&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>cJSON*<sp/>cjson_lat<sp/>=<sp/>cJSON_GetObjectItem(cjson_results_root,<sp/></highlight><highlight class="stringliteral">&quot;lat&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sevetest30___i_w_e_d_a_8h_1aa9a1aac211eb71e3942f10b52638f904" kindref="member">ip_position_data</ref>-&gt;lng<sp/>=<sp/>cjson_lng-&gt;valuestring;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sevetest30___i_w_e_d_a_8h_1aa9a1aac211eb71e3942f10b52638f904" kindref="member">ip_position_data</ref>-&gt;lat<sp/>=<sp/>cjson_lat-&gt;valuestring;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;获取到归属地<sp/>经度为%s<sp/>纬度为%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1aa9a1aac211eb71e3942f10b52638f904" kindref="member">ip_position_data</ref>-&gt;lng,<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1aa9a1aac211eb71e3942f10b52638f904" kindref="member">ip_position_data</ref>-&gt;lat);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cJSON_Delete(root_data);<sp/>//<sp/>完成数据解析，释放cJSON，但是由于外部需要使用其中字符串数据，不进行释放</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal">}</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight><highlight class="comment">//<sp/>解析locationID数据,保存到ip_position_data,同时会进一步完善ip_position_data数据</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sevetest30___i_w_e_d_a_8c_1aec9ce0a4f817dcba7dbf0729d0d7449a" kindref="member">transform_locationID</ref>()</highlight></codeline>
<codeline lineno="640"><highlight class="normal">{</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;transform_locationID&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>json_buf[<ref refid="sevetest30___i_w_e_d_a_8h_1aa3bb9d375e94bc67c793095abb864bce" kindref="member">PRE_CJSON_BUF_MAX</ref>]<sp/>=<sp/>{<sp/>0<sp/>};<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>缓存JOSN数据</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sevetest30___i_w_e_d_a_8c_1a4d019480577b2ef75c99737c66688672" kindref="member">gzip_decompress</ref>(<ref refid="sevetest30___i_w_e_d_a_8h_1a133d5084d12e7ff3fd5f9241628b1e06" kindref="member">http_get_out_buf</ref>,<sp/>json_buf,<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1a39df150cec693d7e56c68ce387ed6517" kindref="member">HTTP_BUF_MAX</ref>);<sp/></highlight><highlight class="comment">//<sp/>由于目前和风天气响应数据经过gzip压缩，需要zlib库支持，这个解压函数是要自行按需求封装的，请看本文件该函数的声明</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>cJSON*<sp/>root_data<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>root_data<sp/>=<sp/>cJSON_Parse(json_buf);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>cJSON*<sp/>cjson_location<sp/>=<sp/>cJSON_GetObjectItem(root_data,<sp/></highlight><highlight class="stringliteral">&quot;location&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>cJSON*<sp/>cjson_location_root<sp/>=<sp/>cJSON_GetArrayItem(cjson_location,<sp/>0);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>cJSON*<sp/>cjson_name<sp/>=<sp/>cJSON_GetObjectItem(cjson_location_root,<sp/></highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>cJSON*<sp/>cjson_id<sp/>=<sp/>cJSON_GetObjectItem(cjson_location_root,<sp/></highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>cJSON*<sp/>cjson_adm2<sp/>=<sp/>cJSON_GetObjectItem(cjson_location_root,<sp/></highlight><highlight class="stringliteral">&quot;adm2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>cJSON*<sp/>cjson_adm1<sp/>=<sp/>cJSON_GetObjectItem(cjson_location_root,<sp/></highlight><highlight class="stringliteral">&quot;adm1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>cJSON*<sp/>cjson_country<sp/>=<sp/>cJSON_GetObjectItem(cjson_location_root,<sp/></highlight><highlight class="stringliteral">&quot;country&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sevetest30___i_w_e_d_a_8h_1aa9a1aac211eb71e3942f10b52638f904" kindref="member">ip_position_data</ref>-&gt;country<sp/>=<sp/>cjson_country-&gt;valuestring;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sevetest30___i_w_e_d_a_8h_1aa9a1aac211eb71e3942f10b52638f904" kindref="member">ip_position_data</ref>-&gt;adm1<sp/>=<sp/>cjson_adm1-&gt;valuestring;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sevetest30___i_w_e_d_a_8h_1aa9a1aac211eb71e3942f10b52638f904" kindref="member">ip_position_data</ref>-&gt;adm2<sp/>=<sp/>cjson_adm2-&gt;valuestring;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sevetest30___i_w_e_d_a_8h_1aa9a1aac211eb71e3942f10b52638f904" kindref="member">ip_position_data</ref>-&gt;name<sp/>=<sp/>cjson_name-&gt;valuestring;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sevetest30___i_w_e_d_a_8h_1aa9a1aac211eb71e3942f10b52638f904" kindref="member">ip_position_data</ref>-&gt;id<sp/>=<sp/>cjson_id-&gt;valuestring;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;获取到locationID<sp/>%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1aa9a1aac211eb71e3942f10b52638f904" kindref="member">ip_position_data</ref>-&gt;id);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;详细地址：%s<sp/>-<sp/>%s<sp/>-<sp/>%s<sp/><sp/>-<sp/>%s<sp/>&quot;</highlight><highlight class="normal">,<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1aa9a1aac211eb71e3942f10b52638f904" kindref="member">ip_position_data</ref>-&gt;country,<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1aa9a1aac211eb71e3942f10b52638f904" kindref="member">ip_position_data</ref>-&gt;adm1,</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___i_w_e_d_a_8h_1aa9a1aac211eb71e3942f10b52638f904" kindref="member">ip_position_data</ref>-&gt;adm2,<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1aa9a1aac211eb71e3942f10b52638f904" kindref="member">ip_position_data</ref>-&gt;name);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cJSON_Delete(root_data);<sp/>//<sp/>完成数据解析，释放cJSON，但是由于外部需要使用其中字符串数据，不进行释放</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal">}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight><highlight class="comment">//<sp/>解析实时天气，保存到全局<sp/>real_time_weather_data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sevetest30___i_w_e_d_a_8c_1a1f7f523937b41549158ede27ddeb6550" kindref="member">transform_real_time_weather_data</ref>()</highlight></codeline>
<codeline lineno="670"><highlight class="normal">{</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;transform_real_time_weather_data&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>json_buf[<ref refid="sevetest30___i_w_e_d_a_8h_1aa3bb9d375e94bc67c793095abb864bce" kindref="member">PRE_CJSON_BUF_MAX</ref>]<sp/>=<sp/>{<sp/>0<sp/>};<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>缓存JOSN数据</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sevetest30___i_w_e_d_a_8c_1a4d019480577b2ef75c99737c66688672" kindref="member">gzip_decompress</ref>(<ref refid="sevetest30___i_w_e_d_a_8h_1a133d5084d12e7ff3fd5f9241628b1e06" kindref="member">http_get_out_buf</ref>,<sp/>json_buf,<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1a39df150cec693d7e56c68ce387ed6517" kindref="member">HTTP_BUF_MAX</ref>);<sp/></highlight><highlight class="comment">//<sp/>由于目前和风天气响应数据经过gzip压缩，需要zlib库支持，这个解压函数是要自行按需求封装的，请看本文件该函数的声明</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>JSON数据解析,当前仅需要<sp/>now<sp/>的数据<sp/>15个<sp/>全部解析</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>cJSON*<sp/>root_data<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>root_data<sp/>=<sp/>cJSON_Parse(json_buf);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/>cJSON*<sp/>cjson_now<sp/>=<sp/>cJSON_GetObjectItem(root_data,<sp/></highlight><highlight class="stringliteral">&quot;now&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>选定参数为为<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/>cJSON*<sp/>cjson_obsTime<sp/>=<sp/>cJSON_GetObjectItem(cjson_now,<sp/></highlight><highlight class="stringliteral">&quot;obsTime&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>数据观测时间</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>cJSON*<sp/>cjson_temp<sp/>=<sp/>cJSON_GetObjectItem(cjson_now,<sp/></highlight><highlight class="stringliteral">&quot;temp&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>温度，摄氏度</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>cJSON*<sp/>cjson_feelsLike<sp/>=<sp/>cJSON_GetObjectItem(cjson_now,<sp/></highlight><highlight class="stringliteral">&quot;feelsLike&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>体感温度，摄氏度</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>cJSON*<sp/>cjson_icon<sp/>=<sp/>cJSON_GetObjectItem(cjson_now,<sp/></highlight><highlight class="stringliteral">&quot;icon&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>天气状况代码</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/>cJSON*<sp/>cjson_text<sp/>=<sp/>cJSON_GetObjectItem(cjson_now,<sp/></highlight><highlight class="stringliteral">&quot;text&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>天气文字描述例如多云</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>cJSON*<sp/>cjson_wind360<sp/>=<sp/>cJSON_GetObjectItem(cjson_now,<sp/></highlight><highlight class="stringliteral">&quot;wind360&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>360度风向</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>cJSON*<sp/>cjson_windDir<sp/>=<sp/>cJSON_GetObjectItem(cjson_now,<sp/></highlight><highlight class="stringliteral">&quot;windDir&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>风向文字描述</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>cJSON*<sp/>cjson_windScale<sp/>=<sp/>cJSON_GetObjectItem(cjson_now,<sp/></highlight><highlight class="stringliteral">&quot;windScale&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>风力等级</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>cJSON*<sp/>cjson_windSpeed<sp/>=<sp/>cJSON_GetObjectItem(cjson_now,<sp/></highlight><highlight class="stringliteral">&quot;windSpeed&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>风速</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/>cJSON*<sp/>cjson_humidity<sp/>=<sp/>cJSON_GetObjectItem(cjson_now,<sp/></highlight><highlight class="stringliteral">&quot;humidity&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>相对湿度，百分比</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/>cJSON*<sp/>cjson_precip<sp/>=<sp/>cJSON_GetObjectItem(cjson_now,<sp/></highlight><highlight class="stringliteral">&quot;precip&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>当前每小时降水量，毫米</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>cJSON*<sp/>cjson_pressure<sp/>=<sp/>cJSON_GetObjectItem(cjson_now,<sp/></highlight><highlight class="stringliteral">&quot;pressure&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>大气压强</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/>cJSON*<sp/>cjson_vis<sp/>=<sp/>cJSON_GetObjectItem(cjson_now,<sp/></highlight><highlight class="stringliteral">&quot;vis&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>能见度,KM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>cJSON*<sp/>cjson_cloud<sp/>=<sp/>cJSON_GetObjectItem(cjson_now,<sp/></highlight><highlight class="stringliteral">&quot;cloud&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>云量，可能为空</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>cJSON*<sp/>cjson_dew<sp/>=<sp/>cJSON_GetObjectItem(cjson_now,<sp/></highlight><highlight class="stringliteral">&quot;dew&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>露点温度，可能为空</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>存储到<sp/>real_time_weather_data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>传来的是字符型，因为后续分析需要，转换成整型存储起来</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>weather_UI_1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>sscanf(cjson_temp-&gt;valuestring,<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="sevetest30___i_w_e_d_a_8h_1ac7bb61d4f7ba5faf047aa01bbf89956f" kindref="member">real_time_weather_data</ref>-&gt;temp);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>sscanf(cjson_icon-&gt;valuestring,<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="sevetest30___i_w_e_d_a_8h_1ac7bb61d4f7ba5faf047aa01bbf89956f" kindref="member">real_time_weather_data</ref>-&gt;icon);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>weather_UI_2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/>sscanf(cjson_humidity-&gt;valuestring,<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="sevetest30___i_w_e_d_a_8h_1ac7bb61d4f7ba5faf047aa01bbf89956f" kindref="member">real_time_weather_data</ref>-&gt;humidity);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>real_time_weather_data.obsTime<sp/>=<sp/>cjson_obsTime-&gt;type;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>real_time_weather_data.feelsLike<sp/>=<sp/>cjson_feelsLike-&gt;type;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>real_time_weather_data.text<sp/>=<sp/>cjson_text-&gt;type;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>real_time_weather_data.wind360<sp/>=<sp/>cjson_wind360-&gt;type;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>real_time_weather_data.windDir<sp/>=<sp/>cjson_windDir-&gt;type;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>real_time_weather_data.windScale<sp/>=<sp/>cjson_windScale-&gt;type;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>real_time_weather_data.windSpeed<sp/>=<sp/>cjson_windSpeed-&gt;type;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>real_time_weather_data.precip<sp/>=<sp/>cjson_precip-&gt;type;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>real_time_weather_data.pressure<sp/>=<sp/>cjson_pressure-&gt;type;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>real_time_weather_data.vis<sp/>=<sp/>cjson_vis-&gt;type;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>//可能为空</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>real_time_weather_data.cloud<sp/>=<sp/>cjson_cloud-&gt;type;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>real_time_weather_data.dew<sp/>=<sp/>cjson_dew-&gt;type;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;解析完毕,实时天气数据已保存到real_time_weather_data&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cJSON_Delete(root_data);<sp/>//<sp/>完成数据解析，释放cJSON，但是由于外部需要使用其中字符串数据，不进行释放</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal">}</highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sevetest30___i_w_e_d_a_8c_1a6713306ef66b3a5f97efaade9ef65706" kindref="member">ERNIE_Bot_4_chat_transform</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>chat_response)</highlight></codeline>
<codeline lineno="730"><highlight class="normal">{</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ERNIE_Bot_4_chat_transform&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!chat_response)</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;传入了为空的输入数据&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//如果缓存为空,申请缓存</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="sevetest30___i_w_e_d_a_8c_1ae874bcbe8211c4b22a94996c49debcc9" kindref="member">ERNIE_Bot_4_chat_result</ref>)</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___i_w_e_d_a_8c_1ae874bcbe8211c4b22a94996c49debcc9" kindref="member">ERNIE_Bot_4_chat_result</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)malloc(<ref refid="sevetest30___i_w_e_d_a_8h_1a727665e1ba0b42a5b2fc791307d54110" kindref="member">ERNIE_BOT_4_CHAT_RESPONSE_BUF_MAX</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!<ref refid="sevetest30___i_w_e_d_a_8c_1ae874bcbe8211c4b22a94996c49debcc9" kindref="member">ERNIE_Bot_4_chat_result</ref>)</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(1000));</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;申请ERNIE_Bot_4_chat_result资源发现问题<sp/>正在重试&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___i_w_e_d_a_8c_1ae874bcbe8211c4b22a94996c49debcc9" kindref="member">ERNIE_Bot_4_chat_result</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)malloc(<ref refid="sevetest30___i_w_e_d_a_8h_1a727665e1ba0b42a5b2fc791307d54110" kindref="member">ERNIE_BOT_4_CHAT_RESPONSE_BUF_MAX</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(<ref refid="sevetest30___i_w_e_d_a_8c_1ae874bcbe8211c4b22a94996c49debcc9" kindref="member">ERNIE_Bot_4_chat_result</ref>,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="sevetest30___i_w_e_d_a_8h_1a727665e1ba0b42a5b2fc791307d54110" kindref="member">ERNIE_BOT_4_CHAT_RESPONSE_BUF_MAX</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>cJSON*<sp/>root_data<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/>root_data<sp/>=<sp/>cJSON_Parse(chat_response);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/>cJSON*<sp/>cjson_result<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/>cjson_result<sp/>=<sp/>cJSON_GetObjectItem(root_data,<sp/></highlight><highlight class="stringliteral">&quot;result&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cjson_result)</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;交互出现问题,请重试&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncat(<ref refid="sevetest30___i_w_e_d_a_8c_1ae874bcbe8211c4b22a94996c49debcc9" kindref="member">ERNIE_Bot_4_chat_result</ref>,<sp/>cjson_result-&gt;valuestring,<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1a727665e1ba0b42a5b2fc791307d54110" kindref="member">ERNIE_BOT_4_CHAT_RESPONSE_BUF_MAX</ref><sp/>-<sp/>strlen(<ref refid="sevetest30___i_w_e_d_a_8c_1ae874bcbe8211c4b22a94996c49debcc9" kindref="member">ERNIE_Bot_4_chat_result</ref>));</highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>cJSON_Delete(root_data);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="763"><highlight class="normal">}</highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="sevetest30___i_w_e_d_a_8c_1a5b4a89294fdd0ea7d8b14eae9cc14a58" kindref="member">ERNIE_Bot_4_chat_over_status</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>chat_response)</highlight></codeline>
<codeline lineno="769"><highlight class="normal">{</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ERNIE_Bot_4_chat_over_status&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!chat_response)</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;传入了为空的输入数据&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/>cJSON*<sp/>root_data<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/>root_data<sp/>=<sp/>cJSON_Parse(chat_response);</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/>cJSON*<sp/>cjson_is_end<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/>cjson_is_end<sp/>=<sp/>cJSON_GetObjectItem(root_data,<sp/></highlight><highlight class="stringliteral">&quot;is_end&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cjson_is_end)<sp/>{</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cJSON_Delete(root_data);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>cjson_is_end-&gt;valueint;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cJSON_Delete(root_data);</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="791"><highlight class="normal">}</highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sevetest30___i_w_e_d_a_8c_1a3cd770bd0608c2ae8ff52ff4728ee04d" kindref="member">ERNIE_Bot_4_chat_http_Task</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>flag)</highlight></codeline>
<codeline lineno="796"><highlight class="normal">{</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ERNIE_Bot_4_chat&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>设置URL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>url_buf<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>url_buf<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)malloc(1024<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!url_buf)</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(1000));</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;申请url_buf资源发现问题<sp/>正在重试&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>url_buf<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)malloc(1024<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(url_buf,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(1024<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcat(url_buf,<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1a9f0d143c927add4d6c82be25b6a8515a" kindref="member">ERNIE_BOT_4_URL</ref>);</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcat(url_buf,<sp/><ref refid="sevetest30___i_w_e_d_a_8c_1aae31c687cd82dc52352b25eee3055227" kindref="member">baidu_ERNIE_Bot_access_token</ref>);</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>申请响应数据缓存</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>response_buf<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response_buf<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)malloc(<ref refid="sevetest30___i_w_e_d_a_8h_1a727665e1ba0b42a5b2fc791307d54110" kindref="member">ERNIE_BOT_4_CHAT_RESPONSE_BUF_MAX</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!response_buf)</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(1000));</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;申请response_buf资源发现问题<sp/>正在重试&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response_buf<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)malloc(<ref refid="sevetest30___i_w_e_d_a_8h_1a727665e1ba0b42a5b2fc791307d54110" kindref="member">ERNIE_BOT_4_CHAT_RESPONSE_BUF_MAX</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(response_buf,<sp/>0,<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1a727665e1ba0b42a5b2fc791307d54110" kindref="member">ERNIE_BOT_4_CHAT_RESPONSE_BUF_MAX</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(response_buf,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//申请json_line格式解析缓存</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>json_buf<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json_buf<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)malloc(<ref refid="sevetest30___i_w_e_d_a_8h_1a727665e1ba0b42a5b2fc791307d54110" kindref="member">ERNIE_BOT_4_CHAT_RESPONSE_BUF_MAX</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!json_buf)</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(1000));</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;申请json_buf资源发现问题<sp/>正在重试&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json_buf<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)malloc(<ref refid="sevetest30___i_w_e_d_a_8h_1a727665e1ba0b42a5b2fc791307d54110" kindref="member">ERNIE_BOT_4_CHAT_RESPONSE_BUF_MAX</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(json_buf,<sp/>0,<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1a727665e1ba0b42a5b2fc791307d54110" kindref="member">ERNIE_BOT_4_CHAT_RESPONSE_BUF_MAX</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//清理交互结果缓存</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="sevetest30___i_w_e_d_a_8c_1ae874bcbe8211c4b22a94996c49debcc9" kindref="member">ERNIE_Bot_4_chat_result</ref>)</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(<ref refid="sevetest30___i_w_e_d_a_8c_1ae874bcbe8211c4b22a94996c49debcc9" kindref="member">ERNIE_Bot_4_chat_result</ref>,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="sevetest30___i_w_e_d_a_8h_1a727665e1ba0b42a5b2fc791307d54110" kindref="member">ERNIE_BOT_4_CHAT_RESPONSE_BUF_MAX</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>初始化http_client</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>esp_http_client_config_t<sp/>http_config;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(&amp;http_config,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(http_config));</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>http_config.url<sp/>=<sp/>url_buf;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>导入url</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>http_config.method<sp/>=<sp/>HTTP_METHOD_POST;<sp/></highlight><highlight class="comment">//<sp/>使用POST请求</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>esp_http_client_handle_t<sp/>client_handle<sp/>=<sp/>esp_http_client_init(&amp;http_config);</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>设置HTTP-HEADER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>esp_http_client_set_header(client_handle,<sp/></highlight><highlight class="stringliteral">&quot;Content-Type&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;application/json&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>准备HTTP-BODY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>request_body_buf<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request_body_buf<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)malloc(<ref refid="sevetest30___i_w_e_d_a_8h_1a0142330271f7fc6c2dcee1c5e773bba2" kindref="member">ASR_RESULT_TEX_BUF_MAX</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>+<sp/>2048<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!request_body_buf)</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(1000));</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;申请request_body_buf资源发现问题<sp/>正在重试&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request_body_buf<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)malloc(<ref refid="sevetest30___i_w_e_d_a_8h_1a0142330271f7fc6c2dcee1c5e773bba2" kindref="member">ASR_RESULT_TEX_BUF_MAX</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>+<sp/>2048<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(request_body_buf,<sp/>0,<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1a0142330271f7fc6c2dcee1c5e773bba2" kindref="member">ASR_RESULT_TEX_BUF_MAX</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>+<sp/>2048<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(request_body_buf,<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1a0142330271f7fc6c2dcee1c5e773bba2" kindref="member">ASR_RESULT_TEX_BUF_MAX</ref><sp/>+<sp/>2048,</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;{\&quot;messages\&quot;:[{\&quot;role\&quot;:\&quot;user\&quot;,\&quot;content\&quot;:\&quot;%s\&quot;}],\&quot;disable_search\&quot;:false,\&quot;enable_citation\&quot;:false,\&quot;stream\&quot;:true}&quot;</highlight><highlight class="normal">,<sp/><ref refid="sevetest30___i_w_e_d_a_8c_1a4718fd08964287860f61766475e96858" kindref="member">ERNIE_Bot_4_chat_user_content</ref>);</highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>esp_err_t<sp/>err_flag<sp/>=<sp/>ESP_OK;</highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>设置超时时间</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err_flag<sp/>|=<sp/>esp_http_client_set_timeout_ms(client_handle,<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1a1a62976cec97f332cbddf1f6eef5d581" kindref="member">ERNIE_BOT_4_CHAT_TIMEOUT_MS</ref>);</highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>对服务器发送连接请求</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err_flag<sp/>|=<sp/>esp_http_client_open(client_handle,<sp/>strlen(request_body_buf));</highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err_flag<sp/>!=<sp/>ESP_OK)</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;配置连接时出现问题<sp/>-&gt;<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>http_config.url);</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>TASK_OVER;</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGW(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;等待回答&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>写入请求体</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>esp_http_client_write(client_handle,<sp/>request_body_buf,<sp/>strlen(request_body_buf));</highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>校验响应</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="sevetest30___i_w_e_d_a_8c_1a1bf7359c50e40d51701bee3becfaf201" kindref="member">http_check_response_content</ref>(client_handle)<sp/>!=<sp/>ESP_OK)</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;校验响应时发现问题&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>TASK_OVER;</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//数据处理</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>complete_num<sp/>=<sp/>0;</highlight><highlight class="comment">//实时已经读取的单元个数,可以为0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>right_num<sp/>=<sp/>0;</highlight><highlight class="comment">//实时合法的单元个数,可以为0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//根据单元总数,解析并拼接单元内容</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//获取合法单元个数</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>right_num<sp/>=<sp/><ref refid="sevetest30___i_w_e_d_a_8c_1ae582dc867f61fa36c8cc9e243b0bbed6" kindref="member">json_line_unit_num_get</ref>(response_buf,<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1a727665e1ba0b42a5b2fc791307d54110" kindref="member">ERNIE_BOT_4_CHAT_RESPONSE_BUF_MAX</ref>);</highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//此前未读取任何响应数据,循环开始时right_num必然为0,第一次读取响应发生在下面的等待下</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//如果有未读单元,执行读取</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(complete_num<sp/>&lt;<sp/>right_num)<sp/>{</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(json_buf,<sp/>0,<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1a727665e1ba0b42a5b2fc791307d54110" kindref="member">ERNIE_BOT_4_CHAT_RESPONSE_BUF_MAX</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___i_w_e_d_a_8c_1ac1e58ef555264a706495314a1247c464" kindref="member">json_line_unit_copy</ref>(json_buf,<sp/>response_buf,<sp/>complete_num,<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1a727665e1ba0b42a5b2fc791307d54110" kindref="member">ERNIE_BOT_4_CHAT_RESPONSE_BUF_MAX</ref>);</highlight><highlight class="comment">//复制一个数据单元</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___i_w_e_d_a_8c_1a6713306ef66b3a5f97efaade9ef65706" kindref="member">ERNIE_Bot_4_chat_transform</ref>(json_buf);</highlight><highlight class="comment">//解析并拼接保存</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>complete_num++;</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//(right_num=0<sp/>complete_num=0)或者(读完最后一个单元)[已读个数<sp/>=<sp/>总个数],检验,如果数据没有完全读取完成,需要等待并读取更多下文</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(complete_num<sp/>==<sp/>right_num)<sp/>{</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="sevetest30___i_w_e_d_a_8c_1a5b4a89294fdd0ea7d8b14eae9cc14a58" kindref="member">ERNIE_Bot_4_chat_over_status</ref>(json_buf)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>count;</highlight><highlight class="comment">//等待一个单位延时的次数,count=[3]就是等待了[3ms]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(count<sp/>&lt;<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1a1a62976cec97f332cbddf1f6eef5d581" kindref="member">ERNIE_BOT_4_CHAT_TIMEOUT_MS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//拼接新的响应内容,响应读取仅发生在这里,包含第一次读取</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//如果有未读部分,读取速度是<sp/>1ms<sp/>=&gt;<sp/>1字符<sp/>否则<sp/>1ms<sp/>=&gt;<sp/>0字符(等待)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strlen(response_buf)<sp/>+<sp/>1<sp/>&lt;<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1a727665e1ba0b42a5b2fc791307d54110" kindref="member">ERNIE_BOT_4_CHAT_RESPONSE_BUF_MAX</ref>)<sp/>{</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>esp_http_client_read_response(client_handle,<sp/>&amp;response_buf[strlen(response_buf)],<sp/>1);</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;响应缓存内存空间不足&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>TASK_OVER;</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//如果有新的发现,退出等待</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="sevetest30___i_w_e_d_a_8c_1ae582dc867f61fa36c8cc9e243b0bbed6" kindref="member">json_line_unit_num_get</ref>(response_buf,<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1a727665e1ba0b42a5b2fc791307d54110" kindref="member">ERNIE_BOT_4_CHAT_RESPONSE_BUF_MAX</ref>)<sp/>&gt;<sp/>right_num)</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(1));</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count++;</highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count<sp/>&gt;=<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1a1a62976cec97f332cbddf1f6eef5d581" kindref="member">ERNIE_BOT_4_CHAT_TIMEOUT_MS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;等待回复超时&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>TASK_OVER;</highlight><highlight class="comment">//等待超时,退出<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="sevetest30___i_w_e_d_a_8c_1ae874bcbe8211c4b22a94996c49debcc9" kindref="member">ERNIE_Bot_4_chat_result</ref>)<sp/>{</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="sevetest30___i_w_e_d_a_8c_1ae874bcbe8211c4b22a94996c49debcc9" kindref="member">ERNIE_Bot_4_chat_result</ref>);</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;解析完成,共拼接%d个数据单元&quot;</highlight><highlight class="normal">,<sp/>complete_num);</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;解析任务内部运行异常&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>TASK_OVER;</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/>TASK_OVER:</highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>关闭连接清理缓存</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>esp_http_client_cleanup(client_handle);</highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>释放内存</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(url_buf);</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(response_buf);</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(request_body_buf);</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(json_buf);</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>url_buf<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response_buf<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request_body_buf<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json_buf<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*flag<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelete(NULL);<sp/></highlight><highlight class="comment">//<sp/>终止任务</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="975"><highlight class="normal">}</highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="sevetest30___i_w_e_d_a_8c_1a8b985c45f6a665a338a423b498bbdb9d" kindref="member">ERNIE_Bot_4_chat_tex_exchange</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>user_content)</highlight></codeline>
<codeline lineno="981"><highlight class="normal">{</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ERNIE_Bot_4_chat_tex_exchange&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcasecmp(user_content,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;空的用户内容&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(periph_wifi_is_connected(<ref refid="sevetest30___i_w_e_d_a_8h_1acc57b1fb678068603324cf957c2e4cc9" kindref="member">se30_wifi_periph_handle</ref>)<sp/>!=<sp/>PERIPH_WIFI_CONNECTED)<sp/>{</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;网络未连接&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sevetest30___i_w_e_d_a_8c_1a4718fd08964287860f61766475e96858" kindref="member">ERNIE_Bot_4_chat_user_content</ref><sp/>=<sp/>user_content;</highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="sevetest30___i_w_e_d_a_8c_1aae31c687cd82dc52352b25eee3055227" kindref="member">baidu_ERNIE_Bot_access_token</ref>[1]<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGW(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;即将初始化请求token&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="sevetest30___i_w_e_d_a_8c_1aec71d466f36992a2eba45408ef193056" kindref="member">baidu_get_AccessToken</ref>(<ref refid="build_2config_2sdkconfig_8h_1a43f8cb22cc960945e5a18afa9bb1361f" kindref="member">CONFIG_BAIDU_ERNIE_BOT_ACCESS_KEY</ref>,<sp/><ref refid="build_2config_2sdkconfig_8h_1ab5465aeed40ee6b0a4a3e9ddc79e128f" kindref="member">CONFIG_BAIDU_ERNIE_BOT_SECRET_KEY</ref>,<sp/><ref refid="sevetest30___i_w_e_d_a_8c_1aae31c687cd82dc52352b25eee3055227" kindref="member">baidu_ERNIE_Bot_access_token</ref>))</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;获取请求token时发现问题&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(1000));</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Task_comp_flag<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/>xTaskCreatePinnedToCore(&amp;<ref refid="sevetest30___i_w_e_d_a_8c_1a3cd770bd0608c2ae8ff52ff4728ee04d" kindref="member">ERNIE_Bot_4_chat_http_Task</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERNIE_Bot_4_chat_http_Task&quot;</highlight><highlight class="normal">,<sp/>8192,<sp/>&amp;Task_comp_flag,<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1a770e0b83bbde8146c2a2d75380e1e338" kindref="member">HTTP_TASK_PRIO</ref>,<sp/>NULL,<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1a9df4f6c1214f4106dd604d535b4c9175" kindref="member">HTTP_TASK_CORE</ref>);<sp/></highlight><highlight class="comment">//<sp/>启动http传输任务,GET方式</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!Task_comp_flag)</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(200));</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="sevetest30___i_w_e_d_a_8c_1ae874bcbe8211c4b22a94996c49debcc9" kindref="member">ERNIE_Bot_4_chat_result</ref>;</highlight></codeline>
<codeline lineno="1011"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sevetest30___i_w_e_d_a_8c_1aea77672640e2d57865fcd3e7c26dc4b1" kindref="member">asr_data_save_result</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>asr_response)</highlight></codeline>
<codeline lineno="1017"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;asr_data_get_result&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(asr_response<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;传入了为空的输入数据&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/>cJSON*<sp/>root_data<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/>root_data<sp/>=<sp/>cJSON_Parse(asr_response);</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/>cJSON*<sp/>cjson_err_msg<sp/>=<sp/>cJSON_GetObjectItem(root_data,<sp/></highlight><highlight class="stringliteral">&quot;err_msg&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcasecmp(cjson_err_msg-&gt;valuestring,<sp/></highlight><highlight class="stringliteral">&quot;success.&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;不是成功的响应信息<sp/>[%s]&quot;</highlight><highlight class="normal">,<sp/>cjson_err_msg-&gt;valuestring);</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/>cJSON*<sp/>cjson_result<sp/>=<sp/>cJSON_GetObjectItem(root_data,<sp/></highlight><highlight class="stringliteral">&quot;result&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/>cJSON*<sp/>cjson_result_root<sp/>=<sp/>cJSON_GetArrayItem(cjson_result,<sp/>0);</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>cjson_result_root-&gt;valuestring);</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="sevetest30___i_w_e_d_a_8h_1a2b1df1a1a353073fa2f8db3dd6fe3f26" kindref="member">sevetest30_asr_result_tex</ref>)</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/>ASR_RESULT_TEX_MALLOC:</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___i_w_e_d_a_8h_1a2b1df1a1a353073fa2f8db3dd6fe3f26" kindref="member">sevetest30_asr_result_tex</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)malloc(<ref refid="sevetest30___i_w_e_d_a_8h_1a0142330271f7fc6c2dcee1c5e773bba2" kindref="member">ASR_RESULT_TEX_BUF_MAX</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!<ref refid="sevetest30___i_w_e_d_a_8h_1a2b1df1a1a353073fa2f8db3dd6fe3f26" kindref="member">sevetest30_asr_result_tex</ref>)</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(1000));</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;申请sevetest30_asr_result_tex资源发现问题<sp/>正在重试&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___i_w_e_d_a_8h_1a2b1df1a1a353073fa2f8db3dd6fe3f26" kindref="member">sevetest30_asr_result_tex</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)malloc(<ref refid="sevetest30___i_w_e_d_a_8h_1a0142330271f7fc6c2dcee1c5e773bba2" kindref="member">ASR_RESULT_TEX_BUF_MAX</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(<ref refid="sevetest30___i_w_e_d_a_8h_1a2b1df1a1a353073fa2f8db3dd6fe3f26" kindref="member">sevetest30_asr_result_tex</ref>,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="sevetest30___i_w_e_d_a_8h_1a0142330271f7fc6c2dcee1c5e773bba2" kindref="member">ASR_RESULT_TEX_BUF_MAX</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(<ref refid="sevetest30___i_w_e_d_a_8h_1a2b1df1a1a353073fa2f8db3dd6fe3f26" kindref="member">sevetest30_asr_result_tex</ref>);</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sevetest30___i_w_e_d_a_8h_1a2b1df1a1a353073fa2f8db3dd6fe3f26" kindref="member">sevetest30_asr_result_tex</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ASR_RESULT_TEX_MALLOC;</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/>strncpy(<ref refid="sevetest30___i_w_e_d_a_8h_1a2b1df1a1a353073fa2f8db3dd6fe3f26" kindref="member">sevetest30_asr_result_tex</ref>,<sp/>cjson_result_root-&gt;valuestring,<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1a0142330271f7fc6c2dcee1c5e773bba2" kindref="member">ASR_RESULT_TEX_BUF_MAX</ref>);</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/>cJSON_Delete(root_data);</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1059"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight></codeline>
<codeline lineno="1066"><highlight class="normal">esp_err_t<sp/><ref refid="sevetest30___i_w_e_d_a_8c_1a13078dc6808f00e12a3e2625fe21f8f5" kindref="member">get_music_lyric_by_url</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>url,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len_max)<sp/>{</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;get_music_lyric_by_url&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Task_comp_flag<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight><highlight class="comment">//<sp/>任务是否完成标识</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/>snprintf(<ref refid="sevetest30___i_w_e_d_a_8h_1a2059450556bc82366d96a332d68881bf" kindref="member">http_get_url_buf</ref>,<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1a39df150cec693d7e56c68ce387ed6517" kindref="member">HTTP_BUF_MAX</ref>,<sp/>url);<sp/></highlight><highlight class="comment">//<sp/>确定请求URL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sevetest30___i_w_e_d_a_8c_1ab9c17de9ad3e974ac5dbcfa04b69aa17" kindref="member">http_init_get_request</ref>();</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/>xTaskCreatePinnedToCore(&amp;<ref refid="sevetest30___i_w_e_d_a_8h_1a028a26229a83f29f38df40c82a3715c1" kindref="member">http_get_request_send</ref>,<sp/></highlight><highlight class="stringliteral">&quot;http_get_request_send&quot;</highlight><highlight class="normal">,<sp/>8192,<sp/>&amp;Task_comp_flag,<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1a770e0b83bbde8146c2a2d75380e1e338" kindref="member">HTTP_TASK_PRIO</ref>,<sp/>NULL,<sp/><ref refid="sevetest30___i_w_e_d_a_8h_1a9df4f6c1214f4106dd604d535b4c9175" kindref="member">HTTP_TASK_CORE</ref>);<sp/></highlight><highlight class="comment">//<sp/>启动http传输任务,GET方式</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!Task_comp_flag)</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(200));</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//开始json解析</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/>cJSON*<sp/>root_data<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/>root_data<sp/>=<sp/>cJSON_Parse(<ref refid="sevetest30___i_w_e_d_a_8h_1a133d5084d12e7ff3fd5f9241628b1e06" kindref="member">http_get_out_buf</ref>);</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/>cJSON*<sp/>cjson_lyric<sp/>=<sp/>cJSON_GetObjectItem(root_data,<sp/></highlight><highlight class="stringliteral">&quot;lyric&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cjson_lyric)<sp/>{</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strlen(cjson_lyric-&gt;valuestring)<sp/>&lt;<sp/>len_max)<sp/>{</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(dest,<sp/>cjson_lyric-&gt;valuestring);</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cJSON_Delete(root_data);</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;歌词数据长度过大&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cJSON_Delete(root_data);</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_FAIL;</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGW(<ref refid="board_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;发现歌词获取对选定的音乐不支持或该音乐无歌词&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cJSON_Delete(root_data);</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_FAIL;</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1096"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="main/sevetest30_IWEDA.c"/>
  </compounddef>
</doxygen>
