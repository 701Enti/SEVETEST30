<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="zh">
  <compounddef id="board__ctrl_8h" kind="file" language="C++">
    <compoundname>board_ctrl.h</compoundname>
    <includes local="yes">esp_types.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="board__def_8h" local="yes">board_def.h</includes>
    <includes local="yes">audio_hal.h</includes>
    <includes local="yes">esxxx_common.h</includes>
    <includes refid="sevetest30__gpio_8h" local="yes">sevetest30_gpio.h</includes>
    <includes local="yes">driver/i2c.h</includes>
    <includes local="yes">driver/spi_common.h</includes>
    <includes local="yes">driver/spi_master.h</includes>
    <includes local="yes">esp_peripherals.h</includes>
    <includes refid="_b_l5372_8h" local="yes">BL5372.h</includes>
    <includedby refid="board_8h" local="yes">components/sevetest30_board/board.h</includedby>
    <includedby refid="gt32l32s0140_8h" local="yes">components/sevetest30_board/include/gt32l32s0140.h</includedby>
    <includedby refid="sevetest30___u_i_8h" local="yes">components/sevetest30_board/include/sevetest30_UI.h</includedby>
    <includedby refid="_a_g_s10_8c" local="yes">main/AGS10.c</includedby>
    <includedby refid="board__ctrl_8c" local="yes">main/board_ctrl.c</includedby>
    <includedby refid="gt32l32s0140_8c" local="yes">main/gt32l32s0140.c</includedby>
    <includedby refid="main_8c" local="yes">main/main.c</includedby>
    <includedby refid="sevetest30___b_w_e_d_a_8c" local="yes">main/sevetest30_BWEDA.c</includedby>
    <includedby refid="sevetest30___i_w_e_d_a_8c" local="yes">main/sevetest30_IWEDA.c</includedby>
    <includedby refid="sevetest30__sound_8c" local="yes">main/sevetest30_sound.c</includedby>
    <incdepgraph>
      <node id="1">
        <label>components/sevetest30_board/board_ctrl.h</label>
        <link refid="board__ctrl_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>board_def.h</label>
        <link refid="board__def_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>BL5372.h</label>
        <link refid="_b_l5372_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>TCA6416A.h</label>
        <link refid="_t_c_a6416_a_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>sevetest30_gpio.h</label>
        <link refid="sevetest30__gpio_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>audio_hal.h</label>
      </node>
      <node id="6">
        <label>driver/i2c.h</label>
      </node>
      <node id="12">
        <label>driver/spi_common.h</label>
      </node>
      <node id="13">
        <label>driver/spi_master.h</label>
      </node>
      <node id="7">
        <label>esp_gatts_api.h</label>
      </node>
      <node id="14">
        <label>esp_peripherals.h</label>
      </node>
      <node id="2">
        <label>esp_types.h</label>
      </node>
      <node id="8">
        <label>esxxx_common.h</label>
      </node>
      <node id="11">
        <label>stdbool.h</label>
      </node>
      <node id="3">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>components/sevetest30_board/board.c</label>
        <link refid="board_8c"/>
      </node>
      <node id="2">
        <label>components/sevetest30_board/board.h</label>
        <link refid="board_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>components/sevetest30_board/board_ctrl.h</label>
        <link refid="board__ctrl_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>components/sevetest30_board/board_pins_config.c</label>
        <link refid="board__pins__config_8c"/>
      </node>
      <node id="8">
        <label>components/sevetest30_board/include/gt32l32s0140.h</label>
        <link refid="gt32l32s0140_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>components/sevetest30_board/include/sevetest30_LedArray.h</label>
        <link refid="sevetest30___led_array_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>components/sevetest30_board/include/sevetest30_UI.h</label>
        <link refid="sevetest30___u_i_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>main/AGS10.c</label>
        <link refid="_a_g_s10_8c"/>
      </node>
      <node id="5">
        <label>main/board_ctrl.c</label>
        <link refid="board__ctrl_8c"/>
      </node>
      <node id="9">
        <label>main/gt32l32s0140.c</label>
        <link refid="gt32l32s0140_8c"/>
      </node>
      <node id="10">
        <label>main/main.c</label>
        <link refid="main_8c"/>
      </node>
      <node id="16">
        <label>main/sevetest30_BWEDA.c</label>
        <link refid="sevetest30___b_w_e_d_a_8c"/>
      </node>
      <node id="6">
        <label>main/sevetest30_IWEDA.c</label>
        <link refid="sevetest30___i_w_e_d_a_8c"/>
      </node>
      <node id="11">
        <label>main/sevetest30_LedArray.c</label>
        <link refid="sevetest30___led_array_8c"/>
      </node>
      <node id="14">
        <label>main/sevetest30_UI.c</label>
        <link refid="sevetest30___u_i_8c"/>
      </node>
      <node id="7">
        <label>main/sevetest30_sound.c</label>
        <link refid="sevetest30__sound_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structboard__ctrl__t" prot="public">board_ctrl_t</innerclass>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="board__ctrl_8h_1a5743515e10f317337f4c19563764b3dd" prot="public" static="no" strong="no">
        <type></type>
        <name>board_ctrl_select_t</name>
        <enumvalue id="board__ctrl_8h_1a5743515e10f317337f4c19563764b3dda2777537adcf560d7517d6044dfaa0ec6" prot="public">
          <name>BOARD_CTRL_ALL</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="board__ctrl_8h_1a5743515e10f317337f4c19563764b3ddaaba1ed6f5e268d7928bca6fb6aa5b730" prot="public">
          <name>BOARD_CTRL_DEVICE_I2C</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="board__ctrl_8h_1a5743515e10f317337f4c19563764b3dda00ce78d0281ebf4eac8197f29b462a0c" prot="public">
          <name>BOARD_CTRL_AMPLIFIER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="board__ctrl_8h_1a5743515e10f317337f4c19563764b3ddaa1994a9cfa0e397e7f029a739fc218fd" prot="public">
          <name>BOARD_CTRL_BOOST</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="board__ctrl_8h_1a5743515e10f317337f4c19563764b3dda3f9e5dee7c29db801ef9685b5e6273c9" prot="public">
          <name>BOARD_CTRL_CODEC_MODE_AND_STATUS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="board__ctrl_8h_1a5743515e10f317337f4c19563764b3dda7408df7590add2816fadd30c82f193a1" prot="public">
          <name>BOARD_CTRL_CODEC_DAC_PIN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="board__ctrl_8h_1a5743515e10f317337f4c19563764b3dda45ff7c9cffb0bc3835079d7e658aff56" prot="public">
          <name>BOARD_CTRL_CODEC_DAC_VOL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="board__ctrl_8h_1a5743515e10f317337f4c19563764b3dda02369bb3ac688cb27f1f5bb19d2dddc9" prot="public">
          <name>BOARD_CTRL_CODEC_ADC_PIN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="board__ctrl_8h_1a5743515e10f317337f4c19563764b3dda383b4d793e7eaa2c390e6b0bc1268625" prot="public">
          <name>BOARD_CTRL_CODEC_ADC_GAIN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="board__ctrl_8h_1a5743515e10f317337f4c19563764b3dda36b0bd04f0623bfb81b5c3b0c64ab786" prot="public">
          <name>BOARD_CTRL_EXT_IO</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/sevetest30_board/board_ctrl.h" line="51" column="1" bodyfile="components/sevetest30_board/board_ctrl.h" bodystart="52" bodyend="67"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="board__ctrl_8h_1a784ab0d9a5ec2940aba453a82d057502" prot="public" static="no">
        <type>struct board_ctrl_t</type>
        <definition>typedef struct board_ctrl_t board_ctrl_t</definition>
        <argsstring></argsstring>
        <name>board_ctrl_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/sevetest30_board/board_ctrl.h" line="89" column="14"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="board__ctrl_8h_1aeaaf905f04464312cce03723cf3a9307" prot="public" static="no" extern="yes" mutable="no">
        <type>esp_periph_set_handle_t</type>
        <definition>esp_periph_set_handle_t se30_periph_set_handle</definition>
        <argsstring></argsstring>
        <name>se30_periph_set_handle</name>
        <briefdescription>
<para>-<mdash/>注意：控制数据只有在完成sevetest30_board_ctrl工作之后，才会保存到board_ctrl_buf缓存中，如果果您只是外部定义了一个board_ctrl_t类型变量存储您的更改， </para>
        </briefdescription>
        <detaileddescription>
<para>意味着系统比如蓝牙读取，读到的数据将不是更新的数据，所以如果您要进行控制数据更改，务必保证sevetest30_board_ctrl工作进行了 如果只是单纯希望修改控制数据可以调用board_status_get直接获取系统缓存结构体指针进行修改，这样其他API读到数据将是更新的数据,但是只有sevetest30_board_ctrl被调用，硬件才会与控制数据同步 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/sevetest30_board/board_ctrl.h" line="48" column="32" bodyfile="main/board_ctrl.c" bodystart="46" bodyend="-1" declfile="components/sevetest30_board/board_ctrl.h" declline="48" declcolumn="32"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="board__ctrl_8h_1a2340de89d410eb14b6542a35c9bbee62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>esp_err_t sevetest30_all_device_init</definition>
        <argsstring>(board_ctrl_t *board_ctrl)</argsstring>
        <name>sevetest30_all_device_init</name>
        <param>
          <type><ref refid="structboard__ctrl__t" kindref="compound">board_ctrl_t</ref> *</type>
          <declname>board_ctrl</declname>
        </param>
        <briefdescription>
<para>全局设备初始化 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>board_ctrl</parametername>
</parameternamelist>
<parameterdescription>
<para>定义board_ctrl_t非指针类型全局变量，进行所有值设置后导入 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>board_device_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>设备句柄，定义board_device_handle_t非指针类型全局变量不进行任何更改，在进行一些活动时将使用其中句柄 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>成功 ESP_OK 失败 ESP_FAIL </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/sevetest30_board/board_ctrl.h" line="92" column="11" bodyfile="main/board_ctrl.c" bodystart="100" bodyend="119" declfile="components/sevetest30_board/board_ctrl.h" declline="92" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="board__ctrl_8h_1af56a4cb2a06ffa952db6fe69029d5a85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sevetest30_board_ctrl</definition>
        <argsstring>(board_ctrl_t *board_ctrl, board_ctrl_select_t ctrl_select)</argsstring>
        <name>sevetest30_board_ctrl</name>
        <param>
          <type><ref refid="structboard__ctrl__t" kindref="compound">board_ctrl_t</ref> *</type>
          <declname>board_ctrl</declname>
        </param>
        <param>
          <type><ref refid="board__ctrl_8h_1a5743515e10f317337f4c19563764b3dd" kindref="member">board_ctrl_select_t</ref></type>
          <declname>ctrl_select</declname>
        </param>
        <briefdescription>
<para>全局设备控制,外部函数应该调用board_status_get获取控制缓存变量,修改值后导入 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>board_ctrl</parametername>
</parameternamelist>
<parameterdescription>
<para>调用board_status_get()获取系统控制缓存结构体，进行需要修改后放入 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ctrl_select</parametername>
</parameternamelist>
<parameterdescription>
<para>选择控制的对象，这是一个枚举类型 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/sevetest30_board/board_ctrl.h" line="93" column="6" bodyfile="main/board_ctrl.c" bodystart="124" bodyend="188" declfile="components/sevetest30_board/board_ctrl.h" declline="93" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="board__ctrl_8h_1a2b26ac769d85017f68afa0878501cb90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void codechip_set</definition>
        <argsstring>(board_ctrl_t *board_ctrl)</argsstring>
        <name>codechip_set</name>
        <param>
          <type><ref refid="structboard__ctrl__t" kindref="compound">board_ctrl_t</ref> *</type>
          <declname>board_ctrl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/sevetest30_board/board_ctrl.h" line="94" column="6" declfile="components/sevetest30_board/board_ctrl.h" declline="94" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="board__ctrl_8h_1ac99044e3543686d249dffc95b1751527" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>esp_err_t device_i2c_init</definition>
        <argsstring>()</argsstring>
        <name>device_i2c_init</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/sevetest30_board/board_ctrl.h" line="95" column="11" bodyfile="main/board_ctrl.c" bodystart="72" bodyend="94" declfile="components/sevetest30_board/board_ctrl.h" declline="95" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="board__ctrl_8h_1a5c34b0544b36577b19ab541ee651e444" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structboard__ctrl__t" kindref="compound">board_ctrl_t</ref> *</type>
        <definition>board_ctrl_t * board_status_get</definition>
        <argsstring>()</argsstring>
        <name>board_status_get</name>
        <briefdescription>
<para>外部函数获取控制数据缓存 -----<mdash/>注意：控制数据只有在完成sevetest30_board_ctrl工作之后，才会保存到board_ctrl_buf缓存中，如果果您只是外部定义了一个board_ctrl_t类型变量存储您的更改， </para>
        </briefdescription>
        <detaileddescription>
<para>意味着系统比如蓝牙读取，读到的数据将不是更新的数据，所以如果您要进行控制数据更改，务必保证sevetest30_board_ctrl工作进行了 如果只是单纯希望修改控制数据可以调用board_status_get直接获取系统缓存结构体指针进行修改，这样其他API读到数据将是更新的数据,但是只有sevetest30_board_ctrl被调用，硬件才会与控制数据同步 <simplesect kind="return"><para>控制数据缓存结构体指针</para>
</simplesect>
外部函数获取控制数据缓存 -----<mdash/>注意：控制数据只有在完成sevetest30_board_ctrl工作之后，才会保存到board_ctrl_buf缓存中，如果果您只是外部定义了一个board_ctrl_t类型变量存储您的更改，</para>
<para><simplesect kind="return"><para>控制缓存结构体指针 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/sevetest30_board/board_ctrl.h" line="105" column="14" bodyfile="main/board_ctrl.c" bodystart="64" bodyend="67" declfile="components/sevetest30_board/board_ctrl.h" declline="105" declcolumn="14"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>701Enti<sp/>MIT<sp/>License</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>©<sp/>2024<sp/>&lt;701Enti<sp/>organization&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>“Software”),</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>“AS<sp/>IS”,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR<sp/>IMPLIED,</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>该文件归属701Enti组织，SEVETEST30开发团队应该提供责任性维护，，包含各种SE30针对性硬件控制</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>如您发现一些问题，请及时联系我们，我们非常感谢您的支持</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>敬告：文件包含<sp/>DEVICE_I2C_PORT<sp/>i2c通讯的初始化配置,需要调用device_i2c_init(),此处音频和其他设备共用端口，在audio_board_init()初始化，不需初始化</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>API规范:<sp/>sevetest30_board_ctrl<sp/>:<sp/><sp/>外部函数应该调用board_status_get获取控制缓存变量,修改值后导入</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>但是没有调用sevetest30_board_ctrl,board_ctrl_buf缓存数据将不会更新,而系统缓存的位置是board_ctrl_buf，而不是您自己定义的外部缓存，</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>github:<sp/>https://github.com/701Enti</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>bilibili:<sp/>701Enti</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;esp_types.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="board__def_8h" kindref="compound">board_def.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;audio_hal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;esxxx_common.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sevetest30__gpio_8h" kindref="compound">sevetest30_gpio.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;driver/i2c.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;driver/spi_common.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;driver/spi_master.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;esp_peripherals.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_b_l5372_8h" kindref="compound">BL5372.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>esp_periph_set_handle_t<sp/><ref refid="board__ctrl_8h_1aeaaf905f04464312cce03723cf3a9307" kindref="member">se30_periph_set_handle</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="board__ctrl_8h_1a5743515e10f317337f4c19563764b3dd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53" refid="board__ctrl_8h_1a5743515e10f317337f4c19563764b3dda2777537adcf560d7517d6044dfaa0ec6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="board__ctrl_8h_1a5743515e10f317337f4c19563764b3dda2777537adcf560d7517d6044dfaa0ec6" kindref="member">BOARD_CTRL_ALL</ref><sp/>=<sp/>1,</highlight><highlight class="comment">//对结构体存储的参数全部生效,包括没有在结构体初始化后修改值的存储参数</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="55" refid="board__ctrl_8h_1a5743515e10f317337f4c19563764b3ddaaba1ed6f5e268d7928bca6fb6aa5b730" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="board__ctrl_8h_1a5743515e10f317337f4c19563764b3ddaaba1ed6f5e268d7928bca6fb6aa5b730" kindref="member">BOARD_CTRL_DEVICE_I2C</ref>,</highlight><highlight class="comment">//设备I2C通讯相关(设备I2C端口号在board_def.h指定)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="board__ctrl_8h_1a5743515e10f317337f4c19563764b3dda00ce78d0281ebf4eac8197f29b462a0c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="board__ctrl_8h_1a5743515e10f317337f4c19563764b3dda00ce78d0281ebf4eac8197f29b462a0c" kindref="member">BOARD_CTRL_AMPLIFIER</ref>,</highlight><highlight class="comment">//音频功率放大器相关</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="board__ctrl_8h_1a5743515e10f317337f4c19563764b3ddaa1994a9cfa0e397e7f029a739fc218fd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="board__ctrl_8h_1a5743515e10f317337f4c19563764b3ddaa1994a9cfa0e397e7f029a739fc218fd" kindref="member">BOARD_CTRL_BOOST</ref>,</highlight><highlight class="comment">//5V辅助电源调整</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="board__ctrl_8h_1a5743515e10f317337f4c19563764b3dda3f9e5dee7c29db801ef9685b5e6273c9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="board__ctrl_8h_1a5743515e10f317337f4c19563764b3dda3f9e5dee7c29db801ef9685b5e6273c9" kindref="member">BOARD_CTRL_CODEC_MODE_AND_STATUS</ref>,</highlight><highlight class="comment">//响应board_ctrl_t下的<sp/>codec_mode<sp/>codec_audio_hal_ctrl<sp/>成员设定</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="board__ctrl_8h_1a5743515e10f317337f4c19563764b3dda7408df7590add2816fadd30c82f193a1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="board__ctrl_8h_1a5743515e10f317337f4c19563764b3dda7408df7590add2816fadd30c82f193a1" kindref="member">BOARD_CTRL_CODEC_DAC_PIN</ref>,</highlight><highlight class="comment">//响应board_ctrl_t下的<sp/>codec_dac_pin<sp/>成员设定</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="board__ctrl_8h_1a5743515e10f317337f4c19563764b3dda45ff7c9cffb0bc3835079d7e658aff56" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="board__ctrl_8h_1a5743515e10f317337f4c19563764b3dda45ff7c9cffb0bc3835079d7e658aff56" kindref="member">BOARD_CTRL_CODEC_DAC_VOL</ref>,</highlight><highlight class="comment">//响应board_ctrl_t下的<sp/>codec_dac_volume成员设定</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="board__ctrl_8h_1a5743515e10f317337f4c19563764b3dda02369bb3ac688cb27f1f5bb19d2dddc9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="board__ctrl_8h_1a5743515e10f317337f4c19563764b3dda02369bb3ac688cb27f1f5bb19d2dddc9" kindref="member">BOARD_CTRL_CODEC_ADC_PIN</ref>,</highlight><highlight class="comment">//响应board_ctrl_t下的<sp/>codec_adc_pin<sp/>成员设定</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="board__ctrl_8h_1a5743515e10f317337f4c19563764b3dda383b4d793e7eaa2c390e6b0bc1268625" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="board__ctrl_8h_1a5743515e10f317337f4c19563764b3dda383b4d793e7eaa2c390e6b0bc1268625" kindref="member">BOARD_CTRL_CODEC_ADC_GAIN</ref>,</highlight><highlight class="comment">//响应board_ctrl_t下的<sp/>codec_gain<sp/>成员设定</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="board__ctrl_8h_1a5743515e10f317337f4c19563764b3dda36b0bd04f0623bfb81b5c3b0c64ab786" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="board__ctrl_8h_1a5743515e10f317337f4c19563764b3dda36b0bd04f0623bfb81b5c3b0c64ab786" kindref="member">BOARD_CTRL_EXT_IO</ref>,</highlight><highlight class="comment">//根据p_ext_io_mode<sp/>p_ext_io_value刷新外部IO,如果您没有在之前调整p_ext_io_mode<sp/>p_ext_io_value的信息，这不会改变EXT_IO任何数值，但是会同步外部IO数据到这两个成员下</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal">}<sp/><ref refid="board__ctrl_8h_1a5743515e10f317337f4c19563764b3dd" kindref="member">board_ctrl_select_t</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//控制配置数据类型</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="structboard__ctrl__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structboard__ctrl__t" kindref="compound">board_ctrl_t</ref></highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="structboard__ctrl__t_1a8bf1c6fe99a2c85f16ecbeeb58ae1447" refkind="member"><highlight class="normal"><sp/><sp/><sp/>i2c_config_t*<sp/><ref refid="structboard__ctrl__t_1a8bf1c6fe99a2c85f16ecbeeb58ae1447" kindref="member">p_i2c_device_config</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">//设备I2C配置信息的地址,如果使用BOARD_CTRL_ALL,I2C配置在所有控制事务最前发生</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="structboard__ctrl__t_1a8551d7322dae40f59d3f79e68cb9a594" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_t_c_a6416_a__mode__t" kindref="compound">TCA6416A_mode_t</ref>*<sp/><ref refid="structboard__ctrl__t_1a8551d7322dae40f59d3f79e68cb9a594" kindref="member">p_ext_io_mode</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>存储IO模式信息的结构体的地址，数据是保持的</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="structboard__ctrl__t_1a2ca997b0da2941bcdd164673c32c5975" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_t_c_a6416_a__value__t" kindref="compound">TCA6416A_value_t</ref>*<sp/><ref refid="structboard__ctrl__t_1a2ca997b0da2941bcdd164673c32c5975" kindref="member">p_ext_io_value</ref>;<sp/></highlight><highlight class="comment">//<sp/>存储IO电平信息的结构体的地址，数据是保持的</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="structboard__ctrl__t_1ad92037e11f941ab6265efda74be5f453" refkind="member"><highlight class="normal"><sp/><sp/><sp/>uint8_t<sp/><ref refid="structboard__ctrl__t_1ad92037e11f941ab6265efda74be5f453" kindref="member">amplifier_volume</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>功放音量，取值为<sp/>0<sp/>-<sp/>(board_def.h中常量AMP_VOL_MAX的值),等于<sp/>0<sp/>时将使得功放进入低功耗关断状态</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="structboard__ctrl__t_1ac8b35aaf0c6f74736b097412ff655eed" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structboard__ctrl__t_1ac8b35aaf0c6f74736b097412ff655eed" kindref="member">amplifier_mute</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>功放静音使能，true/false</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="structboard__ctrl__t_1a75d27430d446afc5d0442d6163de5498" refkind="member"><highlight class="normal"><sp/><sp/><sp/>uint8_t<sp/><ref refid="structboard__ctrl__t_1a75d27430d446afc5d0442d6163de5498" kindref="member">boost_voltage</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>辅助电压，电压调整值<sp/>取值为<sp/>0<sp/>-<sp/>(board_def.h中常量BV_VOL_MAX的值)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="structboard__ctrl__t_1a34dbf8676e948fa4cf9ce72770b0200f" refkind="member"><highlight class="normal"><sp/><sp/><sp/>audio_hal_codec_mode_t<sp/><ref refid="structboard__ctrl__t_1a34dbf8676e948fa4cf9ce72770b0200f" kindref="member">codec_mode</ref>;</highlight><highlight class="comment">//音频编解码器模式</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="structboard__ctrl__t_1aa126f103381800fecd4974d7b4bacae4" refkind="member"><highlight class="normal"><sp/><sp/><sp/>audio_hal_ctrl_t<sp/><ref refid="structboard__ctrl__t_1aa126f103381800fecd4974d7b4bacae4" kindref="member">codec_audio_hal_ctrl</ref>;</highlight><highlight class="comment">//音频编解码器状态</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="structboard__ctrl__t_1a8f48f8a0970947466a8698fa76c56d26" refkind="member"><highlight class="normal"><sp/><sp/><sp/>es_dac_output_t<sp/><ref refid="structboard__ctrl__t_1a8f48f8a0970947466a8698fa76c56d26" kindref="member">codec_dac_pin</ref>;</highlight><highlight class="comment">//音频输出端选择</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="structboard__ctrl__t_1af4f84a0c5609a57e608829515ae2f1b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structboard__ctrl__t_1af4f84a0c5609a57e608829515ae2f1b3" kindref="member">codec_dac_volume</ref>;<sp/></highlight><highlight class="comment">//音频输出音量<sp/>0-100，如果设置为0,音频编解码器音频输出将静音</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="structboard__ctrl__t_1a3772271735f7ace1f0c13511f88bdbd2" refkind="member"><highlight class="normal"><sp/><sp/><sp/>es_mic_gain_t<sp/><sp/><sp/><ref refid="structboard__ctrl__t_1a3772271735f7ace1f0c13511f88bdbd2" kindref="member">codec_adc_gain</ref>;</highlight><highlight class="comment">//麦克风增益</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="structboard__ctrl__t_1a081056be281e2b8adbe714207b5dc862" refkind="member"><highlight class="normal"><sp/><sp/><sp/>es_adc_input_t<sp/><sp/><ref refid="structboard__ctrl__t_1a081056be281e2b8adbe714207b5dc862" kindref="member">codec_adc_pin</ref>;</highlight><highlight class="comment">//麦克风端选择</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="board__ctrl_8h_1a784ab0d9a5ec2940aba453a82d057502" refkind="member"><highlight class="normal">}<sp/><ref refid="structboard__ctrl__t" kindref="compound">board_ctrl_t</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal">esp_err_t<sp/><ref refid="board__ctrl_8h_1a2340de89d410eb14b6542a35c9bbee62" kindref="member">sevetest30_all_device_init</ref>(<ref refid="structboard__ctrl__t" kindref="compound">board_ctrl_t</ref><sp/>*board_ctrl);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="board__ctrl_8h_1af56a4cb2a06ffa952db6fe69029d5a85" kindref="member">sevetest30_board_ctrl</ref>(<ref refid="structboard__ctrl__t" kindref="compound">board_ctrl_t</ref><sp/>*board_ctrl,<sp/><ref refid="board__ctrl_8h_1a5743515e10f317337f4c19563764b3dd" kindref="member">board_ctrl_select_t</ref><sp/>ctrl_select);</highlight></codeline>
<codeline lineno="94" refid="board__ctrl_8h_1a2b26ac769d85017f68afa0878501cb90" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="board__ctrl_8h_1a2b26ac769d85017f68afa0878501cb90" kindref="member">codechip_set</ref>(<ref refid="structboard__ctrl__t" kindref="compound">board_ctrl_t</ref><sp/>*board_ctrl);</highlight></codeline>
<codeline lineno="95"><highlight class="normal">esp_err_t<sp/><ref refid="board__ctrl_8h_1ac99044e3543686d249dffc95b1751527" kindref="member">device_i2c_init</ref>();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>但是没有调用sevetest30_board_ctrl,board_ctrl_buf缓存数据将不会更新,而系统缓存的位置是board_ctrl_buf，而不是您自己定义的外部缓存，</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><ref refid="structboard__ctrl__t" kindref="compound">board_ctrl_t</ref><sp/>*<ref refid="board__ctrl_8h_1a5c34b0544b36577b19ab541ee651e444" kindref="member">board_status_get</ref>();</highlight></codeline>
    </programlisting>
    <location file="components/sevetest30_board/board_ctrl.h"/>
  </compounddef>
</doxygen>
